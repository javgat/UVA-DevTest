// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Option option
//
// swagger:model Option
type Option struct {

	// correcta
	// Example: false
	Correcta *bool `json:"correcta,omitempty"`

	// indice
	// Example: 1
	Indice int64 `json:"indice,omitempty"`

	// preguntaid
	// Example: 1
	Preguntaid int64 `json:"preguntaid,omitempty"`

	// texto
	// Example: Esta opcion es la buena
	// Required: true
	Texto *string `json:"texto"`
}

// Validate validates this option
func (m *Option) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTexto(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Option) validateTexto(formats strfmt.Registry) error {

	if err := validate.Required("texto", "body", m.Texto); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this option based on context it is used
func (m *Option) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Option) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Option) UnmarshalBinary(b []byte) error {
	var res Option
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
