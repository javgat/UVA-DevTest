// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// DeleteQuestionAnswerFromAnswerOKCode is the HTTP code returned for type DeleteQuestionAnswerFromAnswerOK
const DeleteQuestionAnswerFromAnswerOKCode int = 200

/*DeleteQuestionAnswerFromAnswerOK QuestionAnswer deleted

swagger:response deleteQuestionAnswerFromAnswerOK
*/
type DeleteQuestionAnswerFromAnswerOK struct {
}

// NewDeleteQuestionAnswerFromAnswerOK creates DeleteQuestionAnswerFromAnswerOK with default headers values
func NewDeleteQuestionAnswerFromAnswerOK() *DeleteQuestionAnswerFromAnswerOK {

	return &DeleteQuestionAnswerFromAnswerOK{}
}

// WriteResponse to the client
func (o *DeleteQuestionAnswerFromAnswerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteQuestionAnswerFromAnswerBadRequestCode is the HTTP code returned for type DeleteQuestionAnswerFromAnswerBadRequest
const DeleteQuestionAnswerFromAnswerBadRequestCode int = 400

/*DeleteQuestionAnswerFromAnswerBadRequest Incorrect Request, or invalida data

swagger:response deleteQuestionAnswerFromAnswerBadRequest
*/
type DeleteQuestionAnswerFromAnswerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteQuestionAnswerFromAnswerBadRequest creates DeleteQuestionAnswerFromAnswerBadRequest with default headers values
func NewDeleteQuestionAnswerFromAnswerBadRequest() *DeleteQuestionAnswerFromAnswerBadRequest {

	return &DeleteQuestionAnswerFromAnswerBadRequest{}
}

// WithPayload adds the payload to the delete question answer from answer bad request response
func (o *DeleteQuestionAnswerFromAnswerBadRequest) WithPayload(payload *models.Error) *DeleteQuestionAnswerFromAnswerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete question answer from answer bad request response
func (o *DeleteQuestionAnswerFromAnswerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteQuestionAnswerFromAnswerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteQuestionAnswerFromAnswerForbiddenCode is the HTTP code returned for type DeleteQuestionAnswerFromAnswerForbidden
const DeleteQuestionAnswerFromAnswerForbiddenCode int = 403

/*DeleteQuestionAnswerFromAnswerForbidden Not authorized to this content

swagger:response deleteQuestionAnswerFromAnswerForbidden
*/
type DeleteQuestionAnswerFromAnswerForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteQuestionAnswerFromAnswerForbidden creates DeleteQuestionAnswerFromAnswerForbidden with default headers values
func NewDeleteQuestionAnswerFromAnswerForbidden() *DeleteQuestionAnswerFromAnswerForbidden {

	return &DeleteQuestionAnswerFromAnswerForbidden{}
}

// WithPayload adds the payload to the delete question answer from answer forbidden response
func (o *DeleteQuestionAnswerFromAnswerForbidden) WithPayload(payload *models.Error) *DeleteQuestionAnswerFromAnswerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete question answer from answer forbidden response
func (o *DeleteQuestionAnswerFromAnswerForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteQuestionAnswerFromAnswerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteQuestionAnswerFromAnswerGoneCode is the HTTP code returned for type DeleteQuestionAnswerFromAnswerGone
const DeleteQuestionAnswerFromAnswerGoneCode int = 410

/*DeleteQuestionAnswerFromAnswerGone That resource does not exist

swagger:response deleteQuestionAnswerFromAnswerGone
*/
type DeleteQuestionAnswerFromAnswerGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteQuestionAnswerFromAnswerGone creates DeleteQuestionAnswerFromAnswerGone with default headers values
func NewDeleteQuestionAnswerFromAnswerGone() *DeleteQuestionAnswerFromAnswerGone {

	return &DeleteQuestionAnswerFromAnswerGone{}
}

// WithPayload adds the payload to the delete question answer from answer gone response
func (o *DeleteQuestionAnswerFromAnswerGone) WithPayload(payload *models.Error) *DeleteQuestionAnswerFromAnswerGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete question answer from answer gone response
func (o *DeleteQuestionAnswerFromAnswerGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteQuestionAnswerFromAnswerGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteQuestionAnswerFromAnswerInternalServerErrorCode is the HTTP code returned for type DeleteQuestionAnswerFromAnswerInternalServerError
const DeleteQuestionAnswerFromAnswerInternalServerErrorCode int = 500

/*DeleteQuestionAnswerFromAnswerInternalServerError Internal error

swagger:response deleteQuestionAnswerFromAnswerInternalServerError
*/
type DeleteQuestionAnswerFromAnswerInternalServerError struct {
}

// NewDeleteQuestionAnswerFromAnswerInternalServerError creates DeleteQuestionAnswerFromAnswerInternalServerError with default headers values
func NewDeleteQuestionAnswerFromAnswerInternalServerError() *DeleteQuestionAnswerFromAnswerInternalServerError {

	return &DeleteQuestionAnswerFromAnswerInternalServerError{}
}

// WriteResponse to the client
func (o *DeleteQuestionAnswerFromAnswerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
