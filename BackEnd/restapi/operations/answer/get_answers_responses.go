// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnswersOKCode is the HTTP code returned for type GetAnswersOK
const GetAnswersOKCode int = 200

/*GetAnswersOK Answers found

swagger:response getAnswersOK
*/
type GetAnswersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetAnswersOK creates GetAnswersOK with default headers values
func NewGetAnswersOK() *GetAnswersOK {

	return &GetAnswersOK{}
}

// WithPayload adds the payload to the get answers o k response
func (o *GetAnswersOK) WithPayload(payload []*models.Answer) *GetAnswersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers o k response
func (o *GetAnswersOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAnswersBadRequestCode is the HTTP code returned for type GetAnswersBadRequest
const GetAnswersBadRequestCode int = 400

/*GetAnswersBadRequest Incorrect Request, or invalida data

swagger:response getAnswersBadRequest
*/
type GetAnswersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersBadRequest creates GetAnswersBadRequest with default headers values
func NewGetAnswersBadRequest() *GetAnswersBadRequest {

	return &GetAnswersBadRequest{}
}

// WithPayload adds the payload to the get answers bad request response
func (o *GetAnswersBadRequest) WithPayload(payload *models.Error) *GetAnswersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers bad request response
func (o *GetAnswersBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersForbiddenCode is the HTTP code returned for type GetAnswersForbidden
const GetAnswersForbiddenCode int = 403

/*GetAnswersForbidden Not authorized to this content

swagger:response getAnswersForbidden
*/
type GetAnswersForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersForbidden creates GetAnswersForbidden with default headers values
func NewGetAnswersForbidden() *GetAnswersForbidden {

	return &GetAnswersForbidden{}
}

// WithPayload adds the payload to the get answers forbidden response
func (o *GetAnswersForbidden) WithPayload(payload *models.Error) *GetAnswersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers forbidden response
func (o *GetAnswersForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersInternalServerErrorCode is the HTTP code returned for type GetAnswersInternalServerError
const GetAnswersInternalServerErrorCode int = 500

/*GetAnswersInternalServerError Internal error

swagger:response getAnswersInternalServerError
*/
type GetAnswersInternalServerError struct {
}

// NewGetAnswersInternalServerError creates GetAnswersInternalServerError with default headers values
func NewGetAnswersInternalServerError() *GetAnswersInternalServerError {

	return &GetAnswersInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnswersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
