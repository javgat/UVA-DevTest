// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPreTestingOKCode is the HTTP code returned for type GetPreTestingOK
const GetPreTestingOKCode int = 200

/*GetPreTestingOK Testing found

swagger:response getPreTestingOK
*/
type GetPreTestingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Testing `json:"body,omitempty"`
}

// NewGetPreTestingOK creates GetPreTestingOK with default headers values
func NewGetPreTestingOK() *GetPreTestingOK {

	return &GetPreTestingOK{}
}

// WithPayload adds the payload to the get pre testing o k response
func (o *GetPreTestingOK) WithPayload(payload *models.Testing) *GetPreTestingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pre testing o k response
func (o *GetPreTestingOK) SetPayload(payload *models.Testing) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPreTestingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPreTestingBadRequestCode is the HTTP code returned for type GetPreTestingBadRequest
const GetPreTestingBadRequestCode int = 400

/*GetPreTestingBadRequest Incorrect Request, or invalida data

swagger:response getPreTestingBadRequest
*/
type GetPreTestingBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPreTestingBadRequest creates GetPreTestingBadRequest with default headers values
func NewGetPreTestingBadRequest() *GetPreTestingBadRequest {

	return &GetPreTestingBadRequest{}
}

// WithPayload adds the payload to the get pre testing bad request response
func (o *GetPreTestingBadRequest) WithPayload(payload *models.Error) *GetPreTestingBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pre testing bad request response
func (o *GetPreTestingBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPreTestingBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPreTestingForbiddenCode is the HTTP code returned for type GetPreTestingForbidden
const GetPreTestingForbiddenCode int = 403

/*GetPreTestingForbidden Not authorized to this content

swagger:response getPreTestingForbidden
*/
type GetPreTestingForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPreTestingForbidden creates GetPreTestingForbidden with default headers values
func NewGetPreTestingForbidden() *GetPreTestingForbidden {

	return &GetPreTestingForbidden{}
}

// WithPayload adds the payload to the get pre testing forbidden response
func (o *GetPreTestingForbidden) WithPayload(payload *models.Error) *GetPreTestingForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pre testing forbidden response
func (o *GetPreTestingForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPreTestingForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPreTestingGoneCode is the HTTP code returned for type GetPreTestingGone
const GetPreTestingGoneCode int = 410

/*GetPreTestingGone That resource does not exist

swagger:response getPreTestingGone
*/
type GetPreTestingGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPreTestingGone creates GetPreTestingGone with default headers values
func NewGetPreTestingGone() *GetPreTestingGone {

	return &GetPreTestingGone{}
}

// WithPayload adds the payload to the get pre testing gone response
func (o *GetPreTestingGone) WithPayload(payload *models.Error) *GetPreTestingGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pre testing gone response
func (o *GetPreTestingGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPreTestingGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPreTestingInternalServerErrorCode is the HTTP code returned for type GetPreTestingInternalServerError
const GetPreTestingInternalServerErrorCode int = 500

/*GetPreTestingInternalServerError Internal error

swagger:response getPreTestingInternalServerError
*/
type GetPreTestingInternalServerError struct {
}

// NewGetPreTestingInternalServerError creates GetPreTestingInternalServerError with default headers values
func NewGetPreTestingInternalServerError() *GetPreTestingInternalServerError {

	return &GetPreTestingInternalServerError{}
}

// WriteResponse to the client
func (o *GetPreTestingInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
