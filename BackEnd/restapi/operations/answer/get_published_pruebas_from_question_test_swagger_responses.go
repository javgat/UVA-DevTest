// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublishedPruebasFromQuestionTestOKCode is the HTTP code returned for type GetPublishedPruebasFromQuestionTestOK
const GetPublishedPruebasFromQuestionTestOKCode int = 200

/*GetPublishedPruebasFromQuestionTestOK pruebas found

swagger:response getPublishedPruebasFromQuestionTestOK
*/
type GetPublishedPruebasFromQuestionTestOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Prueba `json:"body,omitempty"`
}

// NewGetPublishedPruebasFromQuestionTestOK creates GetPublishedPruebasFromQuestionTestOK with default headers values
func NewGetPublishedPruebasFromQuestionTestOK() *GetPublishedPruebasFromQuestionTestOK {

	return &GetPublishedPruebasFromQuestionTestOK{}
}

// WithPayload adds the payload to the get published pruebas from question test o k response
func (o *GetPublishedPruebasFromQuestionTestOK) WithPayload(payload []*models.Prueba) *GetPublishedPruebasFromQuestionTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published pruebas from question test o k response
func (o *GetPublishedPruebasFromQuestionTestOK) SetPayload(payload []*models.Prueba) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedPruebasFromQuestionTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Prueba, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPublishedPruebasFromQuestionTestBadRequestCode is the HTTP code returned for type GetPublishedPruebasFromQuestionTestBadRequest
const GetPublishedPruebasFromQuestionTestBadRequestCode int = 400

/*GetPublishedPruebasFromQuestionTestBadRequest Incorrect Request, or invalida data

swagger:response getPublishedPruebasFromQuestionTestBadRequest
*/
type GetPublishedPruebasFromQuestionTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedPruebasFromQuestionTestBadRequest creates GetPublishedPruebasFromQuestionTestBadRequest with default headers values
func NewGetPublishedPruebasFromQuestionTestBadRequest() *GetPublishedPruebasFromQuestionTestBadRequest {

	return &GetPublishedPruebasFromQuestionTestBadRequest{}
}

// WithPayload adds the payload to the get published pruebas from question test bad request response
func (o *GetPublishedPruebasFromQuestionTestBadRequest) WithPayload(payload *models.Error) *GetPublishedPruebasFromQuestionTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published pruebas from question test bad request response
func (o *GetPublishedPruebasFromQuestionTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedPruebasFromQuestionTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedPruebasFromQuestionTestForbiddenCode is the HTTP code returned for type GetPublishedPruebasFromQuestionTestForbidden
const GetPublishedPruebasFromQuestionTestForbiddenCode int = 403

/*GetPublishedPruebasFromQuestionTestForbidden Not authorized to this content

swagger:response getPublishedPruebasFromQuestionTestForbidden
*/
type GetPublishedPruebasFromQuestionTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedPruebasFromQuestionTestForbidden creates GetPublishedPruebasFromQuestionTestForbidden with default headers values
func NewGetPublishedPruebasFromQuestionTestForbidden() *GetPublishedPruebasFromQuestionTestForbidden {

	return &GetPublishedPruebasFromQuestionTestForbidden{}
}

// WithPayload adds the payload to the get published pruebas from question test forbidden response
func (o *GetPublishedPruebasFromQuestionTestForbidden) WithPayload(payload *models.Error) *GetPublishedPruebasFromQuestionTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published pruebas from question test forbidden response
func (o *GetPublishedPruebasFromQuestionTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedPruebasFromQuestionTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedPruebasFromQuestionTestGoneCode is the HTTP code returned for type GetPublishedPruebasFromQuestionTestGone
const GetPublishedPruebasFromQuestionTestGoneCode int = 410

/*GetPublishedPruebasFromQuestionTestGone That resource does not exist

swagger:response getPublishedPruebasFromQuestionTestGone
*/
type GetPublishedPruebasFromQuestionTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedPruebasFromQuestionTestGone creates GetPublishedPruebasFromQuestionTestGone with default headers values
func NewGetPublishedPruebasFromQuestionTestGone() *GetPublishedPruebasFromQuestionTestGone {

	return &GetPublishedPruebasFromQuestionTestGone{}
}

// WithPayload adds the payload to the get published pruebas from question test gone response
func (o *GetPublishedPruebasFromQuestionTestGone) WithPayload(payload *models.Error) *GetPublishedPruebasFromQuestionTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published pruebas from question test gone response
func (o *GetPublishedPruebasFromQuestionTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedPruebasFromQuestionTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedPruebasFromQuestionTestInternalServerErrorCode is the HTTP code returned for type GetPublishedPruebasFromQuestionTestInternalServerError
const GetPublishedPruebasFromQuestionTestInternalServerErrorCode int = 500

/*GetPublishedPruebasFromQuestionTestInternalServerError Internal error

swagger:response getPublishedPruebasFromQuestionTestInternalServerError
*/
type GetPublishedPruebasFromQuestionTestInternalServerError struct {
}

// NewGetPublishedPruebasFromQuestionTestInternalServerError creates GetPublishedPruebasFromQuestionTestInternalServerError with default headers values
func NewGetPublishedPruebasFromQuestionTestInternalServerError() *GetPublishedPruebasFromQuestionTestInternalServerError {

	return &GetPublishedPruebasFromQuestionTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublishedPruebasFromQuestionTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
