// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetQuestionAnswersFromAnswerOKCode is the HTTP code returned for type GetQuestionAnswersFromAnswerOK
const GetQuestionAnswersFromAnswerOKCode int = 200

/*GetQuestionAnswersFromAnswerOK QuestionAnswers found

swagger:response getQuestionAnswersFromAnswerOK
*/
type GetQuestionAnswersFromAnswerOK struct {

	/*
	  In: Body
	*/
	Payload []*models.QuestionAnswer `json:"body,omitempty"`
}

// NewGetQuestionAnswersFromAnswerOK creates GetQuestionAnswersFromAnswerOK with default headers values
func NewGetQuestionAnswersFromAnswerOK() *GetQuestionAnswersFromAnswerOK {

	return &GetQuestionAnswersFromAnswerOK{}
}

// WithPayload adds the payload to the get question answers from answer o k response
func (o *GetQuestionAnswersFromAnswerOK) WithPayload(payload []*models.QuestionAnswer) *GetQuestionAnswersFromAnswerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question answers from answer o k response
func (o *GetQuestionAnswersFromAnswerOK) SetPayload(payload []*models.QuestionAnswer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionAnswersFromAnswerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.QuestionAnswer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetQuestionAnswersFromAnswerBadRequestCode is the HTTP code returned for type GetQuestionAnswersFromAnswerBadRequest
const GetQuestionAnswersFromAnswerBadRequestCode int = 400

/*GetQuestionAnswersFromAnswerBadRequest Incorrect Request, or invalida data

swagger:response getQuestionAnswersFromAnswerBadRequest
*/
type GetQuestionAnswersFromAnswerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionAnswersFromAnswerBadRequest creates GetQuestionAnswersFromAnswerBadRequest with default headers values
func NewGetQuestionAnswersFromAnswerBadRequest() *GetQuestionAnswersFromAnswerBadRequest {

	return &GetQuestionAnswersFromAnswerBadRequest{}
}

// WithPayload adds the payload to the get question answers from answer bad request response
func (o *GetQuestionAnswersFromAnswerBadRequest) WithPayload(payload *models.Error) *GetQuestionAnswersFromAnswerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question answers from answer bad request response
func (o *GetQuestionAnswersFromAnswerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionAnswersFromAnswerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionAnswersFromAnswerForbiddenCode is the HTTP code returned for type GetQuestionAnswersFromAnswerForbidden
const GetQuestionAnswersFromAnswerForbiddenCode int = 403

/*GetQuestionAnswersFromAnswerForbidden Not authorized to this content

swagger:response getQuestionAnswersFromAnswerForbidden
*/
type GetQuestionAnswersFromAnswerForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionAnswersFromAnswerForbidden creates GetQuestionAnswersFromAnswerForbidden with default headers values
func NewGetQuestionAnswersFromAnswerForbidden() *GetQuestionAnswersFromAnswerForbidden {

	return &GetQuestionAnswersFromAnswerForbidden{}
}

// WithPayload adds the payload to the get question answers from answer forbidden response
func (o *GetQuestionAnswersFromAnswerForbidden) WithPayload(payload *models.Error) *GetQuestionAnswersFromAnswerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question answers from answer forbidden response
func (o *GetQuestionAnswersFromAnswerForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionAnswersFromAnswerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionAnswersFromAnswerGoneCode is the HTTP code returned for type GetQuestionAnswersFromAnswerGone
const GetQuestionAnswersFromAnswerGoneCode int = 410

/*GetQuestionAnswersFromAnswerGone That user (password and name) does not exist

swagger:response getQuestionAnswersFromAnswerGone
*/
type GetQuestionAnswersFromAnswerGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionAnswersFromAnswerGone creates GetQuestionAnswersFromAnswerGone with default headers values
func NewGetQuestionAnswersFromAnswerGone() *GetQuestionAnswersFromAnswerGone {

	return &GetQuestionAnswersFromAnswerGone{}
}

// WithPayload adds the payload to the get question answers from answer gone response
func (o *GetQuestionAnswersFromAnswerGone) WithPayload(payload *models.Error) *GetQuestionAnswersFromAnswerGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question answers from answer gone response
func (o *GetQuestionAnswersFromAnswerGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionAnswersFromAnswerGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionAnswersFromAnswerInternalServerErrorCode is the HTTP code returned for type GetQuestionAnswersFromAnswerInternalServerError
const GetQuestionAnswersFromAnswerInternalServerErrorCode int = 500

/*GetQuestionAnswersFromAnswerInternalServerError Internal error

swagger:response getQuestionAnswersFromAnswerInternalServerError
*/
type GetQuestionAnswersFromAnswerInternalServerError struct {
}

// NewGetQuestionAnswersFromAnswerInternalServerError creates GetQuestionAnswersFromAnswerInternalServerError with default headers values
func NewGetQuestionAnswersFromAnswerInternalServerError() *GetQuestionAnswersFromAnswerInternalServerError {

	return &GetQuestionAnswersFromAnswerInternalServerError{}
}

// WriteResponse to the client
func (o *GetQuestionAnswersFromAnswerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
