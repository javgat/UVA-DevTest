// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetQuestionsFromAnswerOKCode is the HTTP code returned for type GetQuestionsFromAnswerOK
const GetQuestionsFromAnswerOKCode int = 200

/*GetQuestionsFromAnswerOK questions found

swagger:response getQuestionsFromAnswerOK
*/
type GetQuestionsFromAnswerOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetQuestionsFromAnswerOK creates GetQuestionsFromAnswerOK with default headers values
func NewGetQuestionsFromAnswerOK() *GetQuestionsFromAnswerOK {

	return &GetQuestionsFromAnswerOK{}
}

// WithPayload adds the payload to the get questions from answer o k response
func (o *GetQuestionsFromAnswerOK) WithPayload(payload []*models.Question) *GetQuestionsFromAnswerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from answer o k response
func (o *GetQuestionsFromAnswerOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromAnswerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetQuestionsFromAnswerBadRequestCode is the HTTP code returned for type GetQuestionsFromAnswerBadRequest
const GetQuestionsFromAnswerBadRequestCode int = 400

/*GetQuestionsFromAnswerBadRequest Incorrect Request, or invalida data

swagger:response getQuestionsFromAnswerBadRequest
*/
type GetQuestionsFromAnswerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromAnswerBadRequest creates GetQuestionsFromAnswerBadRequest with default headers values
func NewGetQuestionsFromAnswerBadRequest() *GetQuestionsFromAnswerBadRequest {

	return &GetQuestionsFromAnswerBadRequest{}
}

// WithPayload adds the payload to the get questions from answer bad request response
func (o *GetQuestionsFromAnswerBadRequest) WithPayload(payload *models.Error) *GetQuestionsFromAnswerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from answer bad request response
func (o *GetQuestionsFromAnswerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromAnswerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromAnswerForbiddenCode is the HTTP code returned for type GetQuestionsFromAnswerForbidden
const GetQuestionsFromAnswerForbiddenCode int = 403

/*GetQuestionsFromAnswerForbidden Not authorized to this content

swagger:response getQuestionsFromAnswerForbidden
*/
type GetQuestionsFromAnswerForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromAnswerForbidden creates GetQuestionsFromAnswerForbidden with default headers values
func NewGetQuestionsFromAnswerForbidden() *GetQuestionsFromAnswerForbidden {

	return &GetQuestionsFromAnswerForbidden{}
}

// WithPayload adds the payload to the get questions from answer forbidden response
func (o *GetQuestionsFromAnswerForbidden) WithPayload(payload *models.Error) *GetQuestionsFromAnswerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from answer forbidden response
func (o *GetQuestionsFromAnswerForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromAnswerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromAnswerGoneCode is the HTTP code returned for type GetQuestionsFromAnswerGone
const GetQuestionsFromAnswerGoneCode int = 410

/*GetQuestionsFromAnswerGone That resource does not exist

swagger:response getQuestionsFromAnswerGone
*/
type GetQuestionsFromAnswerGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromAnswerGone creates GetQuestionsFromAnswerGone with default headers values
func NewGetQuestionsFromAnswerGone() *GetQuestionsFromAnswerGone {

	return &GetQuestionsFromAnswerGone{}
}

// WithPayload adds the payload to the get questions from answer gone response
func (o *GetQuestionsFromAnswerGone) WithPayload(payload *models.Error) *GetQuestionsFromAnswerGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from answer gone response
func (o *GetQuestionsFromAnswerGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromAnswerGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromAnswerInternalServerErrorCode is the HTTP code returned for type GetQuestionsFromAnswerInternalServerError
const GetQuestionsFromAnswerInternalServerErrorCode int = 500

/*GetQuestionsFromAnswerInternalServerError Internal error

swagger:response getQuestionsFromAnswerInternalServerError
*/
type GetQuestionsFromAnswerInternalServerError struct {
}

// NewGetQuestionsFromAnswerInternalServerError creates GetQuestionsFromAnswerInternalServerError with default headers values
func NewGetQuestionsFromAnswerInternalServerError() *GetQuestionsFromAnswerInternalServerError {

	return &GetQuestionsFromAnswerInternalServerError{}
}

// WriteResponse to the client
func (o *GetQuestionsFromAnswerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
