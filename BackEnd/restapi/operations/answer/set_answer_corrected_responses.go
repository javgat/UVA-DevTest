// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// SetAnswerCorrectedOKCode is the HTTP code returned for type SetAnswerCorrectedOK
const SetAnswerCorrectedOKCode int = 200

/*SetAnswerCorrectedOK Answer updated

swagger:response setAnswerCorrectedOK
*/
type SetAnswerCorrectedOK struct {
}

// NewSetAnswerCorrectedOK creates SetAnswerCorrectedOK with default headers values
func NewSetAnswerCorrectedOK() *SetAnswerCorrectedOK {

	return &SetAnswerCorrectedOK{}
}

// WriteResponse to the client
func (o *SetAnswerCorrectedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SetAnswerCorrectedForbiddenCode is the HTTP code returned for type SetAnswerCorrectedForbidden
const SetAnswerCorrectedForbiddenCode int = 403

/*SetAnswerCorrectedForbidden Not authorized to this content

swagger:response setAnswerCorrectedForbidden
*/
type SetAnswerCorrectedForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetAnswerCorrectedForbidden creates SetAnswerCorrectedForbidden with default headers values
func NewSetAnswerCorrectedForbidden() *SetAnswerCorrectedForbidden {

	return &SetAnswerCorrectedForbidden{}
}

// WithPayload adds the payload to the set answer corrected forbidden response
func (o *SetAnswerCorrectedForbidden) WithPayload(payload *models.Error) *SetAnswerCorrectedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set answer corrected forbidden response
func (o *SetAnswerCorrectedForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAnswerCorrectedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetAnswerCorrectedGoneCode is the HTTP code returned for type SetAnswerCorrectedGone
const SetAnswerCorrectedGoneCode int = 410

/*SetAnswerCorrectedGone That resource does not exist

swagger:response setAnswerCorrectedGone
*/
type SetAnswerCorrectedGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetAnswerCorrectedGone creates SetAnswerCorrectedGone with default headers values
func NewSetAnswerCorrectedGone() *SetAnswerCorrectedGone {

	return &SetAnswerCorrectedGone{}
}

// WithPayload adds the payload to the set answer corrected gone response
func (o *SetAnswerCorrectedGone) WithPayload(payload *models.Error) *SetAnswerCorrectedGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set answer corrected gone response
func (o *SetAnswerCorrectedGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAnswerCorrectedGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetAnswerCorrectedInternalServerErrorCode is the HTTP code returned for type SetAnswerCorrectedInternalServerError
const SetAnswerCorrectedInternalServerErrorCode int = 500

/*SetAnswerCorrectedInternalServerError Internal error

swagger:response setAnswerCorrectedInternalServerError
*/
type SetAnswerCorrectedInternalServerError struct {
}

// NewSetAnswerCorrectedInternalServerError creates SetAnswerCorrectedInternalServerError with default headers values
func NewSetAnswerCorrectedInternalServerError() *SetAnswerCorrectedInternalServerError {

	return &SetAnswerCorrectedInternalServerError{}
}

// WriteResponse to the client
func (o *SetAnswerCorrectedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
