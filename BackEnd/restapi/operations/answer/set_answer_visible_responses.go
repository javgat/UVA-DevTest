// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// SetAnswerVisibleOKCode is the HTTP code returned for type SetAnswerVisibleOK
const SetAnswerVisibleOKCode int = 200

/*SetAnswerVisibleOK Answer updated

swagger:response setAnswerVisibleOK
*/
type SetAnswerVisibleOK struct {
}

// NewSetAnswerVisibleOK creates SetAnswerVisibleOK with default headers values
func NewSetAnswerVisibleOK() *SetAnswerVisibleOK {

	return &SetAnswerVisibleOK{}
}

// WriteResponse to the client
func (o *SetAnswerVisibleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SetAnswerVisibleForbiddenCode is the HTTP code returned for type SetAnswerVisibleForbidden
const SetAnswerVisibleForbiddenCode int = 403

/*SetAnswerVisibleForbidden Not authorized to this content

swagger:response setAnswerVisibleForbidden
*/
type SetAnswerVisibleForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetAnswerVisibleForbidden creates SetAnswerVisibleForbidden with default headers values
func NewSetAnswerVisibleForbidden() *SetAnswerVisibleForbidden {

	return &SetAnswerVisibleForbidden{}
}

// WithPayload adds the payload to the set answer visible forbidden response
func (o *SetAnswerVisibleForbidden) WithPayload(payload *models.Error) *SetAnswerVisibleForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set answer visible forbidden response
func (o *SetAnswerVisibleForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAnswerVisibleForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetAnswerVisibleGoneCode is the HTTP code returned for type SetAnswerVisibleGone
const SetAnswerVisibleGoneCode int = 410

/*SetAnswerVisibleGone That resource does not exist

swagger:response setAnswerVisibleGone
*/
type SetAnswerVisibleGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetAnswerVisibleGone creates SetAnswerVisibleGone with default headers values
func NewSetAnswerVisibleGone() *SetAnswerVisibleGone {

	return &SetAnswerVisibleGone{}
}

// WithPayload adds the payload to the set answer visible gone response
func (o *SetAnswerVisibleGone) WithPayload(payload *models.Error) *SetAnswerVisibleGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set answer visible gone response
func (o *SetAnswerVisibleGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetAnswerVisibleGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetAnswerVisibleInternalServerErrorCode is the HTTP code returned for type SetAnswerVisibleInternalServerError
const SetAnswerVisibleInternalServerErrorCode int = 500

/*SetAnswerVisibleInternalServerError Internal error

swagger:response setAnswerVisibleInternalServerError
*/
type SetAnswerVisibleInternalServerError struct {
}

// NewSetAnswerVisibleInternalServerError creates SetAnswerVisibleInternalServerError with default headers values
func NewSetAnswerVisibleInternalServerError() *SetAnswerVisibleInternalServerError {

	return &SetAnswerVisibleInternalServerError{}
}

// WriteResponse to the client
func (o *SetAnswerVisibleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
