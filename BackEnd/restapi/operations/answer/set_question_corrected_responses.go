// Code generated by go-swagger; DO NOT EDIT.

package answer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// SetQuestionCorrectedOKCode is the HTTP code returned for type SetQuestionCorrectedOK
const SetQuestionCorrectedOKCode int = 200

/*SetQuestionCorrectedOK Answer updated

swagger:response setQuestionCorrectedOK
*/
type SetQuestionCorrectedOK struct {
}

// NewSetQuestionCorrectedOK creates SetQuestionCorrectedOK with default headers values
func NewSetQuestionCorrectedOK() *SetQuestionCorrectedOK {

	return &SetQuestionCorrectedOK{}
}

// WriteResponse to the client
func (o *SetQuestionCorrectedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SetQuestionCorrectedForbiddenCode is the HTTP code returned for type SetQuestionCorrectedForbidden
const SetQuestionCorrectedForbiddenCode int = 403

/*SetQuestionCorrectedForbidden Not authorized to this content

swagger:response setQuestionCorrectedForbidden
*/
type SetQuestionCorrectedForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetQuestionCorrectedForbidden creates SetQuestionCorrectedForbidden with default headers values
func NewSetQuestionCorrectedForbidden() *SetQuestionCorrectedForbidden {

	return &SetQuestionCorrectedForbidden{}
}

// WithPayload adds the payload to the set question corrected forbidden response
func (o *SetQuestionCorrectedForbidden) WithPayload(payload *models.Error) *SetQuestionCorrectedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set question corrected forbidden response
func (o *SetQuestionCorrectedForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetQuestionCorrectedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetQuestionCorrectedGoneCode is the HTTP code returned for type SetQuestionCorrectedGone
const SetQuestionCorrectedGoneCode int = 410

/*SetQuestionCorrectedGone That resource does not exist

swagger:response setQuestionCorrectedGone
*/
type SetQuestionCorrectedGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetQuestionCorrectedGone creates SetQuestionCorrectedGone with default headers values
func NewSetQuestionCorrectedGone() *SetQuestionCorrectedGone {

	return &SetQuestionCorrectedGone{}
}

// WithPayload adds the payload to the set question corrected gone response
func (o *SetQuestionCorrectedGone) WithPayload(payload *models.Error) *SetQuestionCorrectedGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set question corrected gone response
func (o *SetQuestionCorrectedGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetQuestionCorrectedGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetQuestionCorrectedInternalServerErrorCode is the HTTP code returned for type SetQuestionCorrectedInternalServerError
const SetQuestionCorrectedInternalServerErrorCode int = 500

/*SetQuestionCorrectedInternalServerError Internal error

swagger:response setQuestionCorrectedInternalServerError
*/
type SetQuestionCorrectedInternalServerError struct {
}

// NewSetQuestionCorrectedInternalServerError creates SetQuestionCorrectedInternalServerError with default headers values
func NewSetQuestionCorrectedInternalServerError() *SetQuestionCorrectedInternalServerError {

	return &SetQuestionCorrectedInternalServerError{}
}

// WriteResponse to the client
func (o *SetQuestionCorrectedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
