// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// LogoutOKCode is the HTTP code returned for type LogoutOK
const LogoutOKCode int = 200

/*LogoutOK Logout cookie returned successfully

swagger:response logoutOK
*/
type LogoutOK struct {
	/*

	 */
	AuthJWTCookie   *http.Cookie
	ReAuthJWTCookie *http.Cookie
}

// NewLogoutOK creates LogoutOK with default headers values
func NewLogoutOK() *LogoutOK {

	return &LogoutOK{}
}

// WithAuthJWTCookie adds the AuthJWTCookie to the LogoutOK response
func (o *LogoutOK) WithAuth(cookie *http.Cookie) *LogoutOK {
	o.AuthJWTCookie = cookie
	return o
}

// WithReAuthJWTCookie adds the ReAuthJWTCookie to the LogoutOK response
func (o *LogoutOK) WithReAuth(cookie *http.Cookie) *LogoutOK {
	o.ReAuthJWTCookie = cookie
	return o
}

// SetAuthJWTCookie sets the AuthJWTCookie to the LogoutOK response
func (o *LogoutOK) SetAuthJWTCookie(cookie *http.Cookie) {
	o.AuthJWTCookie = cookie
}

// SetReAuthJWTCookie sets the ReAuthJWTCookie to the LogoutOK response
func (o *LogoutOK) SetReAuthJWTCookie(cookie *http.Cookie) {
	o.ReAuthJWTCookie = cookie
}

// WriteResponse to the client
func (o *LogoutOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Set-Cookie

	http.SetCookie(rw, o.AuthJWTCookie)
	http.SetCookie(rw, o.ReAuthJWTCookie)

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// LogoutBadRequestCode is the HTTP code returned for type LogoutBadRequest
const LogoutBadRequestCode int = 400

/*LogoutBadRequest Incorrect Request, or invalida data

swagger:response logoutBadRequest
*/
type LogoutBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLogoutBadRequest creates LogoutBadRequest with default headers values
func NewLogoutBadRequest() *LogoutBadRequest {

	return &LogoutBadRequest{}
}

// WithPayload adds the payload to the logout bad request response
func (o *LogoutBadRequest) WithPayload(payload *models.Error) *LogoutBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logout bad request response
func (o *LogoutBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogoutBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LogoutForbiddenCode is the HTTP code returned for type LogoutForbidden
const LogoutForbiddenCode int = 403

/*LogoutForbidden Not authorized to this content

swagger:response logoutForbidden
*/
type LogoutForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLogoutForbidden creates LogoutForbidden with default headers values
func NewLogoutForbidden() *LogoutForbidden {

	return &LogoutForbidden{}
}

// WithPayload adds the payload to the logout forbidden response
func (o *LogoutForbidden) WithPayload(payload *models.Error) *LogoutForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logout forbidden response
func (o *LogoutForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogoutForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LogoutGoneCode is the HTTP code returned for type LogoutGone
const LogoutGoneCode int = 410

/*LogoutGone That user (password and name) does not exist

swagger:response logoutGone
*/
type LogoutGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLogoutGone creates LogoutGone with default headers values
func NewLogoutGone() *LogoutGone {

	return &LogoutGone{}
}

// WithPayload adds the payload to the logout gone response
func (o *LogoutGone) WithPayload(payload *models.Error) *LogoutGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logout gone response
func (o *LogoutGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogoutGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LogoutInternalServerErrorCode is the HTTP code returned for type LogoutInternalServerError
const LogoutInternalServerErrorCode int = 500

/*LogoutInternalServerError Internal error

swagger:response logoutInternalServerError
*/
type LogoutInternalServerError struct {
}

// NewLogoutInternalServerError creates LogoutInternalServerError with default headers values
func NewLogoutInternalServerError() *LogoutInternalServerError {

	return &LogoutInternalServerError{}
}

// WriteResponse to the client
func (o *LogoutInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
