// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// ReloginOKCode is the HTTP code returned for type ReloginOK
const ReloginOKCode int = 200

/*ReloginOK Successful cookie modification. Session JWT returned in Cookie "Bearer-Cookie".

swagger:response reloginOK
*/
type ReloginOK struct {
	/*

	 */
	AuthJWTCookie   *http.Cookie
	ReAuthJWTCookie *http.Cookie
}

// NewReloginOK creates ReloginOK with default headers values
func NewReloginOK() *ReloginOK {

	return &ReloginOK{}
}

// WithAuthJWTCookie adds the AuthJWTCookie to the login created response
func (o *ReloginOK) WithAuth(cookie *http.Cookie) *ReloginOK {
	o.AuthJWTCookie = cookie
	return o
}

// WithReAuthJWTCookie adds the ReAuthJWTCookie to the login created response
func (o *ReloginOK) WithReAuth(cookie *http.Cookie) *ReloginOK {
	o.ReAuthJWTCookie = cookie
	return o
}

// SetAuthJWTCookie sets the AuthJWTCookie to the login created response
func (o *ReloginOK) SetAuthJWTCookie(cookie *http.Cookie) {
	o.AuthJWTCookie = cookie
}

// SetReAuthJWTCookie sets the ReAuthJWTCookie to the login created response
func (o *ReloginOK) SetReAuthJWTCookie(cookie *http.Cookie) {
	o.ReAuthJWTCookie = cookie
}

// WriteResponse to the client
func (o *ReloginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Set-Cookie

	http.SetCookie(rw, o.AuthJWTCookie)
	http.SetCookie(rw, o.ReAuthJWTCookie)

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ReloginBadRequestCode is the HTTP code returned for type ReloginBadRequest
const ReloginBadRequestCode int = 400

/*ReloginBadRequest Incorrect Request, or invalida data

swagger:response reloginBadRequest
*/
type ReloginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReloginBadRequest creates ReloginBadRequest with default headers values
func NewReloginBadRequest() *ReloginBadRequest {

	return &ReloginBadRequest{}
}

// WithPayload adds the payload to the relogin bad request response
func (o *ReloginBadRequest) WithPayload(payload *models.Error) *ReloginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the relogin bad request response
func (o *ReloginBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReloginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReloginForbiddenCode is the HTTP code returned for type ReloginForbidden
const ReloginForbiddenCode int = 403

/*ReloginForbidden Not authorized to this content

swagger:response reloginForbidden
*/
type ReloginForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReloginForbidden creates ReloginForbidden with default headers values
func NewReloginForbidden() *ReloginForbidden {

	return &ReloginForbidden{}
}

// WithPayload adds the payload to the relogin forbidden response
func (o *ReloginForbidden) WithPayload(payload *models.Error) *ReloginForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the relogin forbidden response
func (o *ReloginForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReloginForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReloginGoneCode is the HTTP code returned for type ReloginGone
const ReloginGoneCode int = 410

/*ReloginGone That user (password and name) does not exist

swagger:response reloginGone
*/
type ReloginGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReloginGone creates ReloginGone with default headers values
func NewReloginGone() *ReloginGone {

	return &ReloginGone{}
}

// WithPayload adds the payload to the relogin gone response
func (o *ReloginGone) WithPayload(payload *models.Error) *ReloginGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the relogin gone response
func (o *ReloginGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReloginGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReloginInternalServerErrorCode is the HTTP code returned for type ReloginInternalServerError
const ReloginInternalServerErrorCode int = 500

/*ReloginInternalServerError Internal error

swagger:response reloginInternalServerError
*/
type ReloginInternalServerError struct {
}

// NewReloginInternalServerError creates ReloginInternalServerError with default headers values
func NewReloginInternalServerError() *ReloginInternalServerError {

	return &ReloginInternalServerError{}
}

// WriteResponse to the client
func (o *ReloginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
