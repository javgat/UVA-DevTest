// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewGetCViewParams creates a new GetCViewParams object
//
// There are no default values defined in the spec.
func NewGetCViewParams() GetCViewParams {

	return GetCViewParams{}
}

// GetCViewParams contains all the bound params for the get c view operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetCView
type GetCViewParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Name of the rolBase to find its customized view
	  Required: true
	  In: path
	*/
	RolBase string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetCViewParams() beforehand.
func (o *GetCViewParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rRolBase, rhkRolBase, _ := route.Params.GetOK("rolBase")
	if err := o.bindRolBase(rRolBase, rhkRolBase, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindRolBase binds and validates parameter RolBase from path.
func (o *GetCViewParams) bindRolBase(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.RolBase = raw

	if err := o.validateRolBase(formats); err != nil {
		return err
	}

	return nil
}

// validateRolBase carries on validations for parameter RolBase
func (o *GetCViewParams) validateRolBase(formats strfmt.Registry) error {

	if err := validate.EnumCase("rolBase", "path", o.RolBase, []interface{}{"administrador", "profesor", "estudiante", "noRegistrado"}, true); err != nil {
		return err
	}

	return nil
}
