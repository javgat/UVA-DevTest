// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnswersFromPublishedTestsOKCode is the HTTP code returned for type GetAnswersFromPublishedTestsOK
const GetAnswersFromPublishedTestsOKCode int = 200

/*GetAnswersFromPublishedTestsOK Answers found

swagger:response getAnswersFromPublishedTestsOK
*/
type GetAnswersFromPublishedTestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetAnswersFromPublishedTestsOK creates GetAnswersFromPublishedTestsOK with default headers values
func NewGetAnswersFromPublishedTestsOK() *GetAnswersFromPublishedTestsOK {

	return &GetAnswersFromPublishedTestsOK{}
}

// WithPayload adds the payload to the get answers from published tests o k response
func (o *GetAnswersFromPublishedTestsOK) WithPayload(payload []*models.Answer) *GetAnswersFromPublishedTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from published tests o k response
func (o *GetAnswersFromPublishedTestsOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromPublishedTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAnswersFromPublishedTestsBadRequestCode is the HTTP code returned for type GetAnswersFromPublishedTestsBadRequest
const GetAnswersFromPublishedTestsBadRequestCode int = 400

/*GetAnswersFromPublishedTestsBadRequest Incorrect Request, or invalida data

swagger:response getAnswersFromPublishedTestsBadRequest
*/
type GetAnswersFromPublishedTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromPublishedTestsBadRequest creates GetAnswersFromPublishedTestsBadRequest with default headers values
func NewGetAnswersFromPublishedTestsBadRequest() *GetAnswersFromPublishedTestsBadRequest {

	return &GetAnswersFromPublishedTestsBadRequest{}
}

// WithPayload adds the payload to the get answers from published tests bad request response
func (o *GetAnswersFromPublishedTestsBadRequest) WithPayload(payload *models.Error) *GetAnswersFromPublishedTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from published tests bad request response
func (o *GetAnswersFromPublishedTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromPublishedTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromPublishedTestsForbiddenCode is the HTTP code returned for type GetAnswersFromPublishedTestsForbidden
const GetAnswersFromPublishedTestsForbiddenCode int = 403

/*GetAnswersFromPublishedTestsForbidden Not authorized to this content

swagger:response getAnswersFromPublishedTestsForbidden
*/
type GetAnswersFromPublishedTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromPublishedTestsForbidden creates GetAnswersFromPublishedTestsForbidden with default headers values
func NewGetAnswersFromPublishedTestsForbidden() *GetAnswersFromPublishedTestsForbidden {

	return &GetAnswersFromPublishedTestsForbidden{}
}

// WithPayload adds the payload to the get answers from published tests forbidden response
func (o *GetAnswersFromPublishedTestsForbidden) WithPayload(payload *models.Error) *GetAnswersFromPublishedTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from published tests forbidden response
func (o *GetAnswersFromPublishedTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromPublishedTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromPublishedTestsGoneCode is the HTTP code returned for type GetAnswersFromPublishedTestsGone
const GetAnswersFromPublishedTestsGoneCode int = 410

/*GetAnswersFromPublishedTestsGone That user (password and name) does not exist

swagger:response getAnswersFromPublishedTestsGone
*/
type GetAnswersFromPublishedTestsGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromPublishedTestsGone creates GetAnswersFromPublishedTestsGone with default headers values
func NewGetAnswersFromPublishedTestsGone() *GetAnswersFromPublishedTestsGone {

	return &GetAnswersFromPublishedTestsGone{}
}

// WithPayload adds the payload to the get answers from published tests gone response
func (o *GetAnswersFromPublishedTestsGone) WithPayload(payload *models.Error) *GetAnswersFromPublishedTestsGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from published tests gone response
func (o *GetAnswersFromPublishedTestsGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromPublishedTestsGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromPublishedTestsInternalServerErrorCode is the HTTP code returned for type GetAnswersFromPublishedTestsInternalServerError
const GetAnswersFromPublishedTestsInternalServerErrorCode int = 500

/*GetAnswersFromPublishedTestsInternalServerError Internal error

swagger:response getAnswersFromPublishedTestsInternalServerError
*/
type GetAnswersFromPublishedTestsInternalServerError struct {
}

// NewGetAnswersFromPublishedTestsInternalServerError creates GetAnswersFromPublishedTestsInternalServerError with default headers values
func NewGetAnswersFromPublishedTestsInternalServerError() *GetAnswersFromPublishedTestsInternalServerError {

	return &GetAnswersFromPublishedTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnswersFromPublishedTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
