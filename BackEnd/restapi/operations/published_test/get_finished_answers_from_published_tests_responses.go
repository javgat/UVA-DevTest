// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetFinishedAnswersFromPublishedTestsOKCode is the HTTP code returned for type GetFinishedAnswersFromPublishedTestsOK
const GetFinishedAnswersFromPublishedTestsOKCode int = 200

/*GetFinishedAnswersFromPublishedTestsOK Answers found

swagger:response getFinishedAnswersFromPublishedTestsOK
*/
type GetFinishedAnswersFromPublishedTestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetFinishedAnswersFromPublishedTestsOK creates GetFinishedAnswersFromPublishedTestsOK with default headers values
func NewGetFinishedAnswersFromPublishedTestsOK() *GetFinishedAnswersFromPublishedTestsOK {

	return &GetFinishedAnswersFromPublishedTestsOK{}
}

// WithPayload adds the payload to the get finished answers from published tests o k response
func (o *GetFinishedAnswersFromPublishedTestsOK) WithPayload(payload []*models.Answer) *GetFinishedAnswersFromPublishedTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get finished answers from published tests o k response
func (o *GetFinishedAnswersFromPublishedTestsOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFinishedAnswersFromPublishedTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFinishedAnswersFromPublishedTestsBadRequestCode is the HTTP code returned for type GetFinishedAnswersFromPublishedTestsBadRequest
const GetFinishedAnswersFromPublishedTestsBadRequestCode int = 400

/*GetFinishedAnswersFromPublishedTestsBadRequest Incorrect Request, or invalida data

swagger:response getFinishedAnswersFromPublishedTestsBadRequest
*/
type GetFinishedAnswersFromPublishedTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFinishedAnswersFromPublishedTestsBadRequest creates GetFinishedAnswersFromPublishedTestsBadRequest with default headers values
func NewGetFinishedAnswersFromPublishedTestsBadRequest() *GetFinishedAnswersFromPublishedTestsBadRequest {

	return &GetFinishedAnswersFromPublishedTestsBadRequest{}
}

// WithPayload adds the payload to the get finished answers from published tests bad request response
func (o *GetFinishedAnswersFromPublishedTestsBadRequest) WithPayload(payload *models.Error) *GetFinishedAnswersFromPublishedTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get finished answers from published tests bad request response
func (o *GetFinishedAnswersFromPublishedTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFinishedAnswersFromPublishedTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFinishedAnswersFromPublishedTestsForbiddenCode is the HTTP code returned for type GetFinishedAnswersFromPublishedTestsForbidden
const GetFinishedAnswersFromPublishedTestsForbiddenCode int = 403

/*GetFinishedAnswersFromPublishedTestsForbidden Not authorized to this content

swagger:response getFinishedAnswersFromPublishedTestsForbidden
*/
type GetFinishedAnswersFromPublishedTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFinishedAnswersFromPublishedTestsForbidden creates GetFinishedAnswersFromPublishedTestsForbidden with default headers values
func NewGetFinishedAnswersFromPublishedTestsForbidden() *GetFinishedAnswersFromPublishedTestsForbidden {

	return &GetFinishedAnswersFromPublishedTestsForbidden{}
}

// WithPayload adds the payload to the get finished answers from published tests forbidden response
func (o *GetFinishedAnswersFromPublishedTestsForbidden) WithPayload(payload *models.Error) *GetFinishedAnswersFromPublishedTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get finished answers from published tests forbidden response
func (o *GetFinishedAnswersFromPublishedTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFinishedAnswersFromPublishedTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFinishedAnswersFromPublishedTestsGoneCode is the HTTP code returned for type GetFinishedAnswersFromPublishedTestsGone
const GetFinishedAnswersFromPublishedTestsGoneCode int = 410

/*GetFinishedAnswersFromPublishedTestsGone That resource does not exist

swagger:response getFinishedAnswersFromPublishedTestsGone
*/
type GetFinishedAnswersFromPublishedTestsGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFinishedAnswersFromPublishedTestsGone creates GetFinishedAnswersFromPublishedTestsGone with default headers values
func NewGetFinishedAnswersFromPublishedTestsGone() *GetFinishedAnswersFromPublishedTestsGone {

	return &GetFinishedAnswersFromPublishedTestsGone{}
}

// WithPayload adds the payload to the get finished answers from published tests gone response
func (o *GetFinishedAnswersFromPublishedTestsGone) WithPayload(payload *models.Error) *GetFinishedAnswersFromPublishedTestsGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get finished answers from published tests gone response
func (o *GetFinishedAnswersFromPublishedTestsGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFinishedAnswersFromPublishedTestsGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFinishedAnswersFromPublishedTestsInternalServerErrorCode is the HTTP code returned for type GetFinishedAnswersFromPublishedTestsInternalServerError
const GetFinishedAnswersFromPublishedTestsInternalServerErrorCode int = 500

/*GetFinishedAnswersFromPublishedTestsInternalServerError Internal error

swagger:response getFinishedAnswersFromPublishedTestsInternalServerError
*/
type GetFinishedAnswersFromPublishedTestsInternalServerError struct {
}

// NewGetFinishedAnswersFromPublishedTestsInternalServerError creates GetFinishedAnswersFromPublishedTestsInternalServerError with default headers values
func NewGetFinishedAnswersFromPublishedTestsInternalServerError() *GetFinishedAnswersFromPublishedTestsInternalServerError {

	return &GetFinishedAnswersFromPublishedTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetFinishedAnswersFromPublishedTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
