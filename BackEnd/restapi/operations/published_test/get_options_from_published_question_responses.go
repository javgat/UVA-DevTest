// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetOptionsFromPublishedQuestionOKCode is the HTTP code returned for type GetOptionsFromPublishedQuestionOK
const GetOptionsFromPublishedQuestionOKCode int = 200

/*GetOptionsFromPublishedQuestionOK options found

swagger:response getOptionsFromPublishedQuestionOK
*/
type GetOptionsFromPublishedQuestionOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Option `json:"body,omitempty"`
}

// NewGetOptionsFromPublishedQuestionOK creates GetOptionsFromPublishedQuestionOK with default headers values
func NewGetOptionsFromPublishedQuestionOK() *GetOptionsFromPublishedQuestionOK {

	return &GetOptionsFromPublishedQuestionOK{}
}

// WithPayload adds the payload to the get options from published question o k response
func (o *GetOptionsFromPublishedQuestionOK) WithPayload(payload []*models.Option) *GetOptionsFromPublishedQuestionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from published question o k response
func (o *GetOptionsFromPublishedQuestionOK) SetPayload(payload []*models.Option) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromPublishedQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Option, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetOptionsFromPublishedQuestionBadRequestCode is the HTTP code returned for type GetOptionsFromPublishedQuestionBadRequest
const GetOptionsFromPublishedQuestionBadRequestCode int = 400

/*GetOptionsFromPublishedQuestionBadRequest Incorrect Request, or invalida data

swagger:response getOptionsFromPublishedQuestionBadRequest
*/
type GetOptionsFromPublishedQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromPublishedQuestionBadRequest creates GetOptionsFromPublishedQuestionBadRequest with default headers values
func NewGetOptionsFromPublishedQuestionBadRequest() *GetOptionsFromPublishedQuestionBadRequest {

	return &GetOptionsFromPublishedQuestionBadRequest{}
}

// WithPayload adds the payload to the get options from published question bad request response
func (o *GetOptionsFromPublishedQuestionBadRequest) WithPayload(payload *models.Error) *GetOptionsFromPublishedQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from published question bad request response
func (o *GetOptionsFromPublishedQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromPublishedQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromPublishedQuestionForbiddenCode is the HTTP code returned for type GetOptionsFromPublishedQuestionForbidden
const GetOptionsFromPublishedQuestionForbiddenCode int = 403

/*GetOptionsFromPublishedQuestionForbidden Not authorized to this content

swagger:response getOptionsFromPublishedQuestionForbidden
*/
type GetOptionsFromPublishedQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromPublishedQuestionForbidden creates GetOptionsFromPublishedQuestionForbidden with default headers values
func NewGetOptionsFromPublishedQuestionForbidden() *GetOptionsFromPublishedQuestionForbidden {

	return &GetOptionsFromPublishedQuestionForbidden{}
}

// WithPayload adds the payload to the get options from published question forbidden response
func (o *GetOptionsFromPublishedQuestionForbidden) WithPayload(payload *models.Error) *GetOptionsFromPublishedQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from published question forbidden response
func (o *GetOptionsFromPublishedQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromPublishedQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromPublishedQuestionGoneCode is the HTTP code returned for type GetOptionsFromPublishedQuestionGone
const GetOptionsFromPublishedQuestionGoneCode int = 410

/*GetOptionsFromPublishedQuestionGone That user (password and name) does not exist

swagger:response getOptionsFromPublishedQuestionGone
*/
type GetOptionsFromPublishedQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromPublishedQuestionGone creates GetOptionsFromPublishedQuestionGone with default headers values
func NewGetOptionsFromPublishedQuestionGone() *GetOptionsFromPublishedQuestionGone {

	return &GetOptionsFromPublishedQuestionGone{}
}

// WithPayload adds the payload to the get options from published question gone response
func (o *GetOptionsFromPublishedQuestionGone) WithPayload(payload *models.Error) *GetOptionsFromPublishedQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from published question gone response
func (o *GetOptionsFromPublishedQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromPublishedQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromPublishedQuestionInternalServerErrorCode is the HTTP code returned for type GetOptionsFromPublishedQuestionInternalServerError
const GetOptionsFromPublishedQuestionInternalServerErrorCode int = 500

/*GetOptionsFromPublishedQuestionInternalServerError Internal error

swagger:response getOptionsFromPublishedQuestionInternalServerError
*/
type GetOptionsFromPublishedQuestionInternalServerError struct {
}

// NewGetOptionsFromPublishedQuestionInternalServerError creates GetOptionsFromPublishedQuestionInternalServerError with default headers values
func NewGetOptionsFromPublishedQuestionInternalServerError() *GetOptionsFromPublishedQuestionInternalServerError {

	return &GetOptionsFromPublishedQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *GetOptionsFromPublishedQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
