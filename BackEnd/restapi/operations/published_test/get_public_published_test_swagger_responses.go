// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublicPublishedTestOKCode is the HTTP code returned for type GetPublicPublishedTestOK
const GetPublicPublishedTestOKCode int = 200

/*GetPublicPublishedTestOK PublishedTest found

swagger:response getPublicPublishedTestOK
*/
type GetPublicPublishedTestOK struct {

	/*
	  In: Body
	*/
	Payload *models.Test `json:"body,omitempty"`
}

// NewGetPublicPublishedTestOK creates GetPublicPublishedTestOK with default headers values
func NewGetPublicPublishedTestOK() *GetPublicPublishedTestOK {

	return &GetPublicPublishedTestOK{}
}

// WithPayload adds the payload to the get public published test o k response
func (o *GetPublicPublishedTestOK) WithPayload(payload *models.Test) *GetPublicPublishedTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published test o k response
func (o *GetPublicPublishedTestOK) SetPayload(payload *models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestBadRequestCode is the HTTP code returned for type GetPublicPublishedTestBadRequest
const GetPublicPublishedTestBadRequestCode int = 400

/*GetPublicPublishedTestBadRequest Incorrect Request, or invalida data

swagger:response getPublicPublishedTestBadRequest
*/
type GetPublicPublishedTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicPublishedTestBadRequest creates GetPublicPublishedTestBadRequest with default headers values
func NewGetPublicPublishedTestBadRequest() *GetPublicPublishedTestBadRequest {

	return &GetPublicPublishedTestBadRequest{}
}

// WithPayload adds the payload to the get public published test bad request response
func (o *GetPublicPublishedTestBadRequest) WithPayload(payload *models.Error) *GetPublicPublishedTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published test bad request response
func (o *GetPublicPublishedTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestForbiddenCode is the HTTP code returned for type GetPublicPublishedTestForbidden
const GetPublicPublishedTestForbiddenCode int = 403

/*GetPublicPublishedTestForbidden Not authorized to this content

swagger:response getPublicPublishedTestForbidden
*/
type GetPublicPublishedTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicPublishedTestForbidden creates GetPublicPublishedTestForbidden with default headers values
func NewGetPublicPublishedTestForbidden() *GetPublicPublishedTestForbidden {

	return &GetPublicPublishedTestForbidden{}
}

// WithPayload adds the payload to the get public published test forbidden response
func (o *GetPublicPublishedTestForbidden) WithPayload(payload *models.Error) *GetPublicPublishedTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published test forbidden response
func (o *GetPublicPublishedTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestGoneCode is the HTTP code returned for type GetPublicPublishedTestGone
const GetPublicPublishedTestGoneCode int = 410

/*GetPublicPublishedTestGone That user (password and name) does not exist

swagger:response getPublicPublishedTestGone
*/
type GetPublicPublishedTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicPublishedTestGone creates GetPublicPublishedTestGone with default headers values
func NewGetPublicPublishedTestGone() *GetPublicPublishedTestGone {

	return &GetPublicPublishedTestGone{}
}

// WithPayload adds the payload to the get public published test gone response
func (o *GetPublicPublishedTestGone) WithPayload(payload *models.Error) *GetPublicPublishedTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published test gone response
func (o *GetPublicPublishedTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestInternalServerErrorCode is the HTTP code returned for type GetPublicPublishedTestInternalServerError
const GetPublicPublishedTestInternalServerErrorCode int = 500

/*GetPublicPublishedTestInternalServerError Internal error

swagger:response getPublicPublishedTestInternalServerError
*/
type GetPublicPublishedTestInternalServerError struct {
}

// NewGetPublicPublishedTestInternalServerError creates GetPublicPublishedTestInternalServerError with default headers values
func NewGetPublicPublishedTestInternalServerError() *GetPublicPublishedTestInternalServerError {

	return &GetPublicPublishedTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublicPublishedTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
