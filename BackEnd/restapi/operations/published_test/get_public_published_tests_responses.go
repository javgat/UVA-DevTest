// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublicPublishedTestsOKCode is the HTTP code returned for type GetPublicPublishedTestsOK
const GetPublicPublishedTestsOKCode int = 200

/*GetPublicPublishedTestsOK PublishedTests found

swagger:response getPublicPublishedTestsOK
*/
type GetPublicPublishedTestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetPublicPublishedTestsOK creates GetPublicPublishedTestsOK with default headers values
func NewGetPublicPublishedTestsOK() *GetPublicPublishedTestsOK {

	return &GetPublicPublishedTestsOK{}
}

// WithPayload adds the payload to the get public published tests o k response
func (o *GetPublicPublishedTestsOK) WithPayload(payload []*models.Test) *GetPublicPublishedTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published tests o k response
func (o *GetPublicPublishedTestsOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPublicPublishedTestsBadRequestCode is the HTTP code returned for type GetPublicPublishedTestsBadRequest
const GetPublicPublishedTestsBadRequestCode int = 400

/*GetPublicPublishedTestsBadRequest Incorrect Request, or invalida data

swagger:response getPublicPublishedTestsBadRequest
*/
type GetPublicPublishedTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicPublishedTestsBadRequest creates GetPublicPublishedTestsBadRequest with default headers values
func NewGetPublicPublishedTestsBadRequest() *GetPublicPublishedTestsBadRequest {

	return &GetPublicPublishedTestsBadRequest{}
}

// WithPayload adds the payload to the get public published tests bad request response
func (o *GetPublicPublishedTestsBadRequest) WithPayload(payload *models.Error) *GetPublicPublishedTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published tests bad request response
func (o *GetPublicPublishedTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestsForbiddenCode is the HTTP code returned for type GetPublicPublishedTestsForbidden
const GetPublicPublishedTestsForbiddenCode int = 403

/*GetPublicPublishedTestsForbidden Not authorized to this content

swagger:response getPublicPublishedTestsForbidden
*/
type GetPublicPublishedTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicPublishedTestsForbidden creates GetPublicPublishedTestsForbidden with default headers values
func NewGetPublicPublishedTestsForbidden() *GetPublicPublishedTestsForbidden {

	return &GetPublicPublishedTestsForbidden{}
}

// WithPayload adds the payload to the get public published tests forbidden response
func (o *GetPublicPublishedTestsForbidden) WithPayload(payload *models.Error) *GetPublicPublishedTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public published tests forbidden response
func (o *GetPublicPublishedTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicPublishedTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicPublishedTestsInternalServerErrorCode is the HTTP code returned for type GetPublicPublishedTestsInternalServerError
const GetPublicPublishedTestsInternalServerErrorCode int = 500

/*GetPublicPublishedTestsInternalServerError Internal error

swagger:response getPublicPublishedTestsInternalServerError
*/
type GetPublicPublishedTestsInternalServerError struct {
}

// NewGetPublicPublishedTestsInternalServerError creates GetPublicPublishedTestsInternalServerError with default headers values
func NewGetPublicPublishedTestsInternalServerError() *GetPublicPublishedTestsInternalServerError {

	return &GetPublicPublishedTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublicPublishedTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
