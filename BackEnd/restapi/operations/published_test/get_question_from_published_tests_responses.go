// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetQuestionFromPublishedTestsOKCode is the HTTP code returned for type GetQuestionFromPublishedTestsOK
const GetQuestionFromPublishedTestsOKCode int = 200

/*GetQuestionFromPublishedTestsOK Question found

swagger:response getQuestionFromPublishedTestsOK
*/
type GetQuestionFromPublishedTestsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Question `json:"body,omitempty"`
}

// NewGetQuestionFromPublishedTestsOK creates GetQuestionFromPublishedTestsOK with default headers values
func NewGetQuestionFromPublishedTestsOK() *GetQuestionFromPublishedTestsOK {

	return &GetQuestionFromPublishedTestsOK{}
}

// WithPayload adds the payload to the get question from published tests o k response
func (o *GetQuestionFromPublishedTestsOK) WithPayload(payload *models.Question) *GetQuestionFromPublishedTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question from published tests o k response
func (o *GetQuestionFromPublishedTestsOK) SetPayload(payload *models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionFromPublishedTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionFromPublishedTestsBadRequestCode is the HTTP code returned for type GetQuestionFromPublishedTestsBadRequest
const GetQuestionFromPublishedTestsBadRequestCode int = 400

/*GetQuestionFromPublishedTestsBadRequest Incorrect Request, or invalida data

swagger:response getQuestionFromPublishedTestsBadRequest
*/
type GetQuestionFromPublishedTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionFromPublishedTestsBadRequest creates GetQuestionFromPublishedTestsBadRequest with default headers values
func NewGetQuestionFromPublishedTestsBadRequest() *GetQuestionFromPublishedTestsBadRequest {

	return &GetQuestionFromPublishedTestsBadRequest{}
}

// WithPayload adds the payload to the get question from published tests bad request response
func (o *GetQuestionFromPublishedTestsBadRequest) WithPayload(payload *models.Error) *GetQuestionFromPublishedTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question from published tests bad request response
func (o *GetQuestionFromPublishedTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionFromPublishedTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionFromPublishedTestsForbiddenCode is the HTTP code returned for type GetQuestionFromPublishedTestsForbidden
const GetQuestionFromPublishedTestsForbiddenCode int = 403

/*GetQuestionFromPublishedTestsForbidden Not authorized to this content

swagger:response getQuestionFromPublishedTestsForbidden
*/
type GetQuestionFromPublishedTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionFromPublishedTestsForbidden creates GetQuestionFromPublishedTestsForbidden with default headers values
func NewGetQuestionFromPublishedTestsForbidden() *GetQuestionFromPublishedTestsForbidden {

	return &GetQuestionFromPublishedTestsForbidden{}
}

// WithPayload adds the payload to the get question from published tests forbidden response
func (o *GetQuestionFromPublishedTestsForbidden) WithPayload(payload *models.Error) *GetQuestionFromPublishedTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question from published tests forbidden response
func (o *GetQuestionFromPublishedTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionFromPublishedTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionFromPublishedTestsGoneCode is the HTTP code returned for type GetQuestionFromPublishedTestsGone
const GetQuestionFromPublishedTestsGoneCode int = 410

/*GetQuestionFromPublishedTestsGone That user (password and name) does not exist

swagger:response getQuestionFromPublishedTestsGone
*/
type GetQuestionFromPublishedTestsGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionFromPublishedTestsGone creates GetQuestionFromPublishedTestsGone with default headers values
func NewGetQuestionFromPublishedTestsGone() *GetQuestionFromPublishedTestsGone {

	return &GetQuestionFromPublishedTestsGone{}
}

// WithPayload adds the payload to the get question from published tests gone response
func (o *GetQuestionFromPublishedTestsGone) WithPayload(payload *models.Error) *GetQuestionFromPublishedTestsGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get question from published tests gone response
func (o *GetQuestionFromPublishedTestsGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionFromPublishedTestsGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionFromPublishedTestsInternalServerErrorCode is the HTTP code returned for type GetQuestionFromPublishedTestsInternalServerError
const GetQuestionFromPublishedTestsInternalServerErrorCode int = 500

/*GetQuestionFromPublishedTestsInternalServerError Internal error

swagger:response getQuestionFromPublishedTestsInternalServerError
*/
type GetQuestionFromPublishedTestsInternalServerError struct {
}

// NewGetQuestionFromPublishedTestsInternalServerError creates GetQuestionFromPublishedTestsInternalServerError with default headers values
func NewGetQuestionFromPublishedTestsInternalServerError() *GetQuestionFromPublishedTestsInternalServerError {

	return &GetQuestionFromPublishedTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetQuestionFromPublishedTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
