// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetQuestionsFromPublishedTestsOKCode is the HTTP code returned for type GetQuestionsFromPublishedTestsOK
const GetQuestionsFromPublishedTestsOKCode int = 200

/*GetQuestionsFromPublishedTestsOK Questions found

swagger:response getQuestionsFromPublishedTestsOK
*/
type GetQuestionsFromPublishedTestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetQuestionsFromPublishedTestsOK creates GetQuestionsFromPublishedTestsOK with default headers values
func NewGetQuestionsFromPublishedTestsOK() *GetQuestionsFromPublishedTestsOK {

	return &GetQuestionsFromPublishedTestsOK{}
}

// WithPayload adds the payload to the get questions from published tests o k response
func (o *GetQuestionsFromPublishedTestsOK) WithPayload(payload []*models.Question) *GetQuestionsFromPublishedTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from published tests o k response
func (o *GetQuestionsFromPublishedTestsOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromPublishedTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetQuestionsFromPublishedTestsBadRequestCode is the HTTP code returned for type GetQuestionsFromPublishedTestsBadRequest
const GetQuestionsFromPublishedTestsBadRequestCode int = 400

/*GetQuestionsFromPublishedTestsBadRequest Incorrect Request, or invalida data

swagger:response getQuestionsFromPublishedTestsBadRequest
*/
type GetQuestionsFromPublishedTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromPublishedTestsBadRequest creates GetQuestionsFromPublishedTestsBadRequest with default headers values
func NewGetQuestionsFromPublishedTestsBadRequest() *GetQuestionsFromPublishedTestsBadRequest {

	return &GetQuestionsFromPublishedTestsBadRequest{}
}

// WithPayload adds the payload to the get questions from published tests bad request response
func (o *GetQuestionsFromPublishedTestsBadRequest) WithPayload(payload *models.Error) *GetQuestionsFromPublishedTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from published tests bad request response
func (o *GetQuestionsFromPublishedTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromPublishedTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromPublishedTestsForbiddenCode is the HTTP code returned for type GetQuestionsFromPublishedTestsForbidden
const GetQuestionsFromPublishedTestsForbiddenCode int = 403

/*GetQuestionsFromPublishedTestsForbidden Not authorized to this content

swagger:response getQuestionsFromPublishedTestsForbidden
*/
type GetQuestionsFromPublishedTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromPublishedTestsForbidden creates GetQuestionsFromPublishedTestsForbidden with default headers values
func NewGetQuestionsFromPublishedTestsForbidden() *GetQuestionsFromPublishedTestsForbidden {

	return &GetQuestionsFromPublishedTestsForbidden{}
}

// WithPayload adds the payload to the get questions from published tests forbidden response
func (o *GetQuestionsFromPublishedTestsForbidden) WithPayload(payload *models.Error) *GetQuestionsFromPublishedTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from published tests forbidden response
func (o *GetQuestionsFromPublishedTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromPublishedTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromPublishedTestsGoneCode is the HTTP code returned for type GetQuestionsFromPublishedTestsGone
const GetQuestionsFromPublishedTestsGoneCode int = 410

/*GetQuestionsFromPublishedTestsGone That user (password and name) does not exist

swagger:response getQuestionsFromPublishedTestsGone
*/
type GetQuestionsFromPublishedTestsGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsFromPublishedTestsGone creates GetQuestionsFromPublishedTestsGone with default headers values
func NewGetQuestionsFromPublishedTestsGone() *GetQuestionsFromPublishedTestsGone {

	return &GetQuestionsFromPublishedTestsGone{}
}

// WithPayload adds the payload to the get questions from published tests gone response
func (o *GetQuestionsFromPublishedTestsGone) WithPayload(payload *models.Error) *GetQuestionsFromPublishedTestsGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions from published tests gone response
func (o *GetQuestionsFromPublishedTestsGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsFromPublishedTestsGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsFromPublishedTestsInternalServerErrorCode is the HTTP code returned for type GetQuestionsFromPublishedTestsInternalServerError
const GetQuestionsFromPublishedTestsInternalServerErrorCode int = 500

/*GetQuestionsFromPublishedTestsInternalServerError Internal error

swagger:response getQuestionsFromPublishedTestsInternalServerError
*/
type GetQuestionsFromPublishedTestsInternalServerError struct {
}

// NewGetQuestionsFromPublishedTestsInternalServerError creates GetQuestionsFromPublishedTestsInternalServerError with default headers values
func NewGetQuestionsFromPublishedTestsInternalServerError() *GetQuestionsFromPublishedTestsInternalServerError {

	return &GetQuestionsFromPublishedTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetQuestionsFromPublishedTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
