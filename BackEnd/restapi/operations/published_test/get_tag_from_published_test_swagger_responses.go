// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTagFromPublishedTestOKCode is the HTTP code returned for type GetTagFromPublishedTestOK
const GetTagFromPublishedTestOKCode int = 200

/*GetTagFromPublishedTestOK tag found

swagger:response getTagFromPublishedTestOK
*/
type GetTagFromPublishedTestOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tag `json:"body,omitempty"`
}

// NewGetTagFromPublishedTestOK creates GetTagFromPublishedTestOK with default headers values
func NewGetTagFromPublishedTestOK() *GetTagFromPublishedTestOK {

	return &GetTagFromPublishedTestOK{}
}

// WithPayload adds the payload to the get tag from published test o k response
func (o *GetTagFromPublishedTestOK) WithPayload(payload *models.Tag) *GetTagFromPublishedTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from published test o k response
func (o *GetTagFromPublishedTestOK) SetPayload(payload *models.Tag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromPublishedTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromPublishedTestBadRequestCode is the HTTP code returned for type GetTagFromPublishedTestBadRequest
const GetTagFromPublishedTestBadRequestCode int = 400

/*GetTagFromPublishedTestBadRequest Incorrect Request, or invalida data

swagger:response getTagFromPublishedTestBadRequest
*/
type GetTagFromPublishedTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromPublishedTestBadRequest creates GetTagFromPublishedTestBadRequest with default headers values
func NewGetTagFromPublishedTestBadRequest() *GetTagFromPublishedTestBadRequest {

	return &GetTagFromPublishedTestBadRequest{}
}

// WithPayload adds the payload to the get tag from published test bad request response
func (o *GetTagFromPublishedTestBadRequest) WithPayload(payload *models.Error) *GetTagFromPublishedTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from published test bad request response
func (o *GetTagFromPublishedTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromPublishedTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromPublishedTestForbiddenCode is the HTTP code returned for type GetTagFromPublishedTestForbidden
const GetTagFromPublishedTestForbiddenCode int = 403

/*GetTagFromPublishedTestForbidden Not authorized to this content

swagger:response getTagFromPublishedTestForbidden
*/
type GetTagFromPublishedTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromPublishedTestForbidden creates GetTagFromPublishedTestForbidden with default headers values
func NewGetTagFromPublishedTestForbidden() *GetTagFromPublishedTestForbidden {

	return &GetTagFromPublishedTestForbidden{}
}

// WithPayload adds the payload to the get tag from published test forbidden response
func (o *GetTagFromPublishedTestForbidden) WithPayload(payload *models.Error) *GetTagFromPublishedTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from published test forbidden response
func (o *GetTagFromPublishedTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromPublishedTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromPublishedTestGoneCode is the HTTP code returned for type GetTagFromPublishedTestGone
const GetTagFromPublishedTestGoneCode int = 410

/*GetTagFromPublishedTestGone That resource does not exist

swagger:response getTagFromPublishedTestGone
*/
type GetTagFromPublishedTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromPublishedTestGone creates GetTagFromPublishedTestGone with default headers values
func NewGetTagFromPublishedTestGone() *GetTagFromPublishedTestGone {

	return &GetTagFromPublishedTestGone{}
}

// WithPayload adds the payload to the get tag from published test gone response
func (o *GetTagFromPublishedTestGone) WithPayload(payload *models.Error) *GetTagFromPublishedTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from published test gone response
func (o *GetTagFromPublishedTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromPublishedTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromPublishedTestInternalServerErrorCode is the HTTP code returned for type GetTagFromPublishedTestInternalServerError
const GetTagFromPublishedTestInternalServerErrorCode int = 500

/*GetTagFromPublishedTestInternalServerError Internal error

swagger:response getTagFromPublishedTestInternalServerError
*/
type GetTagFromPublishedTestInternalServerError struct {
}

// NewGetTagFromPublishedTestInternalServerError creates GetTagFromPublishedTestInternalServerError with default headers values
func NewGetTagFromPublishedTestInternalServerError() *GetTagFromPublishedTestInternalServerError {

	return &GetTagFromPublishedTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetTagFromPublishedTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
