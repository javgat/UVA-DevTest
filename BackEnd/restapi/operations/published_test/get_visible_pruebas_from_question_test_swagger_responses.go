// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetVisiblePruebasFromQuestionTestOKCode is the HTTP code returned for type GetVisiblePruebasFromQuestionTestOK
const GetVisiblePruebasFromQuestionTestOKCode int = 200

/*GetVisiblePruebasFromQuestionTestOK pruebas visibles found

swagger:response getVisiblePruebasFromQuestionTestOK
*/
type GetVisiblePruebasFromQuestionTestOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Prueba `json:"body,omitempty"`
}

// NewGetVisiblePruebasFromQuestionTestOK creates GetVisiblePruebasFromQuestionTestOK with default headers values
func NewGetVisiblePruebasFromQuestionTestOK() *GetVisiblePruebasFromQuestionTestOK {

	return &GetVisiblePruebasFromQuestionTestOK{}
}

// WithPayload adds the payload to the get visible pruebas from question test o k response
func (o *GetVisiblePruebasFromQuestionTestOK) WithPayload(payload []*models.Prueba) *GetVisiblePruebasFromQuestionTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get visible pruebas from question test o k response
func (o *GetVisiblePruebasFromQuestionTestOK) SetPayload(payload []*models.Prueba) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVisiblePruebasFromQuestionTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Prueba, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetVisiblePruebasFromQuestionTestBadRequestCode is the HTTP code returned for type GetVisiblePruebasFromQuestionTestBadRequest
const GetVisiblePruebasFromQuestionTestBadRequestCode int = 400

/*GetVisiblePruebasFromQuestionTestBadRequest Incorrect Request, or invalida data

swagger:response getVisiblePruebasFromQuestionTestBadRequest
*/
type GetVisiblePruebasFromQuestionTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVisiblePruebasFromQuestionTestBadRequest creates GetVisiblePruebasFromQuestionTestBadRequest with default headers values
func NewGetVisiblePruebasFromQuestionTestBadRequest() *GetVisiblePruebasFromQuestionTestBadRequest {

	return &GetVisiblePruebasFromQuestionTestBadRequest{}
}

// WithPayload adds the payload to the get visible pruebas from question test bad request response
func (o *GetVisiblePruebasFromQuestionTestBadRequest) WithPayload(payload *models.Error) *GetVisiblePruebasFromQuestionTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get visible pruebas from question test bad request response
func (o *GetVisiblePruebasFromQuestionTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVisiblePruebasFromQuestionTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetVisiblePruebasFromQuestionTestForbiddenCode is the HTTP code returned for type GetVisiblePruebasFromQuestionTestForbidden
const GetVisiblePruebasFromQuestionTestForbiddenCode int = 403

/*GetVisiblePruebasFromQuestionTestForbidden Not authorized to this content

swagger:response getVisiblePruebasFromQuestionTestForbidden
*/
type GetVisiblePruebasFromQuestionTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVisiblePruebasFromQuestionTestForbidden creates GetVisiblePruebasFromQuestionTestForbidden with default headers values
func NewGetVisiblePruebasFromQuestionTestForbidden() *GetVisiblePruebasFromQuestionTestForbidden {

	return &GetVisiblePruebasFromQuestionTestForbidden{}
}

// WithPayload adds the payload to the get visible pruebas from question test forbidden response
func (o *GetVisiblePruebasFromQuestionTestForbidden) WithPayload(payload *models.Error) *GetVisiblePruebasFromQuestionTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get visible pruebas from question test forbidden response
func (o *GetVisiblePruebasFromQuestionTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVisiblePruebasFromQuestionTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetVisiblePruebasFromQuestionTestGoneCode is the HTTP code returned for type GetVisiblePruebasFromQuestionTestGone
const GetVisiblePruebasFromQuestionTestGoneCode int = 410

/*GetVisiblePruebasFromQuestionTestGone That resource does not exist

swagger:response getVisiblePruebasFromQuestionTestGone
*/
type GetVisiblePruebasFromQuestionTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVisiblePruebasFromQuestionTestGone creates GetVisiblePruebasFromQuestionTestGone with default headers values
func NewGetVisiblePruebasFromQuestionTestGone() *GetVisiblePruebasFromQuestionTestGone {

	return &GetVisiblePruebasFromQuestionTestGone{}
}

// WithPayload adds the payload to the get visible pruebas from question test gone response
func (o *GetVisiblePruebasFromQuestionTestGone) WithPayload(payload *models.Error) *GetVisiblePruebasFromQuestionTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get visible pruebas from question test gone response
func (o *GetVisiblePruebasFromQuestionTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVisiblePruebasFromQuestionTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetVisiblePruebasFromQuestionTestInternalServerErrorCode is the HTTP code returned for type GetVisiblePruebasFromQuestionTestInternalServerError
const GetVisiblePruebasFromQuestionTestInternalServerErrorCode int = 500

/*GetVisiblePruebasFromQuestionTestInternalServerError Internal error

swagger:response getVisiblePruebasFromQuestionTestInternalServerError
*/
type GetVisiblePruebasFromQuestionTestInternalServerError struct {
}

// NewGetVisiblePruebasFromQuestionTestInternalServerError creates GetVisiblePruebasFromQuestionTestInternalServerError with default headers values
func NewGetVisiblePruebasFromQuestionTestInternalServerError() *GetVisiblePruebasFromQuestionTestInternalServerError {

	return &GetVisiblePruebasFromQuestionTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetVisiblePruebasFromQuestionTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
