// Code generated by go-swagger; DO NOT EDIT.

package published_test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// PutPublishedTestOKCode is the HTTP code returned for type PutPublishedTestOK
const PutPublishedTestOKCode int = 200

/*PutPublishedTestOK Test updated

swagger:response putPublishedTestOK
*/
type PutPublishedTestOK struct {
}

// NewPutPublishedTestOK creates PutPublishedTestOK with default headers values
func NewPutPublishedTestOK() *PutPublishedTestOK {

	return &PutPublishedTestOK{}
}

// WriteResponse to the client
func (o *PutPublishedTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutPublishedTestBadRequestCode is the HTTP code returned for type PutPublishedTestBadRequest
const PutPublishedTestBadRequestCode int = 400

/*PutPublishedTestBadRequest Incorrect Request, or invalida data

swagger:response putPublishedTestBadRequest
*/
type PutPublishedTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPublishedTestBadRequest creates PutPublishedTestBadRequest with default headers values
func NewPutPublishedTestBadRequest() *PutPublishedTestBadRequest {

	return &PutPublishedTestBadRequest{}
}

// WithPayload adds the payload to the put published test bad request response
func (o *PutPublishedTestBadRequest) WithPayload(payload *models.Error) *PutPublishedTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put published test bad request response
func (o *PutPublishedTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPublishedTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPublishedTestForbiddenCode is the HTTP code returned for type PutPublishedTestForbidden
const PutPublishedTestForbiddenCode int = 403

/*PutPublishedTestForbidden Not authorized to this content

swagger:response putPublishedTestForbidden
*/
type PutPublishedTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPublishedTestForbidden creates PutPublishedTestForbidden with default headers values
func NewPutPublishedTestForbidden() *PutPublishedTestForbidden {

	return &PutPublishedTestForbidden{}
}

// WithPayload adds the payload to the put published test forbidden response
func (o *PutPublishedTestForbidden) WithPayload(payload *models.Error) *PutPublishedTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put published test forbidden response
func (o *PutPublishedTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPublishedTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPublishedTestInternalServerErrorCode is the HTTP code returned for type PutPublishedTestInternalServerError
const PutPublishedTestInternalServerErrorCode int = 500

/*PutPublishedTestInternalServerError Internal error

swagger:response putPublishedTestInternalServerError
*/
type PutPublishedTestInternalServerError struct {
}

// NewPutPublishedTestInternalServerError creates PutPublishedTestInternalServerError with default headers values
func NewPutPublishedTestInternalServerError() *PutPublishedTestInternalServerError {

	return &PutPublishedTestInternalServerError{}
}

// WriteResponse to the client
func (o *PutPublishedTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
