// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddTeamToQuestionOKCode is the HTTP code returned for type AddTeamToQuestionOK
const AddTeamToQuestionOKCode int = 200

/*AddTeamToQuestionOK team added

swagger:response addTeamToQuestionOK
*/
type AddTeamToQuestionOK struct {
}

// NewAddTeamToQuestionOK creates AddTeamToQuestionOK with default headers values
func NewAddTeamToQuestionOK() *AddTeamToQuestionOK {

	return &AddTeamToQuestionOK{}
}

// WriteResponse to the client
func (o *AddTeamToQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddTeamToQuestionBadRequestCode is the HTTP code returned for type AddTeamToQuestionBadRequest
const AddTeamToQuestionBadRequestCode int = 400

/*AddTeamToQuestionBadRequest Incorrect Request, or invalida data

swagger:response addTeamToQuestionBadRequest
*/
type AddTeamToQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToQuestionBadRequest creates AddTeamToQuestionBadRequest with default headers values
func NewAddTeamToQuestionBadRequest() *AddTeamToQuestionBadRequest {

	return &AddTeamToQuestionBadRequest{}
}

// WithPayload adds the payload to the add team to question bad request response
func (o *AddTeamToQuestionBadRequest) WithPayload(payload *models.Error) *AddTeamToQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to question bad request response
func (o *AddTeamToQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToQuestionForbiddenCode is the HTTP code returned for type AddTeamToQuestionForbidden
const AddTeamToQuestionForbiddenCode int = 403

/*AddTeamToQuestionForbidden Not authorized to this content

swagger:response addTeamToQuestionForbidden
*/
type AddTeamToQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToQuestionForbidden creates AddTeamToQuestionForbidden with default headers values
func NewAddTeamToQuestionForbidden() *AddTeamToQuestionForbidden {

	return &AddTeamToQuestionForbidden{}
}

// WithPayload adds the payload to the add team to question forbidden response
func (o *AddTeamToQuestionForbidden) WithPayload(payload *models.Error) *AddTeamToQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to question forbidden response
func (o *AddTeamToQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToQuestionGoneCode is the HTTP code returned for type AddTeamToQuestionGone
const AddTeamToQuestionGoneCode int = 410

/*AddTeamToQuestionGone That resource does not exist

swagger:response addTeamToQuestionGone
*/
type AddTeamToQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToQuestionGone creates AddTeamToQuestionGone with default headers values
func NewAddTeamToQuestionGone() *AddTeamToQuestionGone {

	return &AddTeamToQuestionGone{}
}

// WithPayload adds the payload to the add team to question gone response
func (o *AddTeamToQuestionGone) WithPayload(payload *models.Error) *AddTeamToQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to question gone response
func (o *AddTeamToQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToQuestionInternalServerErrorCode is the HTTP code returned for type AddTeamToQuestionInternalServerError
const AddTeamToQuestionInternalServerErrorCode int = 500

/*AddTeamToQuestionInternalServerError Internal error

swagger:response addTeamToQuestionInternalServerError
*/
type AddTeamToQuestionInternalServerError struct {
}

// NewAddTeamToQuestionInternalServerError creates AddTeamToQuestionInternalServerError with default headers values
func NewAddTeamToQuestionInternalServerError() *AddTeamToQuestionInternalServerError {

	return &AddTeamToQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *AddTeamToQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
