// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// DeleteQuestionOKCode is the HTTP code returned for type DeleteQuestionOK
const DeleteQuestionOKCode int = 200

/*DeleteQuestionOK Question deleted

swagger:response deleteQuestionOK
*/
type DeleteQuestionOK struct {
}

// NewDeleteQuestionOK creates DeleteQuestionOK with default headers values
func NewDeleteQuestionOK() *DeleteQuestionOK {

	return &DeleteQuestionOK{}
}

// WriteResponse to the client
func (o *DeleteQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteQuestionBadRequestCode is the HTTP code returned for type DeleteQuestionBadRequest
const DeleteQuestionBadRequestCode int = 400

/*DeleteQuestionBadRequest Incorrect Request, or invalida data

swagger:response deleteQuestionBadRequest
*/
type DeleteQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteQuestionBadRequest creates DeleteQuestionBadRequest with default headers values
func NewDeleteQuestionBadRequest() *DeleteQuestionBadRequest {

	return &DeleteQuestionBadRequest{}
}

// WithPayload adds the payload to the delete question bad request response
func (o *DeleteQuestionBadRequest) WithPayload(payload *models.Error) *DeleteQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete question bad request response
func (o *DeleteQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteQuestionForbiddenCode is the HTTP code returned for type DeleteQuestionForbidden
const DeleteQuestionForbiddenCode int = 403

/*DeleteQuestionForbidden Not authorized to this content

swagger:response deleteQuestionForbidden
*/
type DeleteQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteQuestionForbidden creates DeleteQuestionForbidden with default headers values
func NewDeleteQuestionForbidden() *DeleteQuestionForbidden {

	return &DeleteQuestionForbidden{}
}

// WithPayload adds the payload to the delete question forbidden response
func (o *DeleteQuestionForbidden) WithPayload(payload *models.Error) *DeleteQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete question forbidden response
func (o *DeleteQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteQuestionInternalServerErrorCode is the HTTP code returned for type DeleteQuestionInternalServerError
const DeleteQuestionInternalServerErrorCode int = 500

/*DeleteQuestionInternalServerError Internal error

swagger:response deleteQuestionInternalServerError
*/
type DeleteQuestionInternalServerError struct {
}

// NewDeleteQuestionInternalServerError creates DeleteQuestionInternalServerError with default headers values
func NewDeleteQuestionInternalServerError() *DeleteQuestionInternalServerError {

	return &DeleteQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *DeleteQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
