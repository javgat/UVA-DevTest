// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAllEditQuestionsOKCode is the HTTP code returned for type GetAllEditQuestionsOK
const GetAllEditQuestionsOKCode int = 200

/*GetAllEditQuestionsOK questions found

swagger:response getAllEditQuestionsOK
*/
type GetAllEditQuestionsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetAllEditQuestionsOK creates GetAllEditQuestionsOK with default headers values
func NewGetAllEditQuestionsOK() *GetAllEditQuestionsOK {

	return &GetAllEditQuestionsOK{}
}

// WithPayload adds the payload to the get all edit questions o k response
func (o *GetAllEditQuestionsOK) WithPayload(payload []*models.Question) *GetAllEditQuestionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all edit questions o k response
func (o *GetAllEditQuestionsOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllEditQuestionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllEditQuestionsBadRequestCode is the HTTP code returned for type GetAllEditQuestionsBadRequest
const GetAllEditQuestionsBadRequestCode int = 400

/*GetAllEditQuestionsBadRequest Incorrect Request, or invalida data

swagger:response getAllEditQuestionsBadRequest
*/
type GetAllEditQuestionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllEditQuestionsBadRequest creates GetAllEditQuestionsBadRequest with default headers values
func NewGetAllEditQuestionsBadRequest() *GetAllEditQuestionsBadRequest {

	return &GetAllEditQuestionsBadRequest{}
}

// WithPayload adds the payload to the get all edit questions bad request response
func (o *GetAllEditQuestionsBadRequest) WithPayload(payload *models.Error) *GetAllEditQuestionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all edit questions bad request response
func (o *GetAllEditQuestionsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllEditQuestionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllEditQuestionsForbiddenCode is the HTTP code returned for type GetAllEditQuestionsForbidden
const GetAllEditQuestionsForbiddenCode int = 403

/*GetAllEditQuestionsForbidden Not authorized to this content

swagger:response getAllEditQuestionsForbidden
*/
type GetAllEditQuestionsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllEditQuestionsForbidden creates GetAllEditQuestionsForbidden with default headers values
func NewGetAllEditQuestionsForbidden() *GetAllEditQuestionsForbidden {

	return &GetAllEditQuestionsForbidden{}
}

// WithPayload adds the payload to the get all edit questions forbidden response
func (o *GetAllEditQuestionsForbidden) WithPayload(payload *models.Error) *GetAllEditQuestionsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all edit questions forbidden response
func (o *GetAllEditQuestionsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllEditQuestionsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllEditQuestionsInternalServerErrorCode is the HTTP code returned for type GetAllEditQuestionsInternalServerError
const GetAllEditQuestionsInternalServerErrorCode int = 500

/*GetAllEditQuestionsInternalServerError Internal error

swagger:response getAllEditQuestionsInternalServerError
*/
type GetAllEditQuestionsInternalServerError struct {
}

// NewGetAllEditQuestionsInternalServerError creates GetAllEditQuestionsInternalServerError with default headers values
func NewGetAllEditQuestionsInternalServerError() *GetAllEditQuestionsInternalServerError {

	return &GetAllEditQuestionsInternalServerError{}
}

// WriteResponse to the client
func (o *GetAllEditQuestionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
