// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAllQuestionsOKCode is the HTTP code returned for type GetAllQuestionsOK
const GetAllQuestionsOKCode int = 200

/*GetAllQuestionsOK questions found

swagger:response getAllQuestionsOK
*/
type GetAllQuestionsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetAllQuestionsOK creates GetAllQuestionsOK with default headers values
func NewGetAllQuestionsOK() *GetAllQuestionsOK {

	return &GetAllQuestionsOK{}
}

// WithPayload adds the payload to the get all questions o k response
func (o *GetAllQuestionsOK) WithPayload(payload []*models.Question) *GetAllQuestionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all questions o k response
func (o *GetAllQuestionsOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllQuestionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllQuestionsBadRequestCode is the HTTP code returned for type GetAllQuestionsBadRequest
const GetAllQuestionsBadRequestCode int = 400

/*GetAllQuestionsBadRequest Incorrect Request, or invalida data

swagger:response getAllQuestionsBadRequest
*/
type GetAllQuestionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllQuestionsBadRequest creates GetAllQuestionsBadRequest with default headers values
func NewGetAllQuestionsBadRequest() *GetAllQuestionsBadRequest {

	return &GetAllQuestionsBadRequest{}
}

// WithPayload adds the payload to the get all questions bad request response
func (o *GetAllQuestionsBadRequest) WithPayload(payload *models.Error) *GetAllQuestionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all questions bad request response
func (o *GetAllQuestionsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllQuestionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllQuestionsForbiddenCode is the HTTP code returned for type GetAllQuestionsForbidden
const GetAllQuestionsForbiddenCode int = 403

/*GetAllQuestionsForbidden Not authorized to this content

swagger:response getAllQuestionsForbidden
*/
type GetAllQuestionsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllQuestionsForbidden creates GetAllQuestionsForbidden with default headers values
func NewGetAllQuestionsForbidden() *GetAllQuestionsForbidden {

	return &GetAllQuestionsForbidden{}
}

// WithPayload adds the payload to the get all questions forbidden response
func (o *GetAllQuestionsForbidden) WithPayload(payload *models.Error) *GetAllQuestionsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all questions forbidden response
func (o *GetAllQuestionsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllQuestionsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllQuestionsInternalServerErrorCode is the HTTP code returned for type GetAllQuestionsInternalServerError
const GetAllQuestionsInternalServerErrorCode int = 500

/*GetAllQuestionsInternalServerError Internal error

swagger:response getAllQuestionsInternalServerError
*/
type GetAllQuestionsInternalServerError struct {
}

// NewGetAllQuestionsInternalServerError creates GetAllQuestionsInternalServerError with default headers values
func NewGetAllQuestionsInternalServerError() *GetAllQuestionsInternalServerError {

	return &GetAllQuestionsInternalServerError{}
}

// WriteResponse to the client
func (o *GetAllQuestionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
