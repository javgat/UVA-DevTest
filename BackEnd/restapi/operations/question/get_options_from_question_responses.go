// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetOptionsFromQuestionOKCode is the HTTP code returned for type GetOptionsFromQuestionOK
const GetOptionsFromQuestionOKCode int = 200

/*GetOptionsFromQuestionOK options found

swagger:response getOptionsFromQuestionOK
*/
type GetOptionsFromQuestionOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Option `json:"body,omitempty"`
}

// NewGetOptionsFromQuestionOK creates GetOptionsFromQuestionOK with default headers values
func NewGetOptionsFromQuestionOK() *GetOptionsFromQuestionOK {

	return &GetOptionsFromQuestionOK{}
}

// WithPayload adds the payload to the get options from question o k response
func (o *GetOptionsFromQuestionOK) WithPayload(payload []*models.Option) *GetOptionsFromQuestionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from question o k response
func (o *GetOptionsFromQuestionOK) SetPayload(payload []*models.Option) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Option, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetOptionsFromQuestionBadRequestCode is the HTTP code returned for type GetOptionsFromQuestionBadRequest
const GetOptionsFromQuestionBadRequestCode int = 400

/*GetOptionsFromQuestionBadRequest Incorrect Request, or invalida data

swagger:response getOptionsFromQuestionBadRequest
*/
type GetOptionsFromQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromQuestionBadRequest creates GetOptionsFromQuestionBadRequest with default headers values
func NewGetOptionsFromQuestionBadRequest() *GetOptionsFromQuestionBadRequest {

	return &GetOptionsFromQuestionBadRequest{}
}

// WithPayload adds the payload to the get options from question bad request response
func (o *GetOptionsFromQuestionBadRequest) WithPayload(payload *models.Error) *GetOptionsFromQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from question bad request response
func (o *GetOptionsFromQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromQuestionForbiddenCode is the HTTP code returned for type GetOptionsFromQuestionForbidden
const GetOptionsFromQuestionForbiddenCode int = 403

/*GetOptionsFromQuestionForbidden Not authorized to this content

swagger:response getOptionsFromQuestionForbidden
*/
type GetOptionsFromQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromQuestionForbidden creates GetOptionsFromQuestionForbidden with default headers values
func NewGetOptionsFromQuestionForbidden() *GetOptionsFromQuestionForbidden {

	return &GetOptionsFromQuestionForbidden{}
}

// WithPayload adds the payload to the get options from question forbidden response
func (o *GetOptionsFromQuestionForbidden) WithPayload(payload *models.Error) *GetOptionsFromQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from question forbidden response
func (o *GetOptionsFromQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromQuestionGoneCode is the HTTP code returned for type GetOptionsFromQuestionGone
const GetOptionsFromQuestionGoneCode int = 410

/*GetOptionsFromQuestionGone That resource does not exist

swagger:response getOptionsFromQuestionGone
*/
type GetOptionsFromQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOptionsFromQuestionGone creates GetOptionsFromQuestionGone with default headers values
func NewGetOptionsFromQuestionGone() *GetOptionsFromQuestionGone {

	return &GetOptionsFromQuestionGone{}
}

// WithPayload adds the payload to the get options from question gone response
func (o *GetOptionsFromQuestionGone) WithPayload(payload *models.Error) *GetOptionsFromQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get options from question gone response
func (o *GetOptionsFromQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOptionsFromQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOptionsFromQuestionInternalServerErrorCode is the HTTP code returned for type GetOptionsFromQuestionInternalServerError
const GetOptionsFromQuestionInternalServerErrorCode int = 500

/*GetOptionsFromQuestionInternalServerError Internal error

swagger:response getOptionsFromQuestionInternalServerError
*/
type GetOptionsFromQuestionInternalServerError struct {
}

// NewGetOptionsFromQuestionInternalServerError creates GetOptionsFromQuestionInternalServerError with default headers values
func NewGetOptionsFromQuestionInternalServerError() *GetOptionsFromQuestionInternalServerError {

	return &GetOptionsFromQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *GetOptionsFromQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
