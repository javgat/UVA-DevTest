// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPruebaFromQuestionOKCode is the HTTP code returned for type GetPruebaFromQuestionOK
const GetPruebaFromQuestionOKCode int = 200

/*GetPruebaFromQuestionOK prueba found

swagger:response getPruebaFromQuestionOK
*/
type GetPruebaFromQuestionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Prueba `json:"body,omitempty"`
}

// NewGetPruebaFromQuestionOK creates GetPruebaFromQuestionOK with default headers values
func NewGetPruebaFromQuestionOK() *GetPruebaFromQuestionOK {

	return &GetPruebaFromQuestionOK{}
}

// WithPayload adds the payload to the get prueba from question o k response
func (o *GetPruebaFromQuestionOK) WithPayload(payload *models.Prueba) *GetPruebaFromQuestionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get prueba from question o k response
func (o *GetPruebaFromQuestionOK) SetPayload(payload *models.Prueba) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPruebaFromQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPruebaFromQuestionBadRequestCode is the HTTP code returned for type GetPruebaFromQuestionBadRequest
const GetPruebaFromQuestionBadRequestCode int = 400

/*GetPruebaFromQuestionBadRequest Incorrect Request, or invalida data

swagger:response getPruebaFromQuestionBadRequest
*/
type GetPruebaFromQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPruebaFromQuestionBadRequest creates GetPruebaFromQuestionBadRequest with default headers values
func NewGetPruebaFromQuestionBadRequest() *GetPruebaFromQuestionBadRequest {

	return &GetPruebaFromQuestionBadRequest{}
}

// WithPayload adds the payload to the get prueba from question bad request response
func (o *GetPruebaFromQuestionBadRequest) WithPayload(payload *models.Error) *GetPruebaFromQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get prueba from question bad request response
func (o *GetPruebaFromQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPruebaFromQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPruebaFromQuestionForbiddenCode is the HTTP code returned for type GetPruebaFromQuestionForbidden
const GetPruebaFromQuestionForbiddenCode int = 403

/*GetPruebaFromQuestionForbidden Not authorized to this content

swagger:response getPruebaFromQuestionForbidden
*/
type GetPruebaFromQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPruebaFromQuestionForbidden creates GetPruebaFromQuestionForbidden with default headers values
func NewGetPruebaFromQuestionForbidden() *GetPruebaFromQuestionForbidden {

	return &GetPruebaFromQuestionForbidden{}
}

// WithPayload adds the payload to the get prueba from question forbidden response
func (o *GetPruebaFromQuestionForbidden) WithPayload(payload *models.Error) *GetPruebaFromQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get prueba from question forbidden response
func (o *GetPruebaFromQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPruebaFromQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPruebaFromQuestionGoneCode is the HTTP code returned for type GetPruebaFromQuestionGone
const GetPruebaFromQuestionGoneCode int = 410

/*GetPruebaFromQuestionGone That resource does not exist

swagger:response getPruebaFromQuestionGone
*/
type GetPruebaFromQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPruebaFromQuestionGone creates GetPruebaFromQuestionGone with default headers values
func NewGetPruebaFromQuestionGone() *GetPruebaFromQuestionGone {

	return &GetPruebaFromQuestionGone{}
}

// WithPayload adds the payload to the get prueba from question gone response
func (o *GetPruebaFromQuestionGone) WithPayload(payload *models.Error) *GetPruebaFromQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get prueba from question gone response
func (o *GetPruebaFromQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPruebaFromQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPruebaFromQuestionInternalServerErrorCode is the HTTP code returned for type GetPruebaFromQuestionInternalServerError
const GetPruebaFromQuestionInternalServerErrorCode int = 500

/*GetPruebaFromQuestionInternalServerError Internal error

swagger:response getPruebaFromQuestionInternalServerError
*/
type GetPruebaFromQuestionInternalServerError struct {
}

// NewGetPruebaFromQuestionInternalServerError creates GetPruebaFromQuestionInternalServerError with default headers values
func NewGetPruebaFromQuestionInternalServerError() *GetPruebaFromQuestionInternalServerError {

	return &GetPruebaFromQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *GetPruebaFromQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
