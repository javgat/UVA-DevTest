// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetQuestionsOKCode is the HTTP code returned for type GetQuestionsOK
const GetQuestionsOKCode int = 200

/*GetQuestionsOK questions found

swagger:response getQuestionsOK
*/
type GetQuestionsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetQuestionsOK creates GetQuestionsOK with default headers values
func NewGetQuestionsOK() *GetQuestionsOK {

	return &GetQuestionsOK{}
}

// WithPayload adds the payload to the get questions o k response
func (o *GetQuestionsOK) WithPayload(payload []*models.Question) *GetQuestionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions o k response
func (o *GetQuestionsOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetQuestionsBadRequestCode is the HTTP code returned for type GetQuestionsBadRequest
const GetQuestionsBadRequestCode int = 400

/*GetQuestionsBadRequest Incorrect Request, or invalida data

swagger:response getQuestionsBadRequest
*/
type GetQuestionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsBadRequest creates GetQuestionsBadRequest with default headers values
func NewGetQuestionsBadRequest() *GetQuestionsBadRequest {

	return &GetQuestionsBadRequest{}
}

// WithPayload adds the payload to the get questions bad request response
func (o *GetQuestionsBadRequest) WithPayload(payload *models.Error) *GetQuestionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions bad request response
func (o *GetQuestionsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsForbiddenCode is the HTTP code returned for type GetQuestionsForbidden
const GetQuestionsForbiddenCode int = 403

/*GetQuestionsForbidden Not authorized to this content

swagger:response getQuestionsForbidden
*/
type GetQuestionsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQuestionsForbidden creates GetQuestionsForbidden with default headers values
func NewGetQuestionsForbidden() *GetQuestionsForbidden {

	return &GetQuestionsForbidden{}
}

// WithPayload adds the payload to the get questions forbidden response
func (o *GetQuestionsForbidden) WithPayload(payload *models.Error) *GetQuestionsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get questions forbidden response
func (o *GetQuestionsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQuestionsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQuestionsInternalServerErrorCode is the HTTP code returned for type GetQuestionsInternalServerError
const GetQuestionsInternalServerErrorCode int = 500

/*GetQuestionsInternalServerError Internal error

swagger:response getQuestionsInternalServerError
*/
type GetQuestionsInternalServerError struct {
}

// NewGetQuestionsInternalServerError creates GetQuestionsInternalServerError with default headers values
func NewGetQuestionsInternalServerError() *GetQuestionsInternalServerError {

	return &GetQuestionsInternalServerError{}
}

// WriteResponse to the client
func (o *GetQuestionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
