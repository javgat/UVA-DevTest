// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// RemoveTagFromQuestionOKCode is the HTTP code returned for type RemoveTagFromQuestionOK
const RemoveTagFromQuestionOKCode int = 200

/*RemoveTagFromQuestionOK tag removed

swagger:response removeTagFromQuestionOK
*/
type RemoveTagFromQuestionOK struct {
}

// NewRemoveTagFromQuestionOK creates RemoveTagFromQuestionOK with default headers values
func NewRemoveTagFromQuestionOK() *RemoveTagFromQuestionOK {

	return &RemoveTagFromQuestionOK{}
}

// WriteResponse to the client
func (o *RemoveTagFromQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RemoveTagFromQuestionBadRequestCode is the HTTP code returned for type RemoveTagFromQuestionBadRequest
const RemoveTagFromQuestionBadRequestCode int = 400

/*RemoveTagFromQuestionBadRequest Incorrect Request, or invalida data

swagger:response removeTagFromQuestionBadRequest
*/
type RemoveTagFromQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTagFromQuestionBadRequest creates RemoveTagFromQuestionBadRequest with default headers values
func NewRemoveTagFromQuestionBadRequest() *RemoveTagFromQuestionBadRequest {

	return &RemoveTagFromQuestionBadRequest{}
}

// WithPayload adds the payload to the remove tag from question bad request response
func (o *RemoveTagFromQuestionBadRequest) WithPayload(payload *models.Error) *RemoveTagFromQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove tag from question bad request response
func (o *RemoveTagFromQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTagFromQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTagFromQuestionForbiddenCode is the HTTP code returned for type RemoveTagFromQuestionForbidden
const RemoveTagFromQuestionForbiddenCode int = 403

/*RemoveTagFromQuestionForbidden Not authorized to this content

swagger:response removeTagFromQuestionForbidden
*/
type RemoveTagFromQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTagFromQuestionForbidden creates RemoveTagFromQuestionForbidden with default headers values
func NewRemoveTagFromQuestionForbidden() *RemoveTagFromQuestionForbidden {

	return &RemoveTagFromQuestionForbidden{}
}

// WithPayload adds the payload to the remove tag from question forbidden response
func (o *RemoveTagFromQuestionForbidden) WithPayload(payload *models.Error) *RemoveTagFromQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove tag from question forbidden response
func (o *RemoveTagFromQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTagFromQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTagFromQuestionGoneCode is the HTTP code returned for type RemoveTagFromQuestionGone
const RemoveTagFromQuestionGoneCode int = 410

/*RemoveTagFromQuestionGone That user (password and name) does not exist

swagger:response removeTagFromQuestionGone
*/
type RemoveTagFromQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTagFromQuestionGone creates RemoveTagFromQuestionGone with default headers values
func NewRemoveTagFromQuestionGone() *RemoveTagFromQuestionGone {

	return &RemoveTagFromQuestionGone{}
}

// WithPayload adds the payload to the remove tag from question gone response
func (o *RemoveTagFromQuestionGone) WithPayload(payload *models.Error) *RemoveTagFromQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove tag from question gone response
func (o *RemoveTagFromQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTagFromQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTagFromQuestionInternalServerErrorCode is the HTTP code returned for type RemoveTagFromQuestionInternalServerError
const RemoveTagFromQuestionInternalServerErrorCode int = 500

/*RemoveTagFromQuestionInternalServerError Internal error

swagger:response removeTagFromQuestionInternalServerError
*/
type RemoveTagFromQuestionInternalServerError struct {
}

// NewRemoveTagFromQuestionInternalServerError creates RemoveTagFromQuestionInternalServerError with default headers values
func NewRemoveTagFromQuestionInternalServerError() *RemoveTagFromQuestionInternalServerError {

	return &RemoveTagFromQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *RemoveTagFromQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
