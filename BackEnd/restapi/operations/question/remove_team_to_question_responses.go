// Code generated by go-swagger; DO NOT EDIT.

package question

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// RemoveTeamToQuestionOKCode is the HTTP code returned for type RemoveTeamToQuestionOK
const RemoveTeamToQuestionOKCode int = 200

/*RemoveTeamToQuestionOK team removed

swagger:response removeTeamToQuestionOK
*/
type RemoveTeamToQuestionOK struct {
}

// NewRemoveTeamToQuestionOK creates RemoveTeamToQuestionOK with default headers values
func NewRemoveTeamToQuestionOK() *RemoveTeamToQuestionOK {

	return &RemoveTeamToQuestionOK{}
}

// WriteResponse to the client
func (o *RemoveTeamToQuestionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RemoveTeamToQuestionBadRequestCode is the HTTP code returned for type RemoveTeamToQuestionBadRequest
const RemoveTeamToQuestionBadRequestCode int = 400

/*RemoveTeamToQuestionBadRequest Incorrect Request, or invalida data

swagger:response removeTeamToQuestionBadRequest
*/
type RemoveTeamToQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTeamToQuestionBadRequest creates RemoveTeamToQuestionBadRequest with default headers values
func NewRemoveTeamToQuestionBadRequest() *RemoveTeamToQuestionBadRequest {

	return &RemoveTeamToQuestionBadRequest{}
}

// WithPayload adds the payload to the remove team to question bad request response
func (o *RemoveTeamToQuestionBadRequest) WithPayload(payload *models.Error) *RemoveTeamToQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove team to question bad request response
func (o *RemoveTeamToQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTeamToQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTeamToQuestionForbiddenCode is the HTTP code returned for type RemoveTeamToQuestionForbidden
const RemoveTeamToQuestionForbiddenCode int = 403

/*RemoveTeamToQuestionForbidden Not authorized to this content

swagger:response removeTeamToQuestionForbidden
*/
type RemoveTeamToQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTeamToQuestionForbidden creates RemoveTeamToQuestionForbidden with default headers values
func NewRemoveTeamToQuestionForbidden() *RemoveTeamToQuestionForbidden {

	return &RemoveTeamToQuestionForbidden{}
}

// WithPayload adds the payload to the remove team to question forbidden response
func (o *RemoveTeamToQuestionForbidden) WithPayload(payload *models.Error) *RemoveTeamToQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove team to question forbidden response
func (o *RemoveTeamToQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTeamToQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTeamToQuestionGoneCode is the HTTP code returned for type RemoveTeamToQuestionGone
const RemoveTeamToQuestionGoneCode int = 410

/*RemoveTeamToQuestionGone That resource does not exist

swagger:response removeTeamToQuestionGone
*/
type RemoveTeamToQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveTeamToQuestionGone creates RemoveTeamToQuestionGone with default headers values
func NewRemoveTeamToQuestionGone() *RemoveTeamToQuestionGone {

	return &RemoveTeamToQuestionGone{}
}

// WithPayload adds the payload to the remove team to question gone response
func (o *RemoveTeamToQuestionGone) WithPayload(payload *models.Error) *RemoveTeamToQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove team to question gone response
func (o *RemoveTeamToQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveTeamToQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveTeamToQuestionInternalServerErrorCode is the HTTP code returned for type RemoveTeamToQuestionInternalServerError
const RemoveTeamToQuestionInternalServerErrorCode int = 500

/*RemoveTeamToQuestionInternalServerError Internal error

swagger:response removeTeamToQuestionInternalServerError
*/
type RemoveTeamToQuestionInternalServerError struct {
}

// NewRemoveTeamToQuestionInternalServerError creates RemoveTeamToQuestionInternalServerError with default headers values
func NewRemoveTeamToQuestionInternalServerError() *RemoveTeamToQuestionInternalServerError {

	return &RemoveTeamToQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *RemoveTeamToQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
