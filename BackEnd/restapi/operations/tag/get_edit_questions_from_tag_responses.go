// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetEditQuestionsFromTagOKCode is the HTTP code returned for type GetEditQuestionsFromTagOK
const GetEditQuestionsFromTagOKCode int = 200

/*GetEditQuestionsFromTagOK questions found

swagger:response getEditQuestionsFromTagOK
*/
type GetEditQuestionsFromTagOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetEditQuestionsFromTagOK creates GetEditQuestionsFromTagOK with default headers values
func NewGetEditQuestionsFromTagOK() *GetEditQuestionsFromTagOK {

	return &GetEditQuestionsFromTagOK{}
}

// WithPayload adds the payload to the get edit questions from tag o k response
func (o *GetEditQuestionsFromTagOK) WithPayload(payload []*models.Question) *GetEditQuestionsFromTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get edit questions from tag o k response
func (o *GetEditQuestionsFromTagOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditQuestionsFromTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetEditQuestionsFromTagBadRequestCode is the HTTP code returned for type GetEditQuestionsFromTagBadRequest
const GetEditQuestionsFromTagBadRequestCode int = 400

/*GetEditQuestionsFromTagBadRequest Incorrect Request, or invalida data

swagger:response getEditQuestionsFromTagBadRequest
*/
type GetEditQuestionsFromTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEditQuestionsFromTagBadRequest creates GetEditQuestionsFromTagBadRequest with default headers values
func NewGetEditQuestionsFromTagBadRequest() *GetEditQuestionsFromTagBadRequest {

	return &GetEditQuestionsFromTagBadRequest{}
}

// WithPayload adds the payload to the get edit questions from tag bad request response
func (o *GetEditQuestionsFromTagBadRequest) WithPayload(payload *models.Error) *GetEditQuestionsFromTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get edit questions from tag bad request response
func (o *GetEditQuestionsFromTagBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditQuestionsFromTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEditQuestionsFromTagForbiddenCode is the HTTP code returned for type GetEditQuestionsFromTagForbidden
const GetEditQuestionsFromTagForbiddenCode int = 403

/*GetEditQuestionsFromTagForbidden Not authorized to this content

swagger:response getEditQuestionsFromTagForbidden
*/
type GetEditQuestionsFromTagForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEditQuestionsFromTagForbidden creates GetEditQuestionsFromTagForbidden with default headers values
func NewGetEditQuestionsFromTagForbidden() *GetEditQuestionsFromTagForbidden {

	return &GetEditQuestionsFromTagForbidden{}
}

// WithPayload adds the payload to the get edit questions from tag forbidden response
func (o *GetEditQuestionsFromTagForbidden) WithPayload(payload *models.Error) *GetEditQuestionsFromTagForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get edit questions from tag forbidden response
func (o *GetEditQuestionsFromTagForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditQuestionsFromTagForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEditQuestionsFromTagGoneCode is the HTTP code returned for type GetEditQuestionsFromTagGone
const GetEditQuestionsFromTagGoneCode int = 410

/*GetEditQuestionsFromTagGone That user (password and name) does not exist

swagger:response getEditQuestionsFromTagGone
*/
type GetEditQuestionsFromTagGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEditQuestionsFromTagGone creates GetEditQuestionsFromTagGone with default headers values
func NewGetEditQuestionsFromTagGone() *GetEditQuestionsFromTagGone {

	return &GetEditQuestionsFromTagGone{}
}

// WithPayload adds the payload to the get edit questions from tag gone response
func (o *GetEditQuestionsFromTagGone) WithPayload(payload *models.Error) *GetEditQuestionsFromTagGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get edit questions from tag gone response
func (o *GetEditQuestionsFromTagGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEditQuestionsFromTagGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEditQuestionsFromTagInternalServerErrorCode is the HTTP code returned for type GetEditQuestionsFromTagInternalServerError
const GetEditQuestionsFromTagInternalServerErrorCode int = 500

/*GetEditQuestionsFromTagInternalServerError Internal error

swagger:response getEditQuestionsFromTagInternalServerError
*/
type GetEditQuestionsFromTagInternalServerError struct {
}

// NewGetEditQuestionsFromTagInternalServerError creates GetEditQuestionsFromTagInternalServerError with default headers values
func NewGetEditQuestionsFromTagInternalServerError() *GetEditQuestionsFromTagInternalServerError {

	return &GetEditQuestionsFromTagInternalServerError{}
}

// WriteResponse to the client
func (o *GetEditQuestionsFromTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
