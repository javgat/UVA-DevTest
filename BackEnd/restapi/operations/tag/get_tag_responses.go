// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTagOKCode is the HTTP code returned for type GetTagOK
const GetTagOKCode int = 200

/*GetTagOK tag found

swagger:response getTagOK
*/
type GetTagOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tag `json:"body,omitempty"`
}

// NewGetTagOK creates GetTagOK with default headers values
func NewGetTagOK() *GetTagOK {

	return &GetTagOK{}
}

// WithPayload adds the payload to the get tag o k response
func (o *GetTagOK) WithPayload(payload *models.Tag) *GetTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag o k response
func (o *GetTagOK) SetPayload(payload *models.Tag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagBadRequestCode is the HTTP code returned for type GetTagBadRequest
const GetTagBadRequestCode int = 400

/*GetTagBadRequest Incorrect Request, or invalida data

swagger:response getTagBadRequest
*/
type GetTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagBadRequest creates GetTagBadRequest with default headers values
func NewGetTagBadRequest() *GetTagBadRequest {

	return &GetTagBadRequest{}
}

// WithPayload adds the payload to the get tag bad request response
func (o *GetTagBadRequest) WithPayload(payload *models.Error) *GetTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag bad request response
func (o *GetTagBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagForbiddenCode is the HTTP code returned for type GetTagForbidden
const GetTagForbiddenCode int = 403

/*GetTagForbidden Not authorized to this content

swagger:response getTagForbidden
*/
type GetTagForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagForbidden creates GetTagForbidden with default headers values
func NewGetTagForbidden() *GetTagForbidden {

	return &GetTagForbidden{}
}

// WithPayload adds the payload to the get tag forbidden response
func (o *GetTagForbidden) WithPayload(payload *models.Error) *GetTagForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag forbidden response
func (o *GetTagForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagGoneCode is the HTTP code returned for type GetTagGone
const GetTagGoneCode int = 410

/*GetTagGone That user (password and name) does not exist

swagger:response getTagGone
*/
type GetTagGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagGone creates GetTagGone with default headers values
func NewGetTagGone() *GetTagGone {

	return &GetTagGone{}
}

// WithPayload adds the payload to the get tag gone response
func (o *GetTagGone) WithPayload(payload *models.Error) *GetTagGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag gone response
func (o *GetTagGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagInternalServerErrorCode is the HTTP code returned for type GetTagInternalServerError
const GetTagInternalServerErrorCode int = 500

/*GetTagInternalServerError Internal error

swagger:response getTagInternalServerError
*/
type GetTagInternalServerError struct {
}

// NewGetTagInternalServerError creates GetTagInternalServerError with default headers values
func NewGetTagInternalServerError() *GetTagInternalServerError {

	return &GetTagInternalServerError{}
}

// WriteResponse to the client
func (o *GetTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
