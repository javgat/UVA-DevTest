// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTestsFromTagOKCode is the HTTP code returned for type GetTestsFromTagOK
const GetTestsFromTagOKCode int = 200

/*GetTestsFromTagOK tests found

swagger:response getTestsFromTagOK
*/
type GetTestsFromTagOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetTestsFromTagOK creates GetTestsFromTagOK with default headers values
func NewGetTestsFromTagOK() *GetTestsFromTagOK {

	return &GetTestsFromTagOK{}
}

// WithPayload adds the payload to the get tests from tag o k response
func (o *GetTestsFromTagOK) WithPayload(payload []*models.Test) *GetTestsFromTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tests from tag o k response
func (o *GetTestsFromTagOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestsFromTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetTestsFromTagBadRequestCode is the HTTP code returned for type GetTestsFromTagBadRequest
const GetTestsFromTagBadRequestCode int = 400

/*GetTestsFromTagBadRequest Incorrect Request, or invalida data

swagger:response getTestsFromTagBadRequest
*/
type GetTestsFromTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestsFromTagBadRequest creates GetTestsFromTagBadRequest with default headers values
func NewGetTestsFromTagBadRequest() *GetTestsFromTagBadRequest {

	return &GetTestsFromTagBadRequest{}
}

// WithPayload adds the payload to the get tests from tag bad request response
func (o *GetTestsFromTagBadRequest) WithPayload(payload *models.Error) *GetTestsFromTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tests from tag bad request response
func (o *GetTestsFromTagBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestsFromTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestsFromTagForbiddenCode is the HTTP code returned for type GetTestsFromTagForbidden
const GetTestsFromTagForbiddenCode int = 403

/*GetTestsFromTagForbidden Not authorized to this content

swagger:response getTestsFromTagForbidden
*/
type GetTestsFromTagForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestsFromTagForbidden creates GetTestsFromTagForbidden with default headers values
func NewGetTestsFromTagForbidden() *GetTestsFromTagForbidden {

	return &GetTestsFromTagForbidden{}
}

// WithPayload adds the payload to the get tests from tag forbidden response
func (o *GetTestsFromTagForbidden) WithPayload(payload *models.Error) *GetTestsFromTagForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tests from tag forbidden response
func (o *GetTestsFromTagForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestsFromTagForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestsFromTagGoneCode is the HTTP code returned for type GetTestsFromTagGone
const GetTestsFromTagGoneCode int = 410

/*GetTestsFromTagGone That user (password and name) does not exist

swagger:response getTestsFromTagGone
*/
type GetTestsFromTagGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestsFromTagGone creates GetTestsFromTagGone with default headers values
func NewGetTestsFromTagGone() *GetTestsFromTagGone {

	return &GetTestsFromTagGone{}
}

// WithPayload adds the payload to the get tests from tag gone response
func (o *GetTestsFromTagGone) WithPayload(payload *models.Error) *GetTestsFromTagGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tests from tag gone response
func (o *GetTestsFromTagGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestsFromTagGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestsFromTagInternalServerErrorCode is the HTTP code returned for type GetTestsFromTagInternalServerError
const GetTestsFromTagInternalServerErrorCode int = 500

/*GetTestsFromTagInternalServerError Internal error

swagger:response getTestsFromTagInternalServerError
*/
type GetTestsFromTagInternalServerError struct {
}

// NewGetTestsFromTagInternalServerError creates GetTestsFromTagInternalServerError with default headers values
func NewGetTestsFromTagInternalServerError() *GetTestsFromTagInternalServerError {

	return &GetTestsFromTagInternalServerError{}
}

// WriteResponse to the client
func (o *GetTestsFromTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
