// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddAdminOKCode is the HTTP code returned for type AddAdminOK
const AddAdminOKCode int = 200

/*AddAdminOK User added to team

swagger:response addAdminOK
*/
type AddAdminOK struct {
}

// NewAddAdminOK creates AddAdminOK with default headers values
func NewAddAdminOK() *AddAdminOK {

	return &AddAdminOK{}
}

// WriteResponse to the client
func (o *AddAdminOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddAdminBadRequestCode is the HTTP code returned for type AddAdminBadRequest
const AddAdminBadRequestCode int = 400

/*AddAdminBadRequest Incorrect Request, or invalida data

swagger:response addAdminBadRequest
*/
type AddAdminBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdminBadRequest creates AddAdminBadRequest with default headers values
func NewAddAdminBadRequest() *AddAdminBadRequest {

	return &AddAdminBadRequest{}
}

// WithPayload adds the payload to the add admin bad request response
func (o *AddAdminBadRequest) WithPayload(payload *models.Error) *AddAdminBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admin bad request response
func (o *AddAdminBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdminBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdminForbiddenCode is the HTTP code returned for type AddAdminForbidden
const AddAdminForbiddenCode int = 403

/*AddAdminForbidden Not authorized to this content

swagger:response addAdminForbidden
*/
type AddAdminForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdminForbidden creates AddAdminForbidden with default headers values
func NewAddAdminForbidden() *AddAdminForbidden {

	return &AddAdminForbidden{}
}

// WithPayload adds the payload to the add admin forbidden response
func (o *AddAdminForbidden) WithPayload(payload *models.Error) *AddAdminForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admin forbidden response
func (o *AddAdminForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdminForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdminConflictCode is the HTTP code returned for type AddAdminConflict
const AddAdminConflictCode int = 409

/*AddAdminConflict A user with same username/email already exists

swagger:response addAdminConflict
*/
type AddAdminConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdminConflict creates AddAdminConflict with default headers values
func NewAddAdminConflict() *AddAdminConflict {

	return &AddAdminConflict{}
}

// WithPayload adds the payload to the add admin conflict response
func (o *AddAdminConflict) WithPayload(payload *models.Error) *AddAdminConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admin conflict response
func (o *AddAdminConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdminConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdminGoneCode is the HTTP code returned for type AddAdminGone
const AddAdminGoneCode int = 410

/*AddAdminGone That user (password and name) does not exist

swagger:response addAdminGone
*/
type AddAdminGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdminGone creates AddAdminGone with default headers values
func NewAddAdminGone() *AddAdminGone {

	return &AddAdminGone{}
}

// WithPayload adds the payload to the add admin gone response
func (o *AddAdminGone) WithPayload(payload *models.Error) *AddAdminGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admin gone response
func (o *AddAdminGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdminGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdminInternalServerErrorCode is the HTTP code returned for type AddAdminInternalServerError
const AddAdminInternalServerErrorCode int = 500

/*AddAdminInternalServerError Internal error

swagger:response addAdminInternalServerError
*/
type AddAdminInternalServerError struct {
}

// NewAddAdminInternalServerError creates AddAdminInternalServerError with default headers values
func NewAddAdminInternalServerError() *AddAdminInternalServerError {

	return &AddAdminInternalServerError{}
}

// WriteResponse to the client
func (o *AddAdminInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
