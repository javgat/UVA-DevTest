// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddAdmirOKCode is the HTTP code returned for type AddAdmirOK
const AddAdmirOKCode int = 200

/*AddAdmirOK User added to team

swagger:response addAdmirOK
*/
type AddAdmirOK struct {
}

// NewAddAdmirOK creates AddAdmirOK with default headers values
func NewAddAdmirOK() *AddAdmirOK {

	return &AddAdmirOK{}
}

// WriteResponse to the client
func (o *AddAdmirOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddAdmirBadRequestCode is the HTTP code returned for type AddAdmirBadRequest
const AddAdmirBadRequestCode int = 400

/*AddAdmirBadRequest Incorrect Request, or invalida data

swagger:response addAdmirBadRequest
*/
type AddAdmirBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdmirBadRequest creates AddAdmirBadRequest with default headers values
func NewAddAdmirBadRequest() *AddAdmirBadRequest {

	return &AddAdmirBadRequest{}
}

// WithPayload adds the payload to the add admir bad request response
func (o *AddAdmirBadRequest) WithPayload(payload *models.Error) *AddAdmirBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admir bad request response
func (o *AddAdmirBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdmirBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdmirForbiddenCode is the HTTP code returned for type AddAdmirForbidden
const AddAdmirForbiddenCode int = 403

/*AddAdmirForbidden Not authorized to this content

swagger:response addAdmirForbidden
*/
type AddAdmirForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdmirForbidden creates AddAdmirForbidden with default headers values
func NewAddAdmirForbidden() *AddAdmirForbidden {

	return &AddAdmirForbidden{}
}

// WithPayload adds the payload to the add admir forbidden response
func (o *AddAdmirForbidden) WithPayload(payload *models.Error) *AddAdmirForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admir forbidden response
func (o *AddAdmirForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdmirForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdmirConflictCode is the HTTP code returned for type AddAdmirConflict
const AddAdmirConflictCode int = 409

/*AddAdmirConflict A user with same username/email already exists

swagger:response addAdmirConflict
*/
type AddAdmirConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdmirConflict creates AddAdmirConflict with default headers values
func NewAddAdmirConflict() *AddAdmirConflict {

	return &AddAdmirConflict{}
}

// WithPayload adds the payload to the add admir conflict response
func (o *AddAdmirConflict) WithPayload(payload *models.Error) *AddAdmirConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admir conflict response
func (o *AddAdmirConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdmirConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdmirGoneCode is the HTTP code returned for type AddAdmirGone
const AddAdmirGoneCode int = 410

/*AddAdmirGone That user (password and name) does not exist

swagger:response addAdmirGone
*/
type AddAdmirGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAdmirGone creates AddAdmirGone with default headers values
func NewAddAdmirGone() *AddAdmirGone {

	return &AddAdmirGone{}
}

// WithPayload adds the payload to the add admir gone response
func (o *AddAdmirGone) WithPayload(payload *models.Error) *AddAdmirGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add admir gone response
func (o *AddAdmirGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAdmirGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAdmirInternalServerErrorCode is the HTTP code returned for type AddAdmirInternalServerError
const AddAdmirInternalServerErrorCode int = 500

/*AddAdmirInternalServerError Internal error

swagger:response addAdmirInternalServerError
*/
type AddAdmirInternalServerError struct {
}

// NewAddAdmirInternalServerError creates AddAdmirInternalServerError with default headers values
func NewAddAdmirInternalServerError() *AddAdmirInternalServerError {

	return &AddAdmirInternalServerError{}
}

// WriteResponse to the client
func (o *AddAdmirInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
