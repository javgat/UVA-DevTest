// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddAmbirOKCode is the HTTP code returned for type AddAmbirOK
const AddAmbirOKCode int = 200

/*AddAmbirOK User added to team

swagger:response addAmbirOK
*/
type AddAmbirOK struct {
}

// NewAddAmbirOK creates AddAmbirOK with default headers values
func NewAddAmbirOK() *AddAmbirOK {

	return &AddAmbirOK{}
}

// WriteResponse to the client
func (o *AddAmbirOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddAmbirBadRequestCode is the HTTP code returned for type AddAmbirBadRequest
const AddAmbirBadRequestCode int = 400

/*AddAmbirBadRequest Incorrect Request, or invalida data

swagger:response addAmbirBadRequest
*/
type AddAmbirBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAmbirBadRequest creates AddAmbirBadRequest with default headers values
func NewAddAmbirBadRequest() *AddAmbirBadRequest {

	return &AddAmbirBadRequest{}
}

// WithPayload adds the payload to the add ambir bad request response
func (o *AddAmbirBadRequest) WithPayload(payload *models.Error) *AddAmbirBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add ambir bad request response
func (o *AddAmbirBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAmbirBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAmbirForbiddenCode is the HTTP code returned for type AddAmbirForbidden
const AddAmbirForbiddenCode int = 403

/*AddAmbirForbidden Not authorized to this content

swagger:response addAmbirForbidden
*/
type AddAmbirForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAmbirForbidden creates AddAmbirForbidden with default headers values
func NewAddAmbirForbidden() *AddAmbirForbidden {

	return &AddAmbirForbidden{}
}

// WithPayload adds the payload to the add ambir forbidden response
func (o *AddAmbirForbidden) WithPayload(payload *models.Error) *AddAmbirForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add ambir forbidden response
func (o *AddAmbirForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAmbirForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAmbirConflictCode is the HTTP code returned for type AddAmbirConflict
const AddAmbirConflictCode int = 409

/*AddAmbirConflict A user with same username/email already exists

swagger:response addAmbirConflict
*/
type AddAmbirConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAmbirConflict creates AddAmbirConflict with default headers values
func NewAddAmbirConflict() *AddAmbirConflict {

	return &AddAmbirConflict{}
}

// WithPayload adds the payload to the add ambir conflict response
func (o *AddAmbirConflict) WithPayload(payload *models.Error) *AddAmbirConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add ambir conflict response
func (o *AddAmbirConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAmbirConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAmbirGoneCode is the HTTP code returned for type AddAmbirGone
const AddAmbirGoneCode int = 410

/*AddAmbirGone That user (password and name) does not exist

swagger:response addAmbirGone
*/
type AddAmbirGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAmbirGone creates AddAmbirGone with default headers values
func NewAddAmbirGone() *AddAmbirGone {

	return &AddAmbirGone{}
}

// WithPayload adds the payload to the add ambir gone response
func (o *AddAmbirGone) WithPayload(payload *models.Error) *AddAmbirGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add ambir gone response
func (o *AddAmbirGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAmbirGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAmbirInternalServerErrorCode is the HTTP code returned for type AddAmbirInternalServerError
const AddAmbirInternalServerErrorCode int = 500

/*AddAmbirInternalServerError Internal error

swagger:response addAmbirInternalServerError
*/
type AddAmbirInternalServerError struct {
}

// NewAddAmbirInternalServerError creates AddAmbirInternalServerError with default headers values
func NewAddAmbirInternalServerError() *AddAmbirInternalServerError {

	return &AddAmbirInternalServerError{}
}

// WriteResponse to the client
func (o *AddAmbirInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
