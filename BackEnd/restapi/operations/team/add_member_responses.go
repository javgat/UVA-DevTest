// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddMemberOKCode is the HTTP code returned for type AddMemberOK
const AddMemberOKCode int = 200

/*AddMemberOK User added to team

swagger:response addMemberOK
*/
type AddMemberOK struct {
}

// NewAddMemberOK creates AddMemberOK with default headers values
func NewAddMemberOK() *AddMemberOK {

	return &AddMemberOK{}
}

// WriteResponse to the client
func (o *AddMemberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddMemberBadRequestCode is the HTTP code returned for type AddMemberBadRequest
const AddMemberBadRequestCode int = 400

/*AddMemberBadRequest Incorrect Request, or invalida data

swagger:response addMemberBadRequest
*/
type AddMemberBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddMemberBadRequest creates AddMemberBadRequest with default headers values
func NewAddMemberBadRequest() *AddMemberBadRequest {

	return &AddMemberBadRequest{}
}

// WithPayload adds the payload to the add member bad request response
func (o *AddMemberBadRequest) WithPayload(payload *models.Error) *AddMemberBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add member bad request response
func (o *AddMemberBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddMemberBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddMemberForbiddenCode is the HTTP code returned for type AddMemberForbidden
const AddMemberForbiddenCode int = 403

/*AddMemberForbidden Not authorized to this content

swagger:response addMemberForbidden
*/
type AddMemberForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddMemberForbidden creates AddMemberForbidden with default headers values
func NewAddMemberForbidden() *AddMemberForbidden {

	return &AddMemberForbidden{}
}

// WithPayload adds the payload to the add member forbidden response
func (o *AddMemberForbidden) WithPayload(payload *models.Error) *AddMemberForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add member forbidden response
func (o *AddMemberForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddMemberForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddMemberConflictCode is the HTTP code returned for type AddMemberConflict
const AddMemberConflictCode int = 409

/*AddMemberConflict A user with same username/email already exists

swagger:response addMemberConflict
*/
type AddMemberConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddMemberConflict creates AddMemberConflict with default headers values
func NewAddMemberConflict() *AddMemberConflict {

	return &AddMemberConflict{}
}

// WithPayload adds the payload to the add member conflict response
func (o *AddMemberConflict) WithPayload(payload *models.Error) *AddMemberConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add member conflict response
func (o *AddMemberConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddMemberConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddMemberGoneCode is the HTTP code returned for type AddMemberGone
const AddMemberGoneCode int = 410

/*AddMemberGone That user (password and name) does not exist

swagger:response addMemberGone
*/
type AddMemberGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddMemberGone creates AddMemberGone with default headers values
func NewAddMemberGone() *AddMemberGone {

	return &AddMemberGone{}
}

// WithPayload adds the payload to the add member gone response
func (o *AddMemberGone) WithPayload(payload *models.Error) *AddMemberGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add member gone response
func (o *AddMemberGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddMemberGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddMemberInternalServerErrorCode is the HTTP code returned for type AddMemberInternalServerError
const AddMemberInternalServerErrorCode int = 500

/*AddMemberInternalServerError Internal error

swagger:response addMemberInternalServerError
*/
type AddMemberInternalServerError struct {
}

// NewAddMemberInternalServerError creates AddMemberInternalServerError with default headers values
func NewAddMemberInternalServerError() *AddMemberInternalServerError {

	return &AddMemberInternalServerError{}
}

// WriteResponse to the client
func (o *AddMemberInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
