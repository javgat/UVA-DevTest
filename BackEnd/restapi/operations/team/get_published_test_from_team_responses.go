// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublishedTestFromTeamOKCode is the HTTP code returned for type GetPublishedTestFromTeamOK
const GetPublishedTestFromTeamOKCode int = 200

/*GetPublishedTestFromTeamOK publishedTest found

swagger:response getPublishedTestFromTeamOK
*/
type GetPublishedTestFromTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.Test `json:"body,omitempty"`
}

// NewGetPublishedTestFromTeamOK creates GetPublishedTestFromTeamOK with default headers values
func NewGetPublishedTestFromTeamOK() *GetPublishedTestFromTeamOK {

	return &GetPublishedTestFromTeamOK{}
}

// WithPayload adds the payload to the get published test from team o k response
func (o *GetPublishedTestFromTeamOK) WithPayload(payload *models.Test) *GetPublishedTestFromTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from team o k response
func (o *GetPublishedTestFromTeamOK) SetPayload(payload *models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromTeamBadRequestCode is the HTTP code returned for type GetPublishedTestFromTeamBadRequest
const GetPublishedTestFromTeamBadRequestCode int = 400

/*GetPublishedTestFromTeamBadRequest Incorrect Request, or invalida data

swagger:response getPublishedTestFromTeamBadRequest
*/
type GetPublishedTestFromTeamBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromTeamBadRequest creates GetPublishedTestFromTeamBadRequest with default headers values
func NewGetPublishedTestFromTeamBadRequest() *GetPublishedTestFromTeamBadRequest {

	return &GetPublishedTestFromTeamBadRequest{}
}

// WithPayload adds the payload to the get published test from team bad request response
func (o *GetPublishedTestFromTeamBadRequest) WithPayload(payload *models.Error) *GetPublishedTestFromTeamBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from team bad request response
func (o *GetPublishedTestFromTeamBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromTeamBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromTeamForbiddenCode is the HTTP code returned for type GetPublishedTestFromTeamForbidden
const GetPublishedTestFromTeamForbiddenCode int = 403

/*GetPublishedTestFromTeamForbidden Not authorized to this content

swagger:response getPublishedTestFromTeamForbidden
*/
type GetPublishedTestFromTeamForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromTeamForbidden creates GetPublishedTestFromTeamForbidden with default headers values
func NewGetPublishedTestFromTeamForbidden() *GetPublishedTestFromTeamForbidden {

	return &GetPublishedTestFromTeamForbidden{}
}

// WithPayload adds the payload to the get published test from team forbidden response
func (o *GetPublishedTestFromTeamForbidden) WithPayload(payload *models.Error) *GetPublishedTestFromTeamForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from team forbidden response
func (o *GetPublishedTestFromTeamForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromTeamForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromTeamGoneCode is the HTTP code returned for type GetPublishedTestFromTeamGone
const GetPublishedTestFromTeamGoneCode int = 410

/*GetPublishedTestFromTeamGone That user (password and name) does not exist

swagger:response getPublishedTestFromTeamGone
*/
type GetPublishedTestFromTeamGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromTeamGone creates GetPublishedTestFromTeamGone with default headers values
func NewGetPublishedTestFromTeamGone() *GetPublishedTestFromTeamGone {

	return &GetPublishedTestFromTeamGone{}
}

// WithPayload adds the payload to the get published test from team gone response
func (o *GetPublishedTestFromTeamGone) WithPayload(payload *models.Error) *GetPublishedTestFromTeamGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from team gone response
func (o *GetPublishedTestFromTeamGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromTeamGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromTeamInternalServerErrorCode is the HTTP code returned for type GetPublishedTestFromTeamInternalServerError
const GetPublishedTestFromTeamInternalServerErrorCode int = 500

/*GetPublishedTestFromTeamInternalServerError Internal error

swagger:response getPublishedTestFromTeamInternalServerError
*/
type GetPublishedTestFromTeamInternalServerError struct {
}

// NewGetPublishedTestFromTeamInternalServerError creates GetPublishedTestFromTeamInternalServerError with default headers values
func NewGetPublishedTestFromTeamInternalServerError() *GetPublishedTestFromTeamInternalServerError {

	return &GetPublishedTestFromTeamInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublishedTestFromTeamInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
