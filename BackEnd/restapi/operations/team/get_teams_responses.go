// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTeamsOKCode is the HTTP code returned for type GetTeamsOK
const GetTeamsOKCode int = 200

/*GetTeamsOK teams found

swagger:response getTeamsOK
*/
type GetTeamsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Team `json:"body,omitempty"`
}

// NewGetTeamsOK creates GetTeamsOK with default headers values
func NewGetTeamsOK() *GetTeamsOK {

	return &GetTeamsOK{}
}

// WithPayload adds the payload to the get teams o k response
func (o *GetTeamsOK) WithPayload(payload []*models.Team) *GetTeamsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teams o k response
func (o *GetTeamsOK) SetPayload(payload []*models.Team) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Team, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetTeamsBadRequestCode is the HTTP code returned for type GetTeamsBadRequest
const GetTeamsBadRequestCode int = 400

/*GetTeamsBadRequest Incorrect Request, or invalida data

swagger:response getTeamsBadRequest
*/
type GetTeamsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamsBadRequest creates GetTeamsBadRequest with default headers values
func NewGetTeamsBadRequest() *GetTeamsBadRequest {

	return &GetTeamsBadRequest{}
}

// WithPayload adds the payload to the get teams bad request response
func (o *GetTeamsBadRequest) WithPayload(payload *models.Error) *GetTeamsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teams bad request response
func (o *GetTeamsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamsForbiddenCode is the HTTP code returned for type GetTeamsForbidden
const GetTeamsForbiddenCode int = 403

/*GetTeamsForbidden Not authorized to this content

swagger:response getTeamsForbidden
*/
type GetTeamsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamsForbidden creates GetTeamsForbidden with default headers values
func NewGetTeamsForbidden() *GetTeamsForbidden {

	return &GetTeamsForbidden{}
}

// WithPayload adds the payload to the get teams forbidden response
func (o *GetTeamsForbidden) WithPayload(payload *models.Error) *GetTeamsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teams forbidden response
func (o *GetTeamsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamsInternalServerErrorCode is the HTTP code returned for type GetTeamsInternalServerError
const GetTeamsInternalServerErrorCode int = 500

/*GetTeamsInternalServerError Internal error

swagger:response getTeamsInternalServerError
*/
type GetTeamsInternalServerError struct {
}

// NewGetTeamsInternalServerError creates GetTeamsInternalServerError with default headers values
func NewGetTeamsInternalServerError() *GetTeamsInternalServerError {

	return &GetTeamsInternalServerError{}
}

// WriteResponse to the client
func (o *GetTeamsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
