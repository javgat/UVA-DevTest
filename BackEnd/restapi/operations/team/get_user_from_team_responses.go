// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetUserFromTeamOKCode is the HTTP code returned for type GetUserFromTeamOK
const GetUserFromTeamOKCode int = 200

/*GetUserFromTeamOK user found

swagger:response getUserFromTeamOK
*/
type GetUserFromTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewGetUserFromTeamOK creates GetUserFromTeamOK with default headers values
func NewGetUserFromTeamOK() *GetUserFromTeamOK {

	return &GetUserFromTeamOK{}
}

// WithPayload adds the payload to the get user from team o k response
func (o *GetUserFromTeamOK) WithPayload(payload *models.User) *GetUserFromTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user from team o k response
func (o *GetUserFromTeamOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserFromTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserFromTeamBadRequestCode is the HTTP code returned for type GetUserFromTeamBadRequest
const GetUserFromTeamBadRequestCode int = 400

/*GetUserFromTeamBadRequest Incorrect Request, or invalida data

swagger:response getUserFromTeamBadRequest
*/
type GetUserFromTeamBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserFromTeamBadRequest creates GetUserFromTeamBadRequest with default headers values
func NewGetUserFromTeamBadRequest() *GetUserFromTeamBadRequest {

	return &GetUserFromTeamBadRequest{}
}

// WithPayload adds the payload to the get user from team bad request response
func (o *GetUserFromTeamBadRequest) WithPayload(payload *models.Error) *GetUserFromTeamBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user from team bad request response
func (o *GetUserFromTeamBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserFromTeamBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserFromTeamForbiddenCode is the HTTP code returned for type GetUserFromTeamForbidden
const GetUserFromTeamForbiddenCode int = 403

/*GetUserFromTeamForbidden Not authorized to this content

swagger:response getUserFromTeamForbidden
*/
type GetUserFromTeamForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserFromTeamForbidden creates GetUserFromTeamForbidden with default headers values
func NewGetUserFromTeamForbidden() *GetUserFromTeamForbidden {

	return &GetUserFromTeamForbidden{}
}

// WithPayload adds the payload to the get user from team forbidden response
func (o *GetUserFromTeamForbidden) WithPayload(payload *models.Error) *GetUserFromTeamForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user from team forbidden response
func (o *GetUserFromTeamForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserFromTeamForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserFromTeamGoneCode is the HTTP code returned for type GetUserFromTeamGone
const GetUserFromTeamGoneCode int = 410

/*GetUserFromTeamGone That user (password and name) does not exist

swagger:response getUserFromTeamGone
*/
type GetUserFromTeamGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUserFromTeamGone creates GetUserFromTeamGone with default headers values
func NewGetUserFromTeamGone() *GetUserFromTeamGone {

	return &GetUserFromTeamGone{}
}

// WithPayload adds the payload to the get user from team gone response
func (o *GetUserFromTeamGone) WithPayload(payload *models.Error) *GetUserFromTeamGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get user from team gone response
func (o *GetUserFromTeamGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUserFromTeamGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUserFromTeamInternalServerErrorCode is the HTTP code returned for type GetUserFromTeamInternalServerError
const GetUserFromTeamInternalServerErrorCode int = 500

/*GetUserFromTeamInternalServerError Internal error

swagger:response getUserFromTeamInternalServerError
*/
type GetUserFromTeamInternalServerError struct {
}

// NewGetUserFromTeamInternalServerError creates GetUserFromTeamInternalServerError with default headers values
func NewGetUserFromTeamInternalServerError() *GetUserFromTeamInternalServerError {

	return &GetUserFromTeamInternalServerError{}
}

// WriteResponse to the client
func (o *GetUserFromTeamInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
