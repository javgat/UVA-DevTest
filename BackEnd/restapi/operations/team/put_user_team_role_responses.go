// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// PutUserTeamRoleOKCode is the HTTP code returned for type PutUserTeamRoleOK
const PutUserTeamRoleOKCode int = 200

/*PutUserTeamRoleOK Role modified

swagger:response putUserTeamRoleOK
*/
type PutUserTeamRoleOK struct {
}

// NewPutUserTeamRoleOK creates PutUserTeamRoleOK with default headers values
func NewPutUserTeamRoleOK() *PutUserTeamRoleOK {

	return &PutUserTeamRoleOK{}
}

// WriteResponse to the client
func (o *PutUserTeamRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutUserTeamRoleBadRequestCode is the HTTP code returned for type PutUserTeamRoleBadRequest
const PutUserTeamRoleBadRequestCode int = 400

/*PutUserTeamRoleBadRequest Incorrect Request, or invalida data

swagger:response putUserTeamRoleBadRequest
*/
type PutUserTeamRoleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserTeamRoleBadRequest creates PutUserTeamRoleBadRequest with default headers values
func NewPutUserTeamRoleBadRequest() *PutUserTeamRoleBadRequest {

	return &PutUserTeamRoleBadRequest{}
}

// WithPayload adds the payload to the put user team role bad request response
func (o *PutUserTeamRoleBadRequest) WithPayload(payload *models.Error) *PutUserTeamRoleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user team role bad request response
func (o *PutUserTeamRoleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserTeamRoleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserTeamRoleForbiddenCode is the HTTP code returned for type PutUserTeamRoleForbidden
const PutUserTeamRoleForbiddenCode int = 403

/*PutUserTeamRoleForbidden Not authorized to this content

swagger:response putUserTeamRoleForbidden
*/
type PutUserTeamRoleForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserTeamRoleForbidden creates PutUserTeamRoleForbidden with default headers values
func NewPutUserTeamRoleForbidden() *PutUserTeamRoleForbidden {

	return &PutUserTeamRoleForbidden{}
}

// WithPayload adds the payload to the put user team role forbidden response
func (o *PutUserTeamRoleForbidden) WithPayload(payload *models.Error) *PutUserTeamRoleForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user team role forbidden response
func (o *PutUserTeamRoleForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserTeamRoleForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserTeamRoleGoneCode is the HTTP code returned for type PutUserTeamRoleGone
const PutUserTeamRoleGoneCode int = 410

/*PutUserTeamRoleGone That user (password and name) does not exist

swagger:response putUserTeamRoleGone
*/
type PutUserTeamRoleGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUserTeamRoleGone creates PutUserTeamRoleGone with default headers values
func NewPutUserTeamRoleGone() *PutUserTeamRoleGone {

	return &PutUserTeamRoleGone{}
}

// WithPayload adds the payload to the put user team role gone response
func (o *PutUserTeamRoleGone) WithPayload(payload *models.Error) *PutUserTeamRoleGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user team role gone response
func (o *PutUserTeamRoleGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserTeamRoleGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserTeamRoleInternalServerErrorCode is the HTTP code returned for type PutUserTeamRoleInternalServerError
const PutUserTeamRoleInternalServerErrorCode int = 500

/*PutUserTeamRoleInternalServerError Internal error

swagger:response putUserTeamRoleInternalServerError
*/
type PutUserTeamRoleInternalServerError struct {
}

// NewPutUserTeamRoleInternalServerError creates PutUserTeamRoleInternalServerError with default headers values
func NewPutUserTeamRoleInternalServerError() *PutUserTeamRoleInternalServerError {

	return &PutUserTeamRoleInternalServerError{}
}

// WriteResponse to the client
func (o *PutUserTeamRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
