// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddTeamToTestOKCode is the HTTP code returned for type AddTeamToTestOK
const AddTeamToTestOKCode int = 200

/*AddTeamToTestOK team added

swagger:response addTeamToTestOK
*/
type AddTeamToTestOK struct {
}

// NewAddTeamToTestOK creates AddTeamToTestOK with default headers values
func NewAddTeamToTestOK() *AddTeamToTestOK {

	return &AddTeamToTestOK{}
}

// WriteResponse to the client
func (o *AddTeamToTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddTeamToTestBadRequestCode is the HTTP code returned for type AddTeamToTestBadRequest
const AddTeamToTestBadRequestCode int = 400

/*AddTeamToTestBadRequest Incorrect Request, or invalida data

swagger:response addTeamToTestBadRequest
*/
type AddTeamToTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToTestBadRequest creates AddTeamToTestBadRequest with default headers values
func NewAddTeamToTestBadRequest() *AddTeamToTestBadRequest {

	return &AddTeamToTestBadRequest{}
}

// WithPayload adds the payload to the add team to test bad request response
func (o *AddTeamToTestBadRequest) WithPayload(payload *models.Error) *AddTeamToTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to test bad request response
func (o *AddTeamToTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToTestForbiddenCode is the HTTP code returned for type AddTeamToTestForbidden
const AddTeamToTestForbiddenCode int = 403

/*AddTeamToTestForbidden Not authorized to this content

swagger:response addTeamToTestForbidden
*/
type AddTeamToTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToTestForbidden creates AddTeamToTestForbidden with default headers values
func NewAddTeamToTestForbidden() *AddTeamToTestForbidden {

	return &AddTeamToTestForbidden{}
}

// WithPayload adds the payload to the add team to test forbidden response
func (o *AddTeamToTestForbidden) WithPayload(payload *models.Error) *AddTeamToTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to test forbidden response
func (o *AddTeamToTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToTestGoneCode is the HTTP code returned for type AddTeamToTestGone
const AddTeamToTestGoneCode int = 410

/*AddTeamToTestGone That user (password and name) does not exist

swagger:response addTeamToTestGone
*/
type AddTeamToTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTeamToTestGone creates AddTeamToTestGone with default headers values
func NewAddTeamToTestGone() *AddTeamToTestGone {

	return &AddTeamToTestGone{}
}

// WithPayload adds the payload to the add team to test gone response
func (o *AddTeamToTestGone) WithPayload(payload *models.Error) *AddTeamToTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add team to test gone response
func (o *AddTeamToTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTeamToTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTeamToTestInternalServerErrorCode is the HTTP code returned for type AddTeamToTestInternalServerError
const AddTeamToTestInternalServerErrorCode int = 500

/*AddTeamToTestInternalServerError Internal error

swagger:response addTeamToTestInternalServerError
*/
type AddTeamToTestInternalServerError struct {
}

// NewAddTeamToTestInternalServerError creates AddTeamToTestInternalServerError with default headers values
func NewAddTeamToTestInternalServerError() *AddTeamToTestInternalServerError {

	return &AddTeamToTestInternalServerError{}
}

// WriteResponse to the client
func (o *AddTeamToTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
