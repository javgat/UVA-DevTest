// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAllTestsOKCode is the HTTP code returned for type GetAllTestsOK
const GetAllTestsOKCode int = 200

/*GetAllTestsOK tests found

swagger:response getAllTestsOK
*/
type GetAllTestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetAllTestsOK creates GetAllTestsOK with default headers values
func NewGetAllTestsOK() *GetAllTestsOK {

	return &GetAllTestsOK{}
}

// WithPayload adds the payload to the get all tests o k response
func (o *GetAllTestsOK) WithPayload(payload []*models.Test) *GetAllTestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tests o k response
func (o *GetAllTestsOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllTestsBadRequestCode is the HTTP code returned for type GetAllTestsBadRequest
const GetAllTestsBadRequestCode int = 400

/*GetAllTestsBadRequest Incorrect Request, or invalida data

swagger:response getAllTestsBadRequest
*/
type GetAllTestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllTestsBadRequest creates GetAllTestsBadRequest with default headers values
func NewGetAllTestsBadRequest() *GetAllTestsBadRequest {

	return &GetAllTestsBadRequest{}
}

// WithPayload adds the payload to the get all tests bad request response
func (o *GetAllTestsBadRequest) WithPayload(payload *models.Error) *GetAllTestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tests bad request response
func (o *GetAllTestsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllTestsForbiddenCode is the HTTP code returned for type GetAllTestsForbidden
const GetAllTestsForbiddenCode int = 403

/*GetAllTestsForbidden Not authorized to this content

swagger:response getAllTestsForbidden
*/
type GetAllTestsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllTestsForbidden creates GetAllTestsForbidden with default headers values
func NewGetAllTestsForbidden() *GetAllTestsForbidden {

	return &GetAllTestsForbidden{}
}

// WithPayload adds the payload to the get all tests forbidden response
func (o *GetAllTestsForbidden) WithPayload(payload *models.Error) *GetAllTestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tests forbidden response
func (o *GetAllTestsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllTestsInternalServerErrorCode is the HTTP code returned for type GetAllTestsInternalServerError
const GetAllTestsInternalServerErrorCode int = 500

/*GetAllTestsInternalServerError Internal error

swagger:response getAllTestsInternalServerError
*/
type GetAllTestsInternalServerError struct {
}

// NewGetAllTestsInternalServerError creates GetAllTestsInternalServerError with default headers values
func NewGetAllTestsInternalServerError() *GetAllTestsInternalServerError {

	return &GetAllTestsInternalServerError{}
}

// WriteResponse to the client
func (o *GetAllTestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
