// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTagFromTestOKCode is the HTTP code returned for type GetTagFromTestOK
const GetTagFromTestOKCode int = 200

/*GetTagFromTestOK tag found

swagger:response getTagFromTestOK
*/
type GetTagFromTestOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tag `json:"body,omitempty"`
}

// NewGetTagFromTestOK creates GetTagFromTestOK with default headers values
func NewGetTagFromTestOK() *GetTagFromTestOK {

	return &GetTagFromTestOK{}
}

// WithPayload adds the payload to the get tag from test o k response
func (o *GetTagFromTestOK) WithPayload(payload *models.Tag) *GetTagFromTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from test o k response
func (o *GetTagFromTestOK) SetPayload(payload *models.Tag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromTestBadRequestCode is the HTTP code returned for type GetTagFromTestBadRequest
const GetTagFromTestBadRequestCode int = 400

/*GetTagFromTestBadRequest Incorrect Request, or invalida data

swagger:response getTagFromTestBadRequest
*/
type GetTagFromTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromTestBadRequest creates GetTagFromTestBadRequest with default headers values
func NewGetTagFromTestBadRequest() *GetTagFromTestBadRequest {

	return &GetTagFromTestBadRequest{}
}

// WithPayload adds the payload to the get tag from test bad request response
func (o *GetTagFromTestBadRequest) WithPayload(payload *models.Error) *GetTagFromTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from test bad request response
func (o *GetTagFromTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromTestForbiddenCode is the HTTP code returned for type GetTagFromTestForbidden
const GetTagFromTestForbiddenCode int = 403

/*GetTagFromTestForbidden Not authorized to this content

swagger:response getTagFromTestForbidden
*/
type GetTagFromTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromTestForbidden creates GetTagFromTestForbidden with default headers values
func NewGetTagFromTestForbidden() *GetTagFromTestForbidden {

	return &GetTagFromTestForbidden{}
}

// WithPayload adds the payload to the get tag from test forbidden response
func (o *GetTagFromTestForbidden) WithPayload(payload *models.Error) *GetTagFromTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from test forbidden response
func (o *GetTagFromTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromTestGoneCode is the HTTP code returned for type GetTagFromTestGone
const GetTagFromTestGoneCode int = 410

/*GetTagFromTestGone That user (password and name) does not exist

swagger:response getTagFromTestGone
*/
type GetTagFromTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTagFromTestGone creates GetTagFromTestGone with default headers values
func NewGetTagFromTestGone() *GetTagFromTestGone {

	return &GetTagFromTestGone{}
}

// WithPayload adds the payload to the get tag from test gone response
func (o *GetTagFromTestGone) WithPayload(payload *models.Error) *GetTagFromTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tag from test gone response
func (o *GetTagFromTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTagFromTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTagFromTestInternalServerErrorCode is the HTTP code returned for type GetTagFromTestInternalServerError
const GetTagFromTestInternalServerErrorCode int = 500

/*GetTagFromTestInternalServerError Internal error

swagger:response getTagFromTestInternalServerError
*/
type GetTagFromTestInternalServerError struct {
}

// NewGetTagFromTestInternalServerError creates GetTagFromTestInternalServerError with default headers values
func NewGetTagFromTestInternalServerError() *GetTagFromTestInternalServerError {

	return &GetTagFromTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetTagFromTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
