// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTestOKCode is the HTTP code returned for type GetTestOK
const GetTestOKCode int = 200

/*GetTestOK Test found

swagger:response getTestOK
*/
type GetTestOK struct {

	/*
	  In: Body
	*/
	Payload *models.Test `json:"body,omitempty"`
}

// NewGetTestOK creates GetTestOK with default headers values
func NewGetTestOK() *GetTestOK {

	return &GetTestOK{}
}

// WithPayload adds the payload to the get test o k response
func (o *GetTestOK) WithPayload(payload *models.Test) *GetTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get test o k response
func (o *GetTestOK) SetPayload(payload *models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestBadRequestCode is the HTTP code returned for type GetTestBadRequest
const GetTestBadRequestCode int = 400

/*GetTestBadRequest Incorrect Request, or invalida data

swagger:response getTestBadRequest
*/
type GetTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestBadRequest creates GetTestBadRequest with default headers values
func NewGetTestBadRequest() *GetTestBadRequest {

	return &GetTestBadRequest{}
}

// WithPayload adds the payload to the get test bad request response
func (o *GetTestBadRequest) WithPayload(payload *models.Error) *GetTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get test bad request response
func (o *GetTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestForbiddenCode is the HTTP code returned for type GetTestForbidden
const GetTestForbiddenCode int = 403

/*GetTestForbidden Not authorized to this content

swagger:response getTestForbidden
*/
type GetTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestForbidden creates GetTestForbidden with default headers values
func NewGetTestForbidden() *GetTestForbidden {

	return &GetTestForbidden{}
}

// WithPayload adds the payload to the get test forbidden response
func (o *GetTestForbidden) WithPayload(payload *models.Error) *GetTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get test forbidden response
func (o *GetTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestGoneCode is the HTTP code returned for type GetTestGone
const GetTestGoneCode int = 410

/*GetTestGone That user (password and name) does not exist

swagger:response getTestGone
*/
type GetTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTestGone creates GetTestGone with default headers values
func NewGetTestGone() *GetTestGone {

	return &GetTestGone{}
}

// WithPayload adds the payload to the get test gone response
func (o *GetTestGone) WithPayload(payload *models.Error) *GetTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get test gone response
func (o *GetTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTestInternalServerErrorCode is the HTTP code returned for type GetTestInternalServerError
const GetTestInternalServerErrorCode int = 500

/*GetTestInternalServerError Internal error

swagger:response getTestInternalServerError
*/
type GetTestInternalServerError struct {
}

// NewGetTestInternalServerError creates GetTestInternalServerError with default headers values
func NewGetTestInternalServerError() *GetTestInternalServerError {

	return &GetTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
