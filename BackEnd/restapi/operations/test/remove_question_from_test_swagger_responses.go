// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// RemoveQuestionFromTestOKCode is the HTTP code returned for type RemoveQuestionFromTestOK
const RemoveQuestionFromTestOKCode int = 200

/*RemoveQuestionFromTestOK Question removed

swagger:response removeQuestionFromTestOK
*/
type RemoveQuestionFromTestOK struct {
}

// NewRemoveQuestionFromTestOK creates RemoveQuestionFromTestOK with default headers values
func NewRemoveQuestionFromTestOK() *RemoveQuestionFromTestOK {

	return &RemoveQuestionFromTestOK{}
}

// WriteResponse to the client
func (o *RemoveQuestionFromTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RemoveQuestionFromTestBadRequestCode is the HTTP code returned for type RemoveQuestionFromTestBadRequest
const RemoveQuestionFromTestBadRequestCode int = 400

/*RemoveQuestionFromTestBadRequest Incorrect Request, or invalida data

swagger:response removeQuestionFromTestBadRequest
*/
type RemoveQuestionFromTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveQuestionFromTestBadRequest creates RemoveQuestionFromTestBadRequest with default headers values
func NewRemoveQuestionFromTestBadRequest() *RemoveQuestionFromTestBadRequest {

	return &RemoveQuestionFromTestBadRequest{}
}

// WithPayload adds the payload to the remove question from test bad request response
func (o *RemoveQuestionFromTestBadRequest) WithPayload(payload *models.Error) *RemoveQuestionFromTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove question from test bad request response
func (o *RemoveQuestionFromTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveQuestionFromTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveQuestionFromTestForbiddenCode is the HTTP code returned for type RemoveQuestionFromTestForbidden
const RemoveQuestionFromTestForbiddenCode int = 403

/*RemoveQuestionFromTestForbidden Not authorized to this content

swagger:response removeQuestionFromTestForbidden
*/
type RemoveQuestionFromTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveQuestionFromTestForbidden creates RemoveQuestionFromTestForbidden with default headers values
func NewRemoveQuestionFromTestForbidden() *RemoveQuestionFromTestForbidden {

	return &RemoveQuestionFromTestForbidden{}
}

// WithPayload adds the payload to the remove question from test forbidden response
func (o *RemoveQuestionFromTestForbidden) WithPayload(payload *models.Error) *RemoveQuestionFromTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove question from test forbidden response
func (o *RemoveQuestionFromTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveQuestionFromTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveQuestionFromTestGoneCode is the HTTP code returned for type RemoveQuestionFromTestGone
const RemoveQuestionFromTestGoneCode int = 410

/*RemoveQuestionFromTestGone That user (password and name) does not exist

swagger:response removeQuestionFromTestGone
*/
type RemoveQuestionFromTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveQuestionFromTestGone creates RemoveQuestionFromTestGone with default headers values
func NewRemoveQuestionFromTestGone() *RemoveQuestionFromTestGone {

	return &RemoveQuestionFromTestGone{}
}

// WithPayload adds the payload to the remove question from test gone response
func (o *RemoveQuestionFromTestGone) WithPayload(payload *models.Error) *RemoveQuestionFromTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove question from test gone response
func (o *RemoveQuestionFromTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveQuestionFromTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveQuestionFromTestInternalServerErrorCode is the HTTP code returned for type RemoveQuestionFromTestInternalServerError
const RemoveQuestionFromTestInternalServerErrorCode int = 500

/*RemoveQuestionFromTestInternalServerError Internal error

swagger:response removeQuestionFromTestInternalServerError
*/
type RemoveQuestionFromTestInternalServerError struct {
}

// NewRemoveQuestionFromTestInternalServerError creates RemoveQuestionFromTestInternalServerError with default headers values
func NewRemoveQuestionFromTestInternalServerError() *RemoveQuestionFromTestInternalServerError {

	return &RemoveQuestionFromTestInternalServerError{}
}

// WriteResponse to the client
func (o *RemoveQuestionFromTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
