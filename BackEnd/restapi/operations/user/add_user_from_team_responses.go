// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// AddUserFromTeamOKCode is the HTTP code returned for type AddUserFromTeamOK
const AddUserFromTeamOKCode int = 200

/*AddUserFromTeamOK User added to team

swagger:response addUserFromTeamOK
*/
type AddUserFromTeamOK struct {
}

// NewAddUserFromTeamOK creates AddUserFromTeamOK with default headers values
func NewAddUserFromTeamOK() *AddUserFromTeamOK {

	return &AddUserFromTeamOK{}
}

// WriteResponse to the client
func (o *AddUserFromTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddUserFromTeamBadRequestCode is the HTTP code returned for type AddUserFromTeamBadRequest
const AddUserFromTeamBadRequestCode int = 400

/*AddUserFromTeamBadRequest Incorrect Request, or invalida data

swagger:response addUserFromTeamBadRequest
*/
type AddUserFromTeamBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserFromTeamBadRequest creates AddUserFromTeamBadRequest with default headers values
func NewAddUserFromTeamBadRequest() *AddUserFromTeamBadRequest {

	return &AddUserFromTeamBadRequest{}
}

// WithPayload adds the payload to the add user from team bad request response
func (o *AddUserFromTeamBadRequest) WithPayload(payload *models.Error) *AddUserFromTeamBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user from team bad request response
func (o *AddUserFromTeamBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserFromTeamBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserFromTeamForbiddenCode is the HTTP code returned for type AddUserFromTeamForbidden
const AddUserFromTeamForbiddenCode int = 403

/*AddUserFromTeamForbidden Not authorized to this content

swagger:response addUserFromTeamForbidden
*/
type AddUserFromTeamForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserFromTeamForbidden creates AddUserFromTeamForbidden with default headers values
func NewAddUserFromTeamForbidden() *AddUserFromTeamForbidden {

	return &AddUserFromTeamForbidden{}
}

// WithPayload adds the payload to the add user from team forbidden response
func (o *AddUserFromTeamForbidden) WithPayload(payload *models.Error) *AddUserFromTeamForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user from team forbidden response
func (o *AddUserFromTeamForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserFromTeamForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserFromTeamConflictCode is the HTTP code returned for type AddUserFromTeamConflict
const AddUserFromTeamConflictCode int = 409

/*AddUserFromTeamConflict A user with same username/email already exists

swagger:response addUserFromTeamConflict
*/
type AddUserFromTeamConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserFromTeamConflict creates AddUserFromTeamConflict with default headers values
func NewAddUserFromTeamConflict() *AddUserFromTeamConflict {

	return &AddUserFromTeamConflict{}
}

// WithPayload adds the payload to the add user from team conflict response
func (o *AddUserFromTeamConflict) WithPayload(payload *models.Error) *AddUserFromTeamConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user from team conflict response
func (o *AddUserFromTeamConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserFromTeamConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserFromTeamGoneCode is the HTTP code returned for type AddUserFromTeamGone
const AddUserFromTeamGoneCode int = 410

/*AddUserFromTeamGone That user (password and name) does not exist

swagger:response addUserFromTeamGone
*/
type AddUserFromTeamGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserFromTeamGone creates AddUserFromTeamGone with default headers values
func NewAddUserFromTeamGone() *AddUserFromTeamGone {

	return &AddUserFromTeamGone{}
}

// WithPayload adds the payload to the add user from team gone response
func (o *AddUserFromTeamGone) WithPayload(payload *models.Error) *AddUserFromTeamGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user from team gone response
func (o *AddUserFromTeamGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserFromTeamGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserFromTeamInternalServerErrorCode is the HTTP code returned for type AddUserFromTeamInternalServerError
const AddUserFromTeamInternalServerErrorCode int = 500

/*AddUserFromTeamInternalServerError Internal error

swagger:response addUserFromTeamInternalServerError
*/
type AddUserFromTeamInternalServerError struct {
}

// NewAddUserFromTeamInternalServerError creates AddUserFromTeamInternalServerError with default headers values
func NewAddUserFromTeamInternalServerError() *AddUserFromTeamInternalServerError {

	return &AddUserFromTeamInternalServerError{}
}

// WriteResponse to the client
func (o *AddUserFromTeamInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
