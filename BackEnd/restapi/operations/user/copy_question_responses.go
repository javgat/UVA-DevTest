// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// CopyQuestionCreatedCode is the HTTP code returned for type CopyQuestionCreated
const CopyQuestionCreatedCode int = 201

/*CopyQuestionCreated question created

swagger:response copyQuestionCreated
*/
type CopyQuestionCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Question `json:"body,omitempty"`
}

// NewCopyQuestionCreated creates CopyQuestionCreated with default headers values
func NewCopyQuestionCreated() *CopyQuestionCreated {

	return &CopyQuestionCreated{}
}

// WithPayload adds the payload to the copy question created response
func (o *CopyQuestionCreated) WithPayload(payload *models.Question) *CopyQuestionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the copy question created response
func (o *CopyQuestionCreated) SetPayload(payload *models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CopyQuestionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CopyQuestionBadRequestCode is the HTTP code returned for type CopyQuestionBadRequest
const CopyQuestionBadRequestCode int = 400

/*CopyQuestionBadRequest Incorrect Request, or invalida data

swagger:response copyQuestionBadRequest
*/
type CopyQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCopyQuestionBadRequest creates CopyQuestionBadRequest with default headers values
func NewCopyQuestionBadRequest() *CopyQuestionBadRequest {

	return &CopyQuestionBadRequest{}
}

// WithPayload adds the payload to the copy question bad request response
func (o *CopyQuestionBadRequest) WithPayload(payload *models.Error) *CopyQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the copy question bad request response
func (o *CopyQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CopyQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CopyQuestionForbiddenCode is the HTTP code returned for type CopyQuestionForbidden
const CopyQuestionForbiddenCode int = 403

/*CopyQuestionForbidden Not authorized to this content

swagger:response copyQuestionForbidden
*/
type CopyQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCopyQuestionForbidden creates CopyQuestionForbidden with default headers values
func NewCopyQuestionForbidden() *CopyQuestionForbidden {

	return &CopyQuestionForbidden{}
}

// WithPayload adds the payload to the copy question forbidden response
func (o *CopyQuestionForbidden) WithPayload(payload *models.Error) *CopyQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the copy question forbidden response
func (o *CopyQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CopyQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CopyQuestionGoneCode is the HTTP code returned for type CopyQuestionGone
const CopyQuestionGoneCode int = 410

/*CopyQuestionGone That resource does not exist

swagger:response copyQuestionGone
*/
type CopyQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCopyQuestionGone creates CopyQuestionGone with default headers values
func NewCopyQuestionGone() *CopyQuestionGone {

	return &CopyQuestionGone{}
}

// WithPayload adds the payload to the copy question gone response
func (o *CopyQuestionGone) WithPayload(payload *models.Error) *CopyQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the copy question gone response
func (o *CopyQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CopyQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CopyQuestionInternalServerErrorCode is the HTTP code returned for type CopyQuestionInternalServerError
const CopyQuestionInternalServerErrorCode int = 500

/*CopyQuestionInternalServerError Internal error

swagger:response copyQuestionInternalServerError
*/
type CopyQuestionInternalServerError struct {
}

// NewCopyQuestionInternalServerError creates CopyQuestionInternalServerError with default headers values
func NewCopyQuestionInternalServerError() *CopyQuestionInternalServerError {

	return &CopyQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *CopyQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
