// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnswerFromUserOKCode is the HTTP code returned for type GetAnswerFromUserOK
const GetAnswerFromUserOKCode int = 200

/*GetAnswerFromUserOK answer found

swagger:response getAnswerFromUserOK
*/
type GetAnswerFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Answer `json:"body,omitempty"`
}

// NewGetAnswerFromUserOK creates GetAnswerFromUserOK with default headers values
func NewGetAnswerFromUserOK() *GetAnswerFromUserOK {

	return &GetAnswerFromUserOK{}
}

// WithPayload adds the payload to the get answer from user o k response
func (o *GetAnswerFromUserOK) WithPayload(payload *models.Answer) *GetAnswerFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answer from user o k response
func (o *GetAnswerFromUserOK) SetPayload(payload *models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswerFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswerFromUserBadRequestCode is the HTTP code returned for type GetAnswerFromUserBadRequest
const GetAnswerFromUserBadRequestCode int = 400

/*GetAnswerFromUserBadRequest Incorrect Request, or invalida data

swagger:response getAnswerFromUserBadRequest
*/
type GetAnswerFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswerFromUserBadRequest creates GetAnswerFromUserBadRequest with default headers values
func NewGetAnswerFromUserBadRequest() *GetAnswerFromUserBadRequest {

	return &GetAnswerFromUserBadRequest{}
}

// WithPayload adds the payload to the get answer from user bad request response
func (o *GetAnswerFromUserBadRequest) WithPayload(payload *models.Error) *GetAnswerFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answer from user bad request response
func (o *GetAnswerFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswerFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswerFromUserForbiddenCode is the HTTP code returned for type GetAnswerFromUserForbidden
const GetAnswerFromUserForbiddenCode int = 403

/*GetAnswerFromUserForbidden Not authorized to this content

swagger:response getAnswerFromUserForbidden
*/
type GetAnswerFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswerFromUserForbidden creates GetAnswerFromUserForbidden with default headers values
func NewGetAnswerFromUserForbidden() *GetAnswerFromUserForbidden {

	return &GetAnswerFromUserForbidden{}
}

// WithPayload adds the payload to the get answer from user forbidden response
func (o *GetAnswerFromUserForbidden) WithPayload(payload *models.Error) *GetAnswerFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answer from user forbidden response
func (o *GetAnswerFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswerFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswerFromUserGoneCode is the HTTP code returned for type GetAnswerFromUserGone
const GetAnswerFromUserGoneCode int = 410

/*GetAnswerFromUserGone That user (password and name) does not exist

swagger:response getAnswerFromUserGone
*/
type GetAnswerFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswerFromUserGone creates GetAnswerFromUserGone with default headers values
func NewGetAnswerFromUserGone() *GetAnswerFromUserGone {

	return &GetAnswerFromUserGone{}
}

// WithPayload adds the payload to the get answer from user gone response
func (o *GetAnswerFromUserGone) WithPayload(payload *models.Error) *GetAnswerFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answer from user gone response
func (o *GetAnswerFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswerFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswerFromUserInternalServerErrorCode is the HTTP code returned for type GetAnswerFromUserInternalServerError
const GetAnswerFromUserInternalServerErrorCode int = 500

/*GetAnswerFromUserInternalServerError Internal error

swagger:response getAnswerFromUserInternalServerError
*/
type GetAnswerFromUserInternalServerError struct {
}

// NewGetAnswerFromUserInternalServerError creates GetAnswerFromUserInternalServerError with default headers values
func NewGetAnswerFromUserInternalServerError() *GetAnswerFromUserInternalServerError {

	return &GetAnswerFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnswerFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
