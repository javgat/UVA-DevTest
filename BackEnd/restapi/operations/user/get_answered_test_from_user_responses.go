// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnsweredTestFromUserOKCode is the HTTP code returned for type GetAnsweredTestFromUserOK
const GetAnsweredTestFromUserOKCode int = 200

/*GetAnsweredTestFromUserOK publishedTest found

swagger:response getAnsweredTestFromUserOK
*/
type GetAnsweredTestFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Test `json:"body,omitempty"`
}

// NewGetAnsweredTestFromUserOK creates GetAnsweredTestFromUserOK with default headers values
func NewGetAnsweredTestFromUserOK() *GetAnsweredTestFromUserOK {

	return &GetAnsweredTestFromUserOK{}
}

// WithPayload adds the payload to the get answered test from user o k response
func (o *GetAnsweredTestFromUserOK) WithPayload(payload *models.Test) *GetAnsweredTestFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered test from user o k response
func (o *GetAnsweredTestFromUserOK) SetPayload(payload *models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestFromUserBadRequestCode is the HTTP code returned for type GetAnsweredTestFromUserBadRequest
const GetAnsweredTestFromUserBadRequestCode int = 400

/*GetAnsweredTestFromUserBadRequest Incorrect Request, or invalida data

swagger:response getAnsweredTestFromUserBadRequest
*/
type GetAnsweredTestFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestFromUserBadRequest creates GetAnsweredTestFromUserBadRequest with default headers values
func NewGetAnsweredTestFromUserBadRequest() *GetAnsweredTestFromUserBadRequest {

	return &GetAnsweredTestFromUserBadRequest{}
}

// WithPayload adds the payload to the get answered test from user bad request response
func (o *GetAnsweredTestFromUserBadRequest) WithPayload(payload *models.Error) *GetAnsweredTestFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered test from user bad request response
func (o *GetAnsweredTestFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestFromUserForbiddenCode is the HTTP code returned for type GetAnsweredTestFromUserForbidden
const GetAnsweredTestFromUserForbiddenCode int = 403

/*GetAnsweredTestFromUserForbidden Not authorized to this content

swagger:response getAnsweredTestFromUserForbidden
*/
type GetAnsweredTestFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestFromUserForbidden creates GetAnsweredTestFromUserForbidden with default headers values
func NewGetAnsweredTestFromUserForbidden() *GetAnsweredTestFromUserForbidden {

	return &GetAnsweredTestFromUserForbidden{}
}

// WithPayload adds the payload to the get answered test from user forbidden response
func (o *GetAnsweredTestFromUserForbidden) WithPayload(payload *models.Error) *GetAnsweredTestFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered test from user forbidden response
func (o *GetAnsweredTestFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestFromUserGoneCode is the HTTP code returned for type GetAnsweredTestFromUserGone
const GetAnsweredTestFromUserGoneCode int = 410

/*GetAnsweredTestFromUserGone That user (password and name) does not exist

swagger:response getAnsweredTestFromUserGone
*/
type GetAnsweredTestFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestFromUserGone creates GetAnsweredTestFromUserGone with default headers values
func NewGetAnsweredTestFromUserGone() *GetAnsweredTestFromUserGone {

	return &GetAnsweredTestFromUserGone{}
}

// WithPayload adds the payload to the get answered test from user gone response
func (o *GetAnsweredTestFromUserGone) WithPayload(payload *models.Error) *GetAnsweredTestFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered test from user gone response
func (o *GetAnsweredTestFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestFromUserInternalServerErrorCode is the HTTP code returned for type GetAnsweredTestFromUserInternalServerError
const GetAnsweredTestFromUserInternalServerErrorCode int = 500

/*GetAnsweredTestFromUserInternalServerError Internal error

swagger:response getAnsweredTestFromUserInternalServerError
*/
type GetAnsweredTestFromUserInternalServerError struct {
}

// NewGetAnsweredTestFromUserInternalServerError creates GetAnsweredTestFromUserInternalServerError with default headers values
func NewGetAnsweredTestFromUserInternalServerError() *GetAnsweredTestFromUserInternalServerError {

	return &GetAnsweredTestFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnsweredTestFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
