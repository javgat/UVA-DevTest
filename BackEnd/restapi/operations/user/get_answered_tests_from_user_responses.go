// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnsweredTestsFromUserOKCode is the HTTP code returned for type GetAnsweredTestsFromUserOK
const GetAnsweredTestsFromUserOKCode int = 200

/*GetAnsweredTestsFromUserOK publishedTests found

swagger:response getAnsweredTestsFromUserOK
*/
type GetAnsweredTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetAnsweredTestsFromUserOK creates GetAnsweredTestsFromUserOK with default headers values
func NewGetAnsweredTestsFromUserOK() *GetAnsweredTestsFromUserOK {

	return &GetAnsweredTestsFromUserOK{}
}

// WithPayload adds the payload to the get answered tests from user o k response
func (o *GetAnsweredTestsFromUserOK) WithPayload(payload []*models.Test) *GetAnsweredTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered tests from user o k response
func (o *GetAnsweredTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAnsweredTestsFromUserBadRequestCode is the HTTP code returned for type GetAnsweredTestsFromUserBadRequest
const GetAnsweredTestsFromUserBadRequestCode int = 400

/*GetAnsweredTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getAnsweredTestsFromUserBadRequest
*/
type GetAnsweredTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestsFromUserBadRequest creates GetAnsweredTestsFromUserBadRequest with default headers values
func NewGetAnsweredTestsFromUserBadRequest() *GetAnsweredTestsFromUserBadRequest {

	return &GetAnsweredTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get answered tests from user bad request response
func (o *GetAnsweredTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetAnsweredTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered tests from user bad request response
func (o *GetAnsweredTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestsFromUserForbiddenCode is the HTTP code returned for type GetAnsweredTestsFromUserForbidden
const GetAnsweredTestsFromUserForbiddenCode int = 403

/*GetAnsweredTestsFromUserForbidden Not authorized to this content

swagger:response getAnsweredTestsFromUserForbidden
*/
type GetAnsweredTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestsFromUserForbidden creates GetAnsweredTestsFromUserForbidden with default headers values
func NewGetAnsweredTestsFromUserForbidden() *GetAnsweredTestsFromUserForbidden {

	return &GetAnsweredTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get answered tests from user forbidden response
func (o *GetAnsweredTestsFromUserForbidden) WithPayload(payload *models.Error) *GetAnsweredTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered tests from user forbidden response
func (o *GetAnsweredTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestsFromUserGoneCode is the HTTP code returned for type GetAnsweredTestsFromUserGone
const GetAnsweredTestsFromUserGoneCode int = 410

/*GetAnsweredTestsFromUserGone That user (password and name) does not exist

swagger:response getAnsweredTestsFromUserGone
*/
type GetAnsweredTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnsweredTestsFromUserGone creates GetAnsweredTestsFromUserGone with default headers values
func NewGetAnsweredTestsFromUserGone() *GetAnsweredTestsFromUserGone {

	return &GetAnsweredTestsFromUserGone{}
}

// WithPayload adds the payload to the get answered tests from user gone response
func (o *GetAnsweredTestsFromUserGone) WithPayload(payload *models.Error) *GetAnsweredTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answered tests from user gone response
func (o *GetAnsweredTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnsweredTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnsweredTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetAnsweredTestsFromUserInternalServerError
const GetAnsweredTestsFromUserInternalServerErrorCode int = 500

/*GetAnsweredTestsFromUserInternalServerError Internal error

swagger:response getAnsweredTestsFromUserInternalServerError
*/
type GetAnsweredTestsFromUserInternalServerError struct {
}

// NewGetAnsweredTestsFromUserInternalServerError creates GetAnsweredTestsFromUserInternalServerError with default headers values
func NewGetAnsweredTestsFromUserInternalServerError() *GetAnsweredTestsFromUserInternalServerError {

	return &GetAnsweredTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnsweredTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
