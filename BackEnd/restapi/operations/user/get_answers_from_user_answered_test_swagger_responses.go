// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetAnswersFromUserAnsweredTestOKCode is the HTTP code returned for type GetAnswersFromUserAnsweredTestOK
const GetAnswersFromUserAnsweredTestOKCode int = 200

/*GetAnswersFromUserAnsweredTestOK answers found

swagger:response getAnswersFromUserAnsweredTestOK
*/
type GetAnswersFromUserAnsweredTestOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetAnswersFromUserAnsweredTestOK creates GetAnswersFromUserAnsweredTestOK with default headers values
func NewGetAnswersFromUserAnsweredTestOK() *GetAnswersFromUserAnsweredTestOK {

	return &GetAnswersFromUserAnsweredTestOK{}
}

// WithPayload adds the payload to the get answers from user answered test o k response
func (o *GetAnswersFromUserAnsweredTestOK) WithPayload(payload []*models.Answer) *GetAnswersFromUserAnsweredTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from user answered test o k response
func (o *GetAnswersFromUserAnsweredTestOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromUserAnsweredTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAnswersFromUserAnsweredTestBadRequestCode is the HTTP code returned for type GetAnswersFromUserAnsweredTestBadRequest
const GetAnswersFromUserAnsweredTestBadRequestCode int = 400

/*GetAnswersFromUserAnsweredTestBadRequest Incorrect Request, or invalida data

swagger:response getAnswersFromUserAnsweredTestBadRequest
*/
type GetAnswersFromUserAnsweredTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromUserAnsweredTestBadRequest creates GetAnswersFromUserAnsweredTestBadRequest with default headers values
func NewGetAnswersFromUserAnsweredTestBadRequest() *GetAnswersFromUserAnsweredTestBadRequest {

	return &GetAnswersFromUserAnsweredTestBadRequest{}
}

// WithPayload adds the payload to the get answers from user answered test bad request response
func (o *GetAnswersFromUserAnsweredTestBadRequest) WithPayload(payload *models.Error) *GetAnswersFromUserAnsweredTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from user answered test bad request response
func (o *GetAnswersFromUserAnsweredTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromUserAnsweredTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromUserAnsweredTestForbiddenCode is the HTTP code returned for type GetAnswersFromUserAnsweredTestForbidden
const GetAnswersFromUserAnsweredTestForbiddenCode int = 403

/*GetAnswersFromUserAnsweredTestForbidden Not authorized to this content

swagger:response getAnswersFromUserAnsweredTestForbidden
*/
type GetAnswersFromUserAnsweredTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromUserAnsweredTestForbidden creates GetAnswersFromUserAnsweredTestForbidden with default headers values
func NewGetAnswersFromUserAnsweredTestForbidden() *GetAnswersFromUserAnsweredTestForbidden {

	return &GetAnswersFromUserAnsweredTestForbidden{}
}

// WithPayload adds the payload to the get answers from user answered test forbidden response
func (o *GetAnswersFromUserAnsweredTestForbidden) WithPayload(payload *models.Error) *GetAnswersFromUserAnsweredTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from user answered test forbidden response
func (o *GetAnswersFromUserAnsweredTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromUserAnsweredTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromUserAnsweredTestGoneCode is the HTTP code returned for type GetAnswersFromUserAnsweredTestGone
const GetAnswersFromUserAnsweredTestGoneCode int = 410

/*GetAnswersFromUserAnsweredTestGone That user (password and name) does not exist

swagger:response getAnswersFromUserAnsweredTestGone
*/
type GetAnswersFromUserAnsweredTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAnswersFromUserAnsweredTestGone creates GetAnswersFromUserAnsweredTestGone with default headers values
func NewGetAnswersFromUserAnsweredTestGone() *GetAnswersFromUserAnsweredTestGone {

	return &GetAnswersFromUserAnsweredTestGone{}
}

// WithPayload adds the payload to the get answers from user answered test gone response
func (o *GetAnswersFromUserAnsweredTestGone) WithPayload(payload *models.Error) *GetAnswersFromUserAnsweredTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get answers from user answered test gone response
func (o *GetAnswersFromUserAnsweredTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAnswersFromUserAnsweredTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAnswersFromUserAnsweredTestInternalServerErrorCode is the HTTP code returned for type GetAnswersFromUserAnsweredTestInternalServerError
const GetAnswersFromUserAnsweredTestInternalServerErrorCode int = 500

/*GetAnswersFromUserAnsweredTestInternalServerError Internal error

swagger:response getAnswersFromUserAnsweredTestInternalServerError
*/
type GetAnswersFromUserAnsweredTestInternalServerError struct {
}

// NewGetAnswersFromUserAnsweredTestInternalServerError creates GetAnswersFromUserAnsweredTestInternalServerError with default headers values
func NewGetAnswersFromUserAnsweredTestInternalServerError() *GetAnswersFromUserAnsweredTestInternalServerError {

	return &GetAnswersFromUserAnsweredTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetAnswersFromUserAnsweredTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
