// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetCorrectedAnswersFromUserAnsweredTestOKCode is the HTTP code returned for type GetCorrectedAnswersFromUserAnsweredTestOK
const GetCorrectedAnswersFromUserAnsweredTestOKCode int = 200

/*GetCorrectedAnswersFromUserAnsweredTestOK answers found

swagger:response getCorrectedAnswersFromUserAnsweredTestOK
*/
type GetCorrectedAnswersFromUserAnsweredTestOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetCorrectedAnswersFromUserAnsweredTestOK creates GetCorrectedAnswersFromUserAnsweredTestOK with default headers values
func NewGetCorrectedAnswersFromUserAnsweredTestOK() *GetCorrectedAnswersFromUserAnsweredTestOK {

	return &GetCorrectedAnswersFromUserAnsweredTestOK{}
}

// WithPayload adds the payload to the get corrected answers from user answered test o k response
func (o *GetCorrectedAnswersFromUserAnsweredTestOK) WithPayload(payload []*models.Answer) *GetCorrectedAnswersFromUserAnsweredTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corrected answers from user answered test o k response
func (o *GetCorrectedAnswersFromUserAnsweredTestOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorrectedAnswersFromUserAnsweredTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetCorrectedAnswersFromUserAnsweredTestBadRequestCode is the HTTP code returned for type GetCorrectedAnswersFromUserAnsweredTestBadRequest
const GetCorrectedAnswersFromUserAnsweredTestBadRequestCode int = 400

/*GetCorrectedAnswersFromUserAnsweredTestBadRequest Incorrect Request, or invalida data

swagger:response getCorrectedAnswersFromUserAnsweredTestBadRequest
*/
type GetCorrectedAnswersFromUserAnsweredTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCorrectedAnswersFromUserAnsweredTestBadRequest creates GetCorrectedAnswersFromUserAnsweredTestBadRequest with default headers values
func NewGetCorrectedAnswersFromUserAnsweredTestBadRequest() *GetCorrectedAnswersFromUserAnsweredTestBadRequest {

	return &GetCorrectedAnswersFromUserAnsweredTestBadRequest{}
}

// WithPayload adds the payload to the get corrected answers from user answered test bad request response
func (o *GetCorrectedAnswersFromUserAnsweredTestBadRequest) WithPayload(payload *models.Error) *GetCorrectedAnswersFromUserAnsweredTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corrected answers from user answered test bad request response
func (o *GetCorrectedAnswersFromUserAnsweredTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorrectedAnswersFromUserAnsweredTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorrectedAnswersFromUserAnsweredTestForbiddenCode is the HTTP code returned for type GetCorrectedAnswersFromUserAnsweredTestForbidden
const GetCorrectedAnswersFromUserAnsweredTestForbiddenCode int = 403

/*GetCorrectedAnswersFromUserAnsweredTestForbidden Not authorized to this content

swagger:response getCorrectedAnswersFromUserAnsweredTestForbidden
*/
type GetCorrectedAnswersFromUserAnsweredTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCorrectedAnswersFromUserAnsweredTestForbidden creates GetCorrectedAnswersFromUserAnsweredTestForbidden with default headers values
func NewGetCorrectedAnswersFromUserAnsweredTestForbidden() *GetCorrectedAnswersFromUserAnsweredTestForbidden {

	return &GetCorrectedAnswersFromUserAnsweredTestForbidden{}
}

// WithPayload adds the payload to the get corrected answers from user answered test forbidden response
func (o *GetCorrectedAnswersFromUserAnsweredTestForbidden) WithPayload(payload *models.Error) *GetCorrectedAnswersFromUserAnsweredTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corrected answers from user answered test forbidden response
func (o *GetCorrectedAnswersFromUserAnsweredTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorrectedAnswersFromUserAnsweredTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorrectedAnswersFromUserAnsweredTestGoneCode is the HTTP code returned for type GetCorrectedAnswersFromUserAnsweredTestGone
const GetCorrectedAnswersFromUserAnsweredTestGoneCode int = 410

/*GetCorrectedAnswersFromUserAnsweredTestGone That resource does not exist

swagger:response getCorrectedAnswersFromUserAnsweredTestGone
*/
type GetCorrectedAnswersFromUserAnsweredTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCorrectedAnswersFromUserAnsweredTestGone creates GetCorrectedAnswersFromUserAnsweredTestGone with default headers values
func NewGetCorrectedAnswersFromUserAnsweredTestGone() *GetCorrectedAnswersFromUserAnsweredTestGone {

	return &GetCorrectedAnswersFromUserAnsweredTestGone{}
}

// WithPayload adds the payload to the get corrected answers from user answered test gone response
func (o *GetCorrectedAnswersFromUserAnsweredTestGone) WithPayload(payload *models.Error) *GetCorrectedAnswersFromUserAnsweredTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corrected answers from user answered test gone response
func (o *GetCorrectedAnswersFromUserAnsweredTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorrectedAnswersFromUserAnsweredTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorrectedAnswersFromUserAnsweredTestInternalServerErrorCode is the HTTP code returned for type GetCorrectedAnswersFromUserAnsweredTestInternalServerError
const GetCorrectedAnswersFromUserAnsweredTestInternalServerErrorCode int = 500

/*GetCorrectedAnswersFromUserAnsweredTestInternalServerError Internal error

swagger:response getCorrectedAnswersFromUserAnsweredTestInternalServerError
*/
type GetCorrectedAnswersFromUserAnsweredTestInternalServerError struct {
}

// NewGetCorrectedAnswersFromUserAnsweredTestInternalServerError creates GetCorrectedAnswersFromUserAnsweredTestInternalServerError with default headers values
func NewGetCorrectedAnswersFromUserAnsweredTestInternalServerError() *GetCorrectedAnswersFromUserAnsweredTestInternalServerError {

	return &GetCorrectedAnswersFromUserAnsweredTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetCorrectedAnswersFromUserAnsweredTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
