// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPendingTestsFromUserOKCode is the HTTP code returned for type GetPendingTestsFromUserOK
const GetPendingTestsFromUserOKCode int = 200

/*GetPendingTestsFromUserOK publishedTests found

swagger:response getPendingTestsFromUserOK
*/
type GetPendingTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetPendingTestsFromUserOK creates GetPendingTestsFromUserOK with default headers values
func NewGetPendingTestsFromUserOK() *GetPendingTestsFromUserOK {

	return &GetPendingTestsFromUserOK{}
}

// WithPayload adds the payload to the get pending tests from user o k response
func (o *GetPendingTestsFromUserOK) WithPayload(payload []*models.Test) *GetPendingTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending tests from user o k response
func (o *GetPendingTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPendingTestsFromUserBadRequestCode is the HTTP code returned for type GetPendingTestsFromUserBadRequest
const GetPendingTestsFromUserBadRequestCode int = 400

/*GetPendingTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getPendingTestsFromUserBadRequest
*/
type GetPendingTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPendingTestsFromUserBadRequest creates GetPendingTestsFromUserBadRequest with default headers values
func NewGetPendingTestsFromUserBadRequest() *GetPendingTestsFromUserBadRequest {

	return &GetPendingTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get pending tests from user bad request response
func (o *GetPendingTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetPendingTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending tests from user bad request response
func (o *GetPendingTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPendingTestsFromUserForbiddenCode is the HTTP code returned for type GetPendingTestsFromUserForbidden
const GetPendingTestsFromUserForbiddenCode int = 403

/*GetPendingTestsFromUserForbidden Not authorized to this content

swagger:response getPendingTestsFromUserForbidden
*/
type GetPendingTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPendingTestsFromUserForbidden creates GetPendingTestsFromUserForbidden with default headers values
func NewGetPendingTestsFromUserForbidden() *GetPendingTestsFromUserForbidden {

	return &GetPendingTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get pending tests from user forbidden response
func (o *GetPendingTestsFromUserForbidden) WithPayload(payload *models.Error) *GetPendingTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending tests from user forbidden response
func (o *GetPendingTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPendingTestsFromUserGoneCode is the HTTP code returned for type GetPendingTestsFromUserGone
const GetPendingTestsFromUserGoneCode int = 410

/*GetPendingTestsFromUserGone That resource does not exist

swagger:response getPendingTestsFromUserGone
*/
type GetPendingTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPendingTestsFromUserGone creates GetPendingTestsFromUserGone with default headers values
func NewGetPendingTestsFromUserGone() *GetPendingTestsFromUserGone {

	return &GetPendingTestsFromUserGone{}
}

// WithPayload adds the payload to the get pending tests from user gone response
func (o *GetPendingTestsFromUserGone) WithPayload(payload *models.Error) *GetPendingTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending tests from user gone response
func (o *GetPendingTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPendingTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetPendingTestsFromUserInternalServerError
const GetPendingTestsFromUserInternalServerErrorCode int = 500

/*GetPendingTestsFromUserInternalServerError Internal error

swagger:response getPendingTestsFromUserInternalServerError
*/
type GetPendingTestsFromUserInternalServerError struct {
}

// NewGetPendingTestsFromUserInternalServerError creates GetPendingTestsFromUserInternalServerError with default headers values
func NewGetPendingTestsFromUserInternalServerError() *GetPendingTestsFromUserInternalServerError {

	return &GetPendingTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetPendingTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
