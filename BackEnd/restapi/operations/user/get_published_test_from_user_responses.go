// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublishedTestFromUserOKCode is the HTTP code returned for type GetPublishedTestFromUserOK
const GetPublishedTestFromUserOKCode int = 200

/*GetPublishedTestFromUserOK publishedTest found

swagger:response getPublishedTestFromUserOK
*/
type GetPublishedTestFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Test `json:"body,omitempty"`
}

// NewGetPublishedTestFromUserOK creates GetPublishedTestFromUserOK with default headers values
func NewGetPublishedTestFromUserOK() *GetPublishedTestFromUserOK {

	return &GetPublishedTestFromUserOK{}
}

// WithPayload adds the payload to the get published test from user o k response
func (o *GetPublishedTestFromUserOK) WithPayload(payload *models.Test) *GetPublishedTestFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from user o k response
func (o *GetPublishedTestFromUserOK) SetPayload(payload *models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromUserBadRequestCode is the HTTP code returned for type GetPublishedTestFromUserBadRequest
const GetPublishedTestFromUserBadRequestCode int = 400

/*GetPublishedTestFromUserBadRequest Incorrect Request, or invalida data

swagger:response getPublishedTestFromUserBadRequest
*/
type GetPublishedTestFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromUserBadRequest creates GetPublishedTestFromUserBadRequest with default headers values
func NewGetPublishedTestFromUserBadRequest() *GetPublishedTestFromUserBadRequest {

	return &GetPublishedTestFromUserBadRequest{}
}

// WithPayload adds the payload to the get published test from user bad request response
func (o *GetPublishedTestFromUserBadRequest) WithPayload(payload *models.Error) *GetPublishedTestFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from user bad request response
func (o *GetPublishedTestFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromUserForbiddenCode is the HTTP code returned for type GetPublishedTestFromUserForbidden
const GetPublishedTestFromUserForbiddenCode int = 403

/*GetPublishedTestFromUserForbidden Not authorized to this content

swagger:response getPublishedTestFromUserForbidden
*/
type GetPublishedTestFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromUserForbidden creates GetPublishedTestFromUserForbidden with default headers values
func NewGetPublishedTestFromUserForbidden() *GetPublishedTestFromUserForbidden {

	return &GetPublishedTestFromUserForbidden{}
}

// WithPayload adds the payload to the get published test from user forbidden response
func (o *GetPublishedTestFromUserForbidden) WithPayload(payload *models.Error) *GetPublishedTestFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from user forbidden response
func (o *GetPublishedTestFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromUserGoneCode is the HTTP code returned for type GetPublishedTestFromUserGone
const GetPublishedTestFromUserGoneCode int = 410

/*GetPublishedTestFromUserGone That user (password and name) does not exist

swagger:response getPublishedTestFromUserGone
*/
type GetPublishedTestFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestFromUserGone creates GetPublishedTestFromUserGone with default headers values
func NewGetPublishedTestFromUserGone() *GetPublishedTestFromUserGone {

	return &GetPublishedTestFromUserGone{}
}

// WithPayload adds the payload to the get published test from user gone response
func (o *GetPublishedTestFromUserGone) WithPayload(payload *models.Error) *GetPublishedTestFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published test from user gone response
func (o *GetPublishedTestFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestFromUserInternalServerErrorCode is the HTTP code returned for type GetPublishedTestFromUserInternalServerError
const GetPublishedTestFromUserInternalServerErrorCode int = 500

/*GetPublishedTestFromUserInternalServerError Internal error

swagger:response getPublishedTestFromUserInternalServerError
*/
type GetPublishedTestFromUserInternalServerError struct {
}

// NewGetPublishedTestFromUserInternalServerError creates GetPublishedTestFromUserInternalServerError with default headers values
func NewGetPublishedTestFromUserInternalServerError() *GetPublishedTestFromUserInternalServerError {

	return &GetPublishedTestFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublishedTestFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
