// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetPublishedTestsFromUserOKCode is the HTTP code returned for type GetPublishedTestsFromUserOK
const GetPublishedTestsFromUserOKCode int = 200

/*GetPublishedTestsFromUserOK publishedTests found

swagger:response getPublishedTestsFromUserOK
*/
type GetPublishedTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetPublishedTestsFromUserOK creates GetPublishedTestsFromUserOK with default headers values
func NewGetPublishedTestsFromUserOK() *GetPublishedTestsFromUserOK {

	return &GetPublishedTestsFromUserOK{}
}

// WithPayload adds the payload to the get published tests from user o k response
func (o *GetPublishedTestsFromUserOK) WithPayload(payload []*models.Test) *GetPublishedTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published tests from user o k response
func (o *GetPublishedTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPublishedTestsFromUserBadRequestCode is the HTTP code returned for type GetPublishedTestsFromUserBadRequest
const GetPublishedTestsFromUserBadRequestCode int = 400

/*GetPublishedTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getPublishedTestsFromUserBadRequest
*/
type GetPublishedTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestsFromUserBadRequest creates GetPublishedTestsFromUserBadRequest with default headers values
func NewGetPublishedTestsFromUserBadRequest() *GetPublishedTestsFromUserBadRequest {

	return &GetPublishedTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get published tests from user bad request response
func (o *GetPublishedTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetPublishedTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published tests from user bad request response
func (o *GetPublishedTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestsFromUserForbiddenCode is the HTTP code returned for type GetPublishedTestsFromUserForbidden
const GetPublishedTestsFromUserForbiddenCode int = 403

/*GetPublishedTestsFromUserForbidden Not authorized to this content

swagger:response getPublishedTestsFromUserForbidden
*/
type GetPublishedTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestsFromUserForbidden creates GetPublishedTestsFromUserForbidden with default headers values
func NewGetPublishedTestsFromUserForbidden() *GetPublishedTestsFromUserForbidden {

	return &GetPublishedTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get published tests from user forbidden response
func (o *GetPublishedTestsFromUserForbidden) WithPayload(payload *models.Error) *GetPublishedTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published tests from user forbidden response
func (o *GetPublishedTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestsFromUserGoneCode is the HTTP code returned for type GetPublishedTestsFromUserGone
const GetPublishedTestsFromUserGoneCode int = 410

/*GetPublishedTestsFromUserGone That user (password and name) does not exist

swagger:response getPublishedTestsFromUserGone
*/
type GetPublishedTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublishedTestsFromUserGone creates GetPublishedTestsFromUserGone with default headers values
func NewGetPublishedTestsFromUserGone() *GetPublishedTestsFromUserGone {

	return &GetPublishedTestsFromUserGone{}
}

// WithPayload adds the payload to the get published tests from user gone response
func (o *GetPublishedTestsFromUserGone) WithPayload(payload *models.Error) *GetPublishedTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get published tests from user gone response
func (o *GetPublishedTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublishedTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublishedTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetPublishedTestsFromUserInternalServerError
const GetPublishedTestsFromUserInternalServerErrorCode int = 500

/*GetPublishedTestsFromUserInternalServerError Internal error

swagger:response getPublishedTestsFromUserInternalServerError
*/
type GetPublishedTestsFromUserInternalServerError struct {
}

// NewGetPublishedTestsFromUserInternalServerError creates GetPublishedTestsFromUserInternalServerError with default headers values
func NewGetPublishedTestsFromUserInternalServerError() *GetPublishedTestsFromUserInternalServerError {

	return &GetPublishedTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetPublishedTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
