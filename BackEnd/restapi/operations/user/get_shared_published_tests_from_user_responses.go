// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetSharedPublishedTestsFromUserOKCode is the HTTP code returned for type GetSharedPublishedTestsFromUserOK
const GetSharedPublishedTestsFromUserOKCode int = 200

/*GetSharedPublishedTestsFromUserOK tests found

swagger:response getSharedPublishedTestsFromUserOK
*/
type GetSharedPublishedTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetSharedPublishedTestsFromUserOK creates GetSharedPublishedTestsFromUserOK with default headers values
func NewGetSharedPublishedTestsFromUserOK() *GetSharedPublishedTestsFromUserOK {

	return &GetSharedPublishedTestsFromUserOK{}
}

// WithPayload adds the payload to the get shared published tests from user o k response
func (o *GetSharedPublishedTestsFromUserOK) WithPayload(payload []*models.Test) *GetSharedPublishedTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared published tests from user o k response
func (o *GetSharedPublishedTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedPublishedTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSharedPublishedTestsFromUserBadRequestCode is the HTTP code returned for type GetSharedPublishedTestsFromUserBadRequest
const GetSharedPublishedTestsFromUserBadRequestCode int = 400

/*GetSharedPublishedTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getSharedPublishedTestsFromUserBadRequest
*/
type GetSharedPublishedTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedPublishedTestsFromUserBadRequest creates GetSharedPublishedTestsFromUserBadRequest with default headers values
func NewGetSharedPublishedTestsFromUserBadRequest() *GetSharedPublishedTestsFromUserBadRequest {

	return &GetSharedPublishedTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get shared published tests from user bad request response
func (o *GetSharedPublishedTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetSharedPublishedTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared published tests from user bad request response
func (o *GetSharedPublishedTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedPublishedTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedPublishedTestsFromUserForbiddenCode is the HTTP code returned for type GetSharedPublishedTestsFromUserForbidden
const GetSharedPublishedTestsFromUserForbiddenCode int = 403

/*GetSharedPublishedTestsFromUserForbidden Not authorized to this content

swagger:response getSharedPublishedTestsFromUserForbidden
*/
type GetSharedPublishedTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedPublishedTestsFromUserForbidden creates GetSharedPublishedTestsFromUserForbidden with default headers values
func NewGetSharedPublishedTestsFromUserForbidden() *GetSharedPublishedTestsFromUserForbidden {

	return &GetSharedPublishedTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get shared published tests from user forbidden response
func (o *GetSharedPublishedTestsFromUserForbidden) WithPayload(payload *models.Error) *GetSharedPublishedTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared published tests from user forbidden response
func (o *GetSharedPublishedTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedPublishedTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedPublishedTestsFromUserGoneCode is the HTTP code returned for type GetSharedPublishedTestsFromUserGone
const GetSharedPublishedTestsFromUserGoneCode int = 410

/*GetSharedPublishedTestsFromUserGone That resource does not exist

swagger:response getSharedPublishedTestsFromUserGone
*/
type GetSharedPublishedTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedPublishedTestsFromUserGone creates GetSharedPublishedTestsFromUserGone with default headers values
func NewGetSharedPublishedTestsFromUserGone() *GetSharedPublishedTestsFromUserGone {

	return &GetSharedPublishedTestsFromUserGone{}
}

// WithPayload adds the payload to the get shared published tests from user gone response
func (o *GetSharedPublishedTestsFromUserGone) WithPayload(payload *models.Error) *GetSharedPublishedTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared published tests from user gone response
func (o *GetSharedPublishedTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedPublishedTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedPublishedTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetSharedPublishedTestsFromUserInternalServerError
const GetSharedPublishedTestsFromUserInternalServerErrorCode int = 500

/*GetSharedPublishedTestsFromUserInternalServerError Internal error

swagger:response getSharedPublishedTestsFromUserInternalServerError
*/
type GetSharedPublishedTestsFromUserInternalServerError struct {
}

// NewGetSharedPublishedTestsFromUserInternalServerError creates GetSharedPublishedTestsFromUserInternalServerError with default headers values
func NewGetSharedPublishedTestsFromUserInternalServerError() *GetSharedPublishedTestsFromUserInternalServerError {

	return &GetSharedPublishedTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetSharedPublishedTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
