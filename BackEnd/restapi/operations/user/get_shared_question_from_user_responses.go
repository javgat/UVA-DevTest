// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetSharedQuestionFromUserOKCode is the HTTP code returned for type GetSharedQuestionFromUserOK
const GetSharedQuestionFromUserOKCode int = 200

/*GetSharedQuestionFromUserOK question found

swagger:response getSharedQuestionFromUserOK
*/
type GetSharedQuestionFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Question `json:"body,omitempty"`
}

// NewGetSharedQuestionFromUserOK creates GetSharedQuestionFromUserOK with default headers values
func NewGetSharedQuestionFromUserOK() *GetSharedQuestionFromUserOK {

	return &GetSharedQuestionFromUserOK{}
}

// WithPayload adds the payload to the get shared question from user o k response
func (o *GetSharedQuestionFromUserOK) WithPayload(payload *models.Question) *GetSharedQuestionFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared question from user o k response
func (o *GetSharedQuestionFromUserOK) SetPayload(payload *models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionFromUserBadRequestCode is the HTTP code returned for type GetSharedQuestionFromUserBadRequest
const GetSharedQuestionFromUserBadRequestCode int = 400

/*GetSharedQuestionFromUserBadRequest Incorrect Request, or invalida data

swagger:response getSharedQuestionFromUserBadRequest
*/
type GetSharedQuestionFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionFromUserBadRequest creates GetSharedQuestionFromUserBadRequest with default headers values
func NewGetSharedQuestionFromUserBadRequest() *GetSharedQuestionFromUserBadRequest {

	return &GetSharedQuestionFromUserBadRequest{}
}

// WithPayload adds the payload to the get shared question from user bad request response
func (o *GetSharedQuestionFromUserBadRequest) WithPayload(payload *models.Error) *GetSharedQuestionFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared question from user bad request response
func (o *GetSharedQuestionFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionFromUserForbiddenCode is the HTTP code returned for type GetSharedQuestionFromUserForbidden
const GetSharedQuestionFromUserForbiddenCode int = 403

/*GetSharedQuestionFromUserForbidden Not authorized to this content

swagger:response getSharedQuestionFromUserForbidden
*/
type GetSharedQuestionFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionFromUserForbidden creates GetSharedQuestionFromUserForbidden with default headers values
func NewGetSharedQuestionFromUserForbidden() *GetSharedQuestionFromUserForbidden {

	return &GetSharedQuestionFromUserForbidden{}
}

// WithPayload adds the payload to the get shared question from user forbidden response
func (o *GetSharedQuestionFromUserForbidden) WithPayload(payload *models.Error) *GetSharedQuestionFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared question from user forbidden response
func (o *GetSharedQuestionFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionFromUserGoneCode is the HTTP code returned for type GetSharedQuestionFromUserGone
const GetSharedQuestionFromUserGoneCode int = 410

/*GetSharedQuestionFromUserGone That user (password and name) does not exist

swagger:response getSharedQuestionFromUserGone
*/
type GetSharedQuestionFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionFromUserGone creates GetSharedQuestionFromUserGone with default headers values
func NewGetSharedQuestionFromUserGone() *GetSharedQuestionFromUserGone {

	return &GetSharedQuestionFromUserGone{}
}

// WithPayload adds the payload to the get shared question from user gone response
func (o *GetSharedQuestionFromUserGone) WithPayload(payload *models.Error) *GetSharedQuestionFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared question from user gone response
func (o *GetSharedQuestionFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionFromUserInternalServerErrorCode is the HTTP code returned for type GetSharedQuestionFromUserInternalServerError
const GetSharedQuestionFromUserInternalServerErrorCode int = 500

/*GetSharedQuestionFromUserInternalServerError Internal error

swagger:response getSharedQuestionFromUserInternalServerError
*/
type GetSharedQuestionFromUserInternalServerError struct {
}

// NewGetSharedQuestionFromUserInternalServerError creates GetSharedQuestionFromUserInternalServerError with default headers values
func NewGetSharedQuestionFromUserInternalServerError() *GetSharedQuestionFromUserInternalServerError {

	return &GetSharedQuestionFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetSharedQuestionFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
