// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetSharedQuestionsOfUserOKCode is the HTTP code returned for type GetSharedQuestionsOfUserOK
const GetSharedQuestionsOfUserOKCode int = 200

/*GetSharedQuestionsOfUserOK questions found

swagger:response getSharedQuestionsOfUserOK
*/
type GetSharedQuestionsOfUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Question `json:"body,omitempty"`
}

// NewGetSharedQuestionsOfUserOK creates GetSharedQuestionsOfUserOK with default headers values
func NewGetSharedQuestionsOfUserOK() *GetSharedQuestionsOfUserOK {

	return &GetSharedQuestionsOfUserOK{}
}

// WithPayload adds the payload to the get shared questions of user o k response
func (o *GetSharedQuestionsOfUserOK) WithPayload(payload []*models.Question) *GetSharedQuestionsOfUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared questions of user o k response
func (o *GetSharedQuestionsOfUserOK) SetPayload(payload []*models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionsOfUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Question, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSharedQuestionsOfUserBadRequestCode is the HTTP code returned for type GetSharedQuestionsOfUserBadRequest
const GetSharedQuestionsOfUserBadRequestCode int = 400

/*GetSharedQuestionsOfUserBadRequest Incorrect Request, or invalida data

swagger:response getSharedQuestionsOfUserBadRequest
*/
type GetSharedQuestionsOfUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionsOfUserBadRequest creates GetSharedQuestionsOfUserBadRequest with default headers values
func NewGetSharedQuestionsOfUserBadRequest() *GetSharedQuestionsOfUserBadRequest {

	return &GetSharedQuestionsOfUserBadRequest{}
}

// WithPayload adds the payload to the get shared questions of user bad request response
func (o *GetSharedQuestionsOfUserBadRequest) WithPayload(payload *models.Error) *GetSharedQuestionsOfUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared questions of user bad request response
func (o *GetSharedQuestionsOfUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionsOfUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionsOfUserForbiddenCode is the HTTP code returned for type GetSharedQuestionsOfUserForbidden
const GetSharedQuestionsOfUserForbiddenCode int = 403

/*GetSharedQuestionsOfUserForbidden Not authorized to this content

swagger:response getSharedQuestionsOfUserForbidden
*/
type GetSharedQuestionsOfUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionsOfUserForbidden creates GetSharedQuestionsOfUserForbidden with default headers values
func NewGetSharedQuestionsOfUserForbidden() *GetSharedQuestionsOfUserForbidden {

	return &GetSharedQuestionsOfUserForbidden{}
}

// WithPayload adds the payload to the get shared questions of user forbidden response
func (o *GetSharedQuestionsOfUserForbidden) WithPayload(payload *models.Error) *GetSharedQuestionsOfUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared questions of user forbidden response
func (o *GetSharedQuestionsOfUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionsOfUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionsOfUserGoneCode is the HTTP code returned for type GetSharedQuestionsOfUserGone
const GetSharedQuestionsOfUserGoneCode int = 410

/*GetSharedQuestionsOfUserGone That user (password and name) does not exist

swagger:response getSharedQuestionsOfUserGone
*/
type GetSharedQuestionsOfUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedQuestionsOfUserGone creates GetSharedQuestionsOfUserGone with default headers values
func NewGetSharedQuestionsOfUserGone() *GetSharedQuestionsOfUserGone {

	return &GetSharedQuestionsOfUserGone{}
}

// WithPayload adds the payload to the get shared questions of user gone response
func (o *GetSharedQuestionsOfUserGone) WithPayload(payload *models.Error) *GetSharedQuestionsOfUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared questions of user gone response
func (o *GetSharedQuestionsOfUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedQuestionsOfUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedQuestionsOfUserInternalServerErrorCode is the HTTP code returned for type GetSharedQuestionsOfUserInternalServerError
const GetSharedQuestionsOfUserInternalServerErrorCode int = 500

/*GetSharedQuestionsOfUserInternalServerError Internal error

swagger:response getSharedQuestionsOfUserInternalServerError
*/
type GetSharedQuestionsOfUserInternalServerError struct {
}

// NewGetSharedQuestionsOfUserInternalServerError creates GetSharedQuestionsOfUserInternalServerError with default headers values
func NewGetSharedQuestionsOfUserInternalServerError() *GetSharedQuestionsOfUserInternalServerError {

	return &GetSharedQuestionsOfUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetSharedQuestionsOfUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
