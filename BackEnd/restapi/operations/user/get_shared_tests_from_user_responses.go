// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetSharedTestsFromUserOKCode is the HTTP code returned for type GetSharedTestsFromUserOK
const GetSharedTestsFromUserOKCode int = 200

/*GetSharedTestsFromUserOK tests found

swagger:response getSharedTestsFromUserOK
*/
type GetSharedTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetSharedTestsFromUserOK creates GetSharedTestsFromUserOK with default headers values
func NewGetSharedTestsFromUserOK() *GetSharedTestsFromUserOK {

	return &GetSharedTestsFromUserOK{}
}

// WithPayload adds the payload to the get shared tests from user o k response
func (o *GetSharedTestsFromUserOK) WithPayload(payload []*models.Test) *GetSharedTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared tests from user o k response
func (o *GetSharedTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSharedTestsFromUserBadRequestCode is the HTTP code returned for type GetSharedTestsFromUserBadRequest
const GetSharedTestsFromUserBadRequestCode int = 400

/*GetSharedTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getSharedTestsFromUserBadRequest
*/
type GetSharedTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedTestsFromUserBadRequest creates GetSharedTestsFromUserBadRequest with default headers values
func NewGetSharedTestsFromUserBadRequest() *GetSharedTestsFromUserBadRequest {

	return &GetSharedTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get shared tests from user bad request response
func (o *GetSharedTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetSharedTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared tests from user bad request response
func (o *GetSharedTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedTestsFromUserForbiddenCode is the HTTP code returned for type GetSharedTestsFromUserForbidden
const GetSharedTestsFromUserForbiddenCode int = 403

/*GetSharedTestsFromUserForbidden Not authorized to this content

swagger:response getSharedTestsFromUserForbidden
*/
type GetSharedTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedTestsFromUserForbidden creates GetSharedTestsFromUserForbidden with default headers values
func NewGetSharedTestsFromUserForbidden() *GetSharedTestsFromUserForbidden {

	return &GetSharedTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get shared tests from user forbidden response
func (o *GetSharedTestsFromUserForbidden) WithPayload(payload *models.Error) *GetSharedTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared tests from user forbidden response
func (o *GetSharedTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedTestsFromUserGoneCode is the HTTP code returned for type GetSharedTestsFromUserGone
const GetSharedTestsFromUserGoneCode int = 410

/*GetSharedTestsFromUserGone That user (password and name) does not exist

swagger:response getSharedTestsFromUserGone
*/
type GetSharedTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSharedTestsFromUserGone creates GetSharedTestsFromUserGone with default headers values
func NewGetSharedTestsFromUserGone() *GetSharedTestsFromUserGone {

	return &GetSharedTestsFromUserGone{}
}

// WithPayload adds the payload to the get shared tests from user gone response
func (o *GetSharedTestsFromUserGone) WithPayload(payload *models.Error) *GetSharedTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get shared tests from user gone response
func (o *GetSharedTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSharedTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSharedTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetSharedTestsFromUserInternalServerError
const GetSharedTestsFromUserInternalServerErrorCode int = 500

/*GetSharedTestsFromUserInternalServerError Internal error

swagger:response getSharedTestsFromUserInternalServerError
*/
type GetSharedTestsFromUserInternalServerError struct {
}

// NewGetSharedTestsFromUserInternalServerError creates GetSharedTestsFromUserInternalServerError with default headers values
func NewGetSharedTestsFromUserInternalServerError() *GetSharedTestsFromUserInternalServerError {

	return &GetSharedTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetSharedTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
