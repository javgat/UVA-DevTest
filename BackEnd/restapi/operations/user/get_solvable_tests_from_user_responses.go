// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetSolvableTestsFromUserOKCode is the HTTP code returned for type GetSolvableTestsFromUserOK
const GetSolvableTestsFromUserOKCode int = 200

/*GetSolvableTestsFromUserOK publishedTests found

swagger:response getSolvableTestsFromUserOK
*/
type GetSolvableTestsFromUserOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Test `json:"body,omitempty"`
}

// NewGetSolvableTestsFromUserOK creates GetSolvableTestsFromUserOK with default headers values
func NewGetSolvableTestsFromUserOK() *GetSolvableTestsFromUserOK {

	return &GetSolvableTestsFromUserOK{}
}

// WithPayload adds the payload to the get solvable tests from user o k response
func (o *GetSolvableTestsFromUserOK) WithPayload(payload []*models.Test) *GetSolvableTestsFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solvable tests from user o k response
func (o *GetSolvableTestsFromUserOK) SetPayload(payload []*models.Test) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolvableTestsFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Test, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSolvableTestsFromUserBadRequestCode is the HTTP code returned for type GetSolvableTestsFromUserBadRequest
const GetSolvableTestsFromUserBadRequestCode int = 400

/*GetSolvableTestsFromUserBadRequest Incorrect Request, or invalida data

swagger:response getSolvableTestsFromUserBadRequest
*/
type GetSolvableTestsFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolvableTestsFromUserBadRequest creates GetSolvableTestsFromUserBadRequest with default headers values
func NewGetSolvableTestsFromUserBadRequest() *GetSolvableTestsFromUserBadRequest {

	return &GetSolvableTestsFromUserBadRequest{}
}

// WithPayload adds the payload to the get solvable tests from user bad request response
func (o *GetSolvableTestsFromUserBadRequest) WithPayload(payload *models.Error) *GetSolvableTestsFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solvable tests from user bad request response
func (o *GetSolvableTestsFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolvableTestsFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolvableTestsFromUserForbiddenCode is the HTTP code returned for type GetSolvableTestsFromUserForbidden
const GetSolvableTestsFromUserForbiddenCode int = 403

/*GetSolvableTestsFromUserForbidden Not authorized to this content

swagger:response getSolvableTestsFromUserForbidden
*/
type GetSolvableTestsFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolvableTestsFromUserForbidden creates GetSolvableTestsFromUserForbidden with default headers values
func NewGetSolvableTestsFromUserForbidden() *GetSolvableTestsFromUserForbidden {

	return &GetSolvableTestsFromUserForbidden{}
}

// WithPayload adds the payload to the get solvable tests from user forbidden response
func (o *GetSolvableTestsFromUserForbidden) WithPayload(payload *models.Error) *GetSolvableTestsFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solvable tests from user forbidden response
func (o *GetSolvableTestsFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolvableTestsFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolvableTestsFromUserGoneCode is the HTTP code returned for type GetSolvableTestsFromUserGone
const GetSolvableTestsFromUserGoneCode int = 410

/*GetSolvableTestsFromUserGone That resource does not exist

swagger:response getSolvableTestsFromUserGone
*/
type GetSolvableTestsFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSolvableTestsFromUserGone creates GetSolvableTestsFromUserGone with default headers values
func NewGetSolvableTestsFromUserGone() *GetSolvableTestsFromUserGone {

	return &GetSolvableTestsFromUserGone{}
}

// WithPayload adds the payload to the get solvable tests from user gone response
func (o *GetSolvableTestsFromUserGone) WithPayload(payload *models.Error) *GetSolvableTestsFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get solvable tests from user gone response
func (o *GetSolvableTestsFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSolvableTestsFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSolvableTestsFromUserInternalServerErrorCode is the HTTP code returned for type GetSolvableTestsFromUserInternalServerError
const GetSolvableTestsFromUserInternalServerErrorCode int = 500

/*GetSolvableTestsFromUserInternalServerError Internal error

swagger:response getSolvableTestsFromUserInternalServerError
*/
type GetSolvableTestsFromUserInternalServerError struct {
}

// NewGetSolvableTestsFromUserInternalServerError creates GetSolvableTestsFromUserInternalServerError with default headers values
func NewGetSolvableTestsFromUserInternalServerError() *GetSolvableTestsFromUserInternalServerError {

	return &GetSolvableTestsFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetSolvableTestsFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
