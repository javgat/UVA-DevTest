// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetTeamFromUserOKCode is the HTTP code returned for type GetTeamFromUserOK
const GetTeamFromUserOKCode int = 200

/*GetTeamFromUserOK team found

swagger:response getTeamFromUserOK
*/
type GetTeamFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Team `json:"body,omitempty"`
}

// NewGetTeamFromUserOK creates GetTeamFromUserOK with default headers values
func NewGetTeamFromUserOK() *GetTeamFromUserOK {

	return &GetTeamFromUserOK{}
}

// WithPayload adds the payload to the get team from user o k response
func (o *GetTeamFromUserOK) WithPayload(payload *models.Team) *GetTeamFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team from user o k response
func (o *GetTeamFromUserOK) SetPayload(payload *models.Team) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamFromUserBadRequestCode is the HTTP code returned for type GetTeamFromUserBadRequest
const GetTeamFromUserBadRequestCode int = 400

/*GetTeamFromUserBadRequest Incorrect Request, or invalida data

swagger:response getTeamFromUserBadRequest
*/
type GetTeamFromUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamFromUserBadRequest creates GetTeamFromUserBadRequest with default headers values
func NewGetTeamFromUserBadRequest() *GetTeamFromUserBadRequest {

	return &GetTeamFromUserBadRequest{}
}

// WithPayload adds the payload to the get team from user bad request response
func (o *GetTeamFromUserBadRequest) WithPayload(payload *models.Error) *GetTeamFromUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team from user bad request response
func (o *GetTeamFromUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamFromUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamFromUserForbiddenCode is the HTTP code returned for type GetTeamFromUserForbidden
const GetTeamFromUserForbiddenCode int = 403

/*GetTeamFromUserForbidden Not authorized to this content

swagger:response getTeamFromUserForbidden
*/
type GetTeamFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamFromUserForbidden creates GetTeamFromUserForbidden with default headers values
func NewGetTeamFromUserForbidden() *GetTeamFromUserForbidden {

	return &GetTeamFromUserForbidden{}
}

// WithPayload adds the payload to the get team from user forbidden response
func (o *GetTeamFromUserForbidden) WithPayload(payload *models.Error) *GetTeamFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team from user forbidden response
func (o *GetTeamFromUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamFromUserGoneCode is the HTTP code returned for type GetTeamFromUserGone
const GetTeamFromUserGoneCode int = 410

/*GetTeamFromUserGone That user (password and name) does not exist

swagger:response getTeamFromUserGone
*/
type GetTeamFromUserGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamFromUserGone creates GetTeamFromUserGone with default headers values
func NewGetTeamFromUserGone() *GetTeamFromUserGone {

	return &GetTeamFromUserGone{}
}

// WithPayload adds the payload to the get team from user gone response
func (o *GetTeamFromUserGone) WithPayload(payload *models.Error) *GetTeamFromUserGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team from user gone response
func (o *GetTeamFromUserGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamFromUserGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamFromUserInternalServerErrorCode is the HTTP code returned for type GetTeamFromUserInternalServerError
const GetTeamFromUserInternalServerErrorCode int = 500

/*GetTeamFromUserInternalServerError Internal error

swagger:response getTeamFromUserInternalServerError
*/
type GetTeamFromUserInternalServerError struct {
}

// NewGetTeamFromUserInternalServerError creates GetTeamFromUserInternalServerError with default headers values
func NewGetTeamFromUserInternalServerError() *GetTeamFromUserInternalServerError {

	return &GetTeamFromUserInternalServerError{}
}

// WriteResponse to the client
func (o *GetTeamFromUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
