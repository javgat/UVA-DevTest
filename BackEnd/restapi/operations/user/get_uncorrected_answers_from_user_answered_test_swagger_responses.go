// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetUncorrectedAnswersFromUserAnsweredTestOKCode is the HTTP code returned for type GetUncorrectedAnswersFromUserAnsweredTestOK
const GetUncorrectedAnswersFromUserAnsweredTestOKCode int = 200

/*GetUncorrectedAnswersFromUserAnsweredTestOK answers found

swagger:response getUncorrectedAnswersFromUserAnsweredTestOK
*/
type GetUncorrectedAnswersFromUserAnsweredTestOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Answer `json:"body,omitempty"`
}

// NewGetUncorrectedAnswersFromUserAnsweredTestOK creates GetUncorrectedAnswersFromUserAnsweredTestOK with default headers values
func NewGetUncorrectedAnswersFromUserAnsweredTestOK() *GetUncorrectedAnswersFromUserAnsweredTestOK {

	return &GetUncorrectedAnswersFromUserAnsweredTestOK{}
}

// WithPayload adds the payload to the get uncorrected answers from user answered test o k response
func (o *GetUncorrectedAnswersFromUserAnsweredTestOK) WithPayload(payload []*models.Answer) *GetUncorrectedAnswersFromUserAnsweredTestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uncorrected answers from user answered test o k response
func (o *GetUncorrectedAnswersFromUserAnsweredTestOK) SetPayload(payload []*models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUncorrectedAnswersFromUserAnsweredTestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Answer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUncorrectedAnswersFromUserAnsweredTestBadRequestCode is the HTTP code returned for type GetUncorrectedAnswersFromUserAnsweredTestBadRequest
const GetUncorrectedAnswersFromUserAnsweredTestBadRequestCode int = 400

/*GetUncorrectedAnswersFromUserAnsweredTestBadRequest Incorrect Request, or invalida data

swagger:response getUncorrectedAnswersFromUserAnsweredTestBadRequest
*/
type GetUncorrectedAnswersFromUserAnsweredTestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUncorrectedAnswersFromUserAnsweredTestBadRequest creates GetUncorrectedAnswersFromUserAnsweredTestBadRequest with default headers values
func NewGetUncorrectedAnswersFromUserAnsweredTestBadRequest() *GetUncorrectedAnswersFromUserAnsweredTestBadRequest {

	return &GetUncorrectedAnswersFromUserAnsweredTestBadRequest{}
}

// WithPayload adds the payload to the get uncorrected answers from user answered test bad request response
func (o *GetUncorrectedAnswersFromUserAnsweredTestBadRequest) WithPayload(payload *models.Error) *GetUncorrectedAnswersFromUserAnsweredTestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uncorrected answers from user answered test bad request response
func (o *GetUncorrectedAnswersFromUserAnsweredTestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUncorrectedAnswersFromUserAnsweredTestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUncorrectedAnswersFromUserAnsweredTestForbiddenCode is the HTTP code returned for type GetUncorrectedAnswersFromUserAnsweredTestForbidden
const GetUncorrectedAnswersFromUserAnsweredTestForbiddenCode int = 403

/*GetUncorrectedAnswersFromUserAnsweredTestForbidden Not authorized to this content

swagger:response getUncorrectedAnswersFromUserAnsweredTestForbidden
*/
type GetUncorrectedAnswersFromUserAnsweredTestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUncorrectedAnswersFromUserAnsweredTestForbidden creates GetUncorrectedAnswersFromUserAnsweredTestForbidden with default headers values
func NewGetUncorrectedAnswersFromUserAnsweredTestForbidden() *GetUncorrectedAnswersFromUserAnsweredTestForbidden {

	return &GetUncorrectedAnswersFromUserAnsweredTestForbidden{}
}

// WithPayload adds the payload to the get uncorrected answers from user answered test forbidden response
func (o *GetUncorrectedAnswersFromUserAnsweredTestForbidden) WithPayload(payload *models.Error) *GetUncorrectedAnswersFromUserAnsweredTestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uncorrected answers from user answered test forbidden response
func (o *GetUncorrectedAnswersFromUserAnsweredTestForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUncorrectedAnswersFromUserAnsweredTestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUncorrectedAnswersFromUserAnsweredTestGoneCode is the HTTP code returned for type GetUncorrectedAnswersFromUserAnsweredTestGone
const GetUncorrectedAnswersFromUserAnsweredTestGoneCode int = 410

/*GetUncorrectedAnswersFromUserAnsweredTestGone That resource does not exist

swagger:response getUncorrectedAnswersFromUserAnsweredTestGone
*/
type GetUncorrectedAnswersFromUserAnsweredTestGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUncorrectedAnswersFromUserAnsweredTestGone creates GetUncorrectedAnswersFromUserAnsweredTestGone with default headers values
func NewGetUncorrectedAnswersFromUserAnsweredTestGone() *GetUncorrectedAnswersFromUserAnsweredTestGone {

	return &GetUncorrectedAnswersFromUserAnsweredTestGone{}
}

// WithPayload adds the payload to the get uncorrected answers from user answered test gone response
func (o *GetUncorrectedAnswersFromUserAnsweredTestGone) WithPayload(payload *models.Error) *GetUncorrectedAnswersFromUserAnsweredTestGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uncorrected answers from user answered test gone response
func (o *GetUncorrectedAnswersFromUserAnsweredTestGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUncorrectedAnswersFromUserAnsweredTestGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUncorrectedAnswersFromUserAnsweredTestInternalServerErrorCode is the HTTP code returned for type GetUncorrectedAnswersFromUserAnsweredTestInternalServerError
const GetUncorrectedAnswersFromUserAnsweredTestInternalServerErrorCode int = 500

/*GetUncorrectedAnswersFromUserAnsweredTestInternalServerError Internal error

swagger:response getUncorrectedAnswersFromUserAnsweredTestInternalServerError
*/
type GetUncorrectedAnswersFromUserAnsweredTestInternalServerError struct {
}

// NewGetUncorrectedAnswersFromUserAnsweredTestInternalServerError creates GetUncorrectedAnswersFromUserAnsweredTestInternalServerError with default headers values
func NewGetUncorrectedAnswersFromUserAnsweredTestInternalServerError() *GetUncorrectedAnswersFromUserAnsweredTestInternalServerError {

	return &GetUncorrectedAnswersFromUserAnsweredTestInternalServerError{}
}

// WriteResponse to the client
func (o *GetUncorrectedAnswersFromUserAnsweredTestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
