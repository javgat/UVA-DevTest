// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// GetUsersOKCode is the HTTP code returned for type GetUsersOK
const GetUsersOKCode int = 200

/*GetUsersOK users found

swagger:response getUsersOK
*/
type GetUsersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.User `json:"body,omitempty"`
}

// NewGetUsersOK creates GetUsersOK with default headers values
func NewGetUsersOK() *GetUsersOK {

	return &GetUsersOK{}
}

// WithPayload adds the payload to the get users o k response
func (o *GetUsersOK) WithPayload(payload []*models.User) *GetUsersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users o k response
func (o *GetUsersOK) SetPayload(payload []*models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.User, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUsersBadRequestCode is the HTTP code returned for type GetUsersBadRequest
const GetUsersBadRequestCode int = 400

/*GetUsersBadRequest Incorrect Request, or invalida data

swagger:response getUsersBadRequest
*/
type GetUsersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersBadRequest creates GetUsersBadRequest with default headers values
func NewGetUsersBadRequest() *GetUsersBadRequest {

	return &GetUsersBadRequest{}
}

// WithPayload adds the payload to the get users bad request response
func (o *GetUsersBadRequest) WithPayload(payload *models.Error) *GetUsersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users bad request response
func (o *GetUsersBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersForbiddenCode is the HTTP code returned for type GetUsersForbidden
const GetUsersForbiddenCode int = 403

/*GetUsersForbidden Not authorized to this content

swagger:response getUsersForbidden
*/
type GetUsersForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersForbidden creates GetUsersForbidden with default headers values
func NewGetUsersForbidden() *GetUsersForbidden {

	return &GetUsersForbidden{}
}

// WithPayload adds the payload to the get users forbidden response
func (o *GetUsersForbidden) WithPayload(payload *models.Error) *GetUsersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users forbidden response
func (o *GetUsersForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersInternalServerErrorCode is the HTTP code returned for type GetUsersInternalServerError
const GetUsersInternalServerErrorCode int = 500

/*GetUsersInternalServerError Internal error

swagger:response getUsersInternalServerError
*/
type GetUsersInternalServerError struct {
}

// NewGetUsersInternalServerError creates GetUsersInternalServerError with default headers values
func NewGetUsersInternalServerError() *GetUsersInternalServerError {

	return &GetUsersInternalServerError{}
}

// WriteResponse to the client
func (o *GetUsersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
