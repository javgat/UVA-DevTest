// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// PostEmailUserCreatedCode is the HTTP code returned for type PostEmailUserCreated
const PostEmailUserCreatedCode int = 201

/*PostEmailUserCreated user created

swagger:response postEmailUserCreated
*/
type PostEmailUserCreated struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewPostEmailUserCreated creates PostEmailUserCreated with default headers values
func NewPostEmailUserCreated() *PostEmailUserCreated {

	return &PostEmailUserCreated{}
}

// WithPayload adds the payload to the post email user created response
func (o *PostEmailUserCreated) WithPayload(payload *models.User) *PostEmailUserCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post email user created response
func (o *PostEmailUserCreated) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEmailUserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEmailUserBadRequestCode is the HTTP code returned for type PostEmailUserBadRequest
const PostEmailUserBadRequestCode int = 400

/*PostEmailUserBadRequest Incorrect Request, or invalida data

swagger:response postEmailUserBadRequest
*/
type PostEmailUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEmailUserBadRequest creates PostEmailUserBadRequest with default headers values
func NewPostEmailUserBadRequest() *PostEmailUserBadRequest {

	return &PostEmailUserBadRequest{}
}

// WithPayload adds the payload to the post email user bad request response
func (o *PostEmailUserBadRequest) WithPayload(payload *models.Error) *PostEmailUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post email user bad request response
func (o *PostEmailUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEmailUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEmailUserForbiddenCode is the HTTP code returned for type PostEmailUserForbidden
const PostEmailUserForbiddenCode int = 403

/*PostEmailUserForbidden Not authorized to this content

swagger:response postEmailUserForbidden
*/
type PostEmailUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEmailUserForbidden creates PostEmailUserForbidden with default headers values
func NewPostEmailUserForbidden() *PostEmailUserForbidden {

	return &PostEmailUserForbidden{}
}

// WithPayload adds the payload to the post email user forbidden response
func (o *PostEmailUserForbidden) WithPayload(payload *models.Error) *PostEmailUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post email user forbidden response
func (o *PostEmailUserForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEmailUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEmailUserConflictCode is the HTTP code returned for type PostEmailUserConflict
const PostEmailUserConflictCode int = 409

/*PostEmailUserConflict A user with same username/email already exists

swagger:response postEmailUserConflict
*/
type PostEmailUserConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEmailUserConflict creates PostEmailUserConflict with default headers values
func NewPostEmailUserConflict() *PostEmailUserConflict {

	return &PostEmailUserConflict{}
}

// WithPayload adds the payload to the post email user conflict response
func (o *PostEmailUserConflict) WithPayload(payload *models.Error) *PostEmailUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post email user conflict response
func (o *PostEmailUserConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEmailUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEmailUserInternalServerErrorCode is the HTTP code returned for type PostEmailUserInternalServerError
const PostEmailUserInternalServerErrorCode int = 500

/*PostEmailUserInternalServerError Internal error

swagger:response postEmailUserInternalServerError
*/
type PostEmailUserInternalServerError struct {
}

// NewPostEmailUserInternalServerError creates PostEmailUserInternalServerError with default headers values
func NewPostEmailUserInternalServerError() *PostEmailUserInternalServerError {

	return &PostEmailUserInternalServerError{}
}

// WriteResponse to the client
func (o *PostEmailUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
