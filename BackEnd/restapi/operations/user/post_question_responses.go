// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// PostQuestionCreatedCode is the HTTP code returned for type PostQuestionCreated
const PostQuestionCreatedCode int = 201

/*PostQuestionCreated question created

swagger:response postQuestionCreated
*/
type PostQuestionCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Question `json:"body,omitempty"`
}

// NewPostQuestionCreated creates PostQuestionCreated with default headers values
func NewPostQuestionCreated() *PostQuestionCreated {

	return &PostQuestionCreated{}
}

// WithPayload adds the payload to the post question created response
func (o *PostQuestionCreated) WithPayload(payload *models.Question) *PostQuestionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post question created response
func (o *PostQuestionCreated) SetPayload(payload *models.Question) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostQuestionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostQuestionBadRequestCode is the HTTP code returned for type PostQuestionBadRequest
const PostQuestionBadRequestCode int = 400

/*PostQuestionBadRequest Incorrect Request, or invalida data

swagger:response postQuestionBadRequest
*/
type PostQuestionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostQuestionBadRequest creates PostQuestionBadRequest with default headers values
func NewPostQuestionBadRequest() *PostQuestionBadRequest {

	return &PostQuestionBadRequest{}
}

// WithPayload adds the payload to the post question bad request response
func (o *PostQuestionBadRequest) WithPayload(payload *models.Error) *PostQuestionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post question bad request response
func (o *PostQuestionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostQuestionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostQuestionForbiddenCode is the HTTP code returned for type PostQuestionForbidden
const PostQuestionForbiddenCode int = 403

/*PostQuestionForbidden Not authorized to this content

swagger:response postQuestionForbidden
*/
type PostQuestionForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostQuestionForbidden creates PostQuestionForbidden with default headers values
func NewPostQuestionForbidden() *PostQuestionForbidden {

	return &PostQuestionForbidden{}
}

// WithPayload adds the payload to the post question forbidden response
func (o *PostQuestionForbidden) WithPayload(payload *models.Error) *PostQuestionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post question forbidden response
func (o *PostQuestionForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostQuestionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostQuestionGoneCode is the HTTP code returned for type PostQuestionGone
const PostQuestionGoneCode int = 410

/*PostQuestionGone That user (password and name) does not exist

swagger:response postQuestionGone
*/
type PostQuestionGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostQuestionGone creates PostQuestionGone with default headers values
func NewPostQuestionGone() *PostQuestionGone {

	return &PostQuestionGone{}
}

// WithPayload adds the payload to the post question gone response
func (o *PostQuestionGone) WithPayload(payload *models.Error) *PostQuestionGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post question gone response
func (o *PostQuestionGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostQuestionGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostQuestionInternalServerErrorCode is the HTTP code returned for type PostQuestionInternalServerError
const PostQuestionInternalServerErrorCode int = 500

/*PostQuestionInternalServerError Internal error

swagger:response postQuestionInternalServerError
*/
type PostQuestionInternalServerError struct {
}

// NewPostQuestionInternalServerError creates PostQuestionInternalServerError with default headers values
func NewPostQuestionInternalServerError() *PostQuestionInternalServerError {

	return &PostQuestionInternalServerError{}
}

// WriteResponse to the client
func (o *PostQuestionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
