// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// PutPasswordOKCode is the HTTP code returned for type PutPasswordOK
const PutPasswordOKCode int = 200

/*PutPasswordOK Resource password modified correctly

swagger:response putPasswordOK
*/
type PutPasswordOK struct {
}

// NewPutPasswordOK creates PutPasswordOK with default headers values
func NewPutPasswordOK() *PutPasswordOK {

	return &PutPasswordOK{}
}

// WriteResponse to the client
func (o *PutPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutPasswordBadRequestCode is the HTTP code returned for type PutPasswordBadRequest
const PutPasswordBadRequestCode int = 400

/*PutPasswordBadRequest Incorrect Request, or invalida data

swagger:response putPasswordBadRequest
*/
type PutPasswordBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPasswordBadRequest creates PutPasswordBadRequest with default headers values
func NewPutPasswordBadRequest() *PutPasswordBadRequest {

	return &PutPasswordBadRequest{}
}

// WithPayload adds the payload to the put password bad request response
func (o *PutPasswordBadRequest) WithPayload(payload *models.Error) *PutPasswordBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put password bad request response
func (o *PutPasswordBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPasswordBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPasswordForbiddenCode is the HTTP code returned for type PutPasswordForbidden
const PutPasswordForbiddenCode int = 403

/*PutPasswordForbidden Not authorized to this content

swagger:response putPasswordForbidden
*/
type PutPasswordForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPasswordForbidden creates PutPasswordForbidden with default headers values
func NewPutPasswordForbidden() *PutPasswordForbidden {

	return &PutPasswordForbidden{}
}

// WithPayload adds the payload to the put password forbidden response
func (o *PutPasswordForbidden) WithPayload(payload *models.Error) *PutPasswordForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put password forbidden response
func (o *PutPasswordForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPasswordForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPasswordGoneCode is the HTTP code returned for type PutPasswordGone
const PutPasswordGoneCode int = 410

/*PutPasswordGone That user (password and name) does not exist

swagger:response putPasswordGone
*/
type PutPasswordGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutPasswordGone creates PutPasswordGone with default headers values
func NewPutPasswordGone() *PutPasswordGone {

	return &PutPasswordGone{}
}

// WithPayload adds the payload to the put password gone response
func (o *PutPasswordGone) WithPayload(payload *models.Error) *PutPasswordGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put password gone response
func (o *PutPasswordGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPasswordGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutPasswordInternalServerErrorCode is the HTTP code returned for type PutPasswordInternalServerError
const PutPasswordInternalServerErrorCode int = 500

/*PutPasswordInternalServerError Internal error

swagger:response putPasswordInternalServerError
*/
type PutPasswordInternalServerError struct {
}

// NewPutPasswordInternalServerError creates PutPasswordInternalServerError with default headers values
func NewPutPasswordInternalServerError() *PutPasswordInternalServerError {

	return &PutPasswordInternalServerError{}
}

// WriteResponse to the client
func (o *PutPasswordInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
