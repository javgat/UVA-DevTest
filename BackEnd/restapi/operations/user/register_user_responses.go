// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// RegisterUserCreatedCode is the HTTP code returned for type RegisterUserCreated
const RegisterUserCreatedCode int = 201

/*RegisterUserCreated user created

swagger:response registerUserCreated
*/
type RegisterUserCreated struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewRegisterUserCreated creates RegisterUserCreated with default headers values
func NewRegisterUserCreated() *RegisterUserCreated {

	return &RegisterUserCreated{}
}

// WithPayload adds the payload to the register user created response
func (o *RegisterUserCreated) WithPayload(payload *models.User) *RegisterUserCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user created response
func (o *RegisterUserCreated) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterUserBadRequestCode is the HTTP code returned for type RegisterUserBadRequest
const RegisterUserBadRequestCode int = 400

/*RegisterUserBadRequest Incorrect Request, or invalida data

swagger:response registerUserBadRequest
*/
type RegisterUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterUserBadRequest creates RegisterUserBadRequest with default headers values
func NewRegisterUserBadRequest() *RegisterUserBadRequest {

	return &RegisterUserBadRequest{}
}

// WithPayload adds the payload to the register user bad request response
func (o *RegisterUserBadRequest) WithPayload(payload *models.Error) *RegisterUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user bad request response
func (o *RegisterUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterUserConflictCode is the HTTP code returned for type RegisterUserConflict
const RegisterUserConflictCode int = 409

/*RegisterUserConflict A user with same username/email already exists

swagger:response registerUserConflict
*/
type RegisterUserConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterUserConflict creates RegisterUserConflict with default headers values
func NewRegisterUserConflict() *RegisterUserConflict {

	return &RegisterUserConflict{}
}

// WithPayload adds the payload to the register user conflict response
func (o *RegisterUserConflict) WithPayload(payload *models.Error) *RegisterUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user conflict response
func (o *RegisterUserConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterUserInternalServerErrorCode is the HTTP code returned for type RegisterUserInternalServerError
const RegisterUserInternalServerErrorCode int = 500

/*RegisterUserInternalServerError Internal error

swagger:response registerUserInternalServerError
*/
type RegisterUserInternalServerError struct {
}

// NewRegisterUserInternalServerError creates RegisterUserInternalServerError with default headers values
func NewRegisterUserInternalServerError() *RegisterUserInternalServerError {

	return &RegisterUserInternalServerError{}
}

// WriteResponse to the client
func (o *RegisterUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
