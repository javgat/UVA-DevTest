// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"uva-devtest/models"
)

// StartAnswerCreatedCode is the HTTP code returned for type StartAnswerCreated
const StartAnswerCreatedCode int = 201

/*StartAnswerCreated Answer started

swagger:response startAnswerCreated
*/
type StartAnswerCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Answer `json:"body,omitempty"`
}

// NewStartAnswerCreated creates StartAnswerCreated with default headers values
func NewStartAnswerCreated() *StartAnswerCreated {

	return &StartAnswerCreated{}
}

// WithPayload adds the payload to the start answer created response
func (o *StartAnswerCreated) WithPayload(payload *models.Answer) *StartAnswerCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start answer created response
func (o *StartAnswerCreated) SetPayload(payload *models.Answer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAnswerCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartAnswerBadRequestCode is the HTTP code returned for type StartAnswerBadRequest
const StartAnswerBadRequestCode int = 400

/*StartAnswerBadRequest Incorrect Request, or invalida data

swagger:response startAnswerBadRequest
*/
type StartAnswerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartAnswerBadRequest creates StartAnswerBadRequest with default headers values
func NewStartAnswerBadRequest() *StartAnswerBadRequest {

	return &StartAnswerBadRequest{}
}

// WithPayload adds the payload to the start answer bad request response
func (o *StartAnswerBadRequest) WithPayload(payload *models.Error) *StartAnswerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start answer bad request response
func (o *StartAnswerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAnswerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartAnswerForbiddenCode is the HTTP code returned for type StartAnswerForbidden
const StartAnswerForbiddenCode int = 403

/*StartAnswerForbidden Not authorized to this content

swagger:response startAnswerForbidden
*/
type StartAnswerForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartAnswerForbidden creates StartAnswerForbidden with default headers values
func NewStartAnswerForbidden() *StartAnswerForbidden {

	return &StartAnswerForbidden{}
}

// WithPayload adds the payload to the start answer forbidden response
func (o *StartAnswerForbidden) WithPayload(payload *models.Error) *StartAnswerForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start answer forbidden response
func (o *StartAnswerForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAnswerForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartAnswerGoneCode is the HTTP code returned for type StartAnswerGone
const StartAnswerGoneCode int = 410

/*StartAnswerGone That user (password and name) does not exist

swagger:response startAnswerGone
*/
type StartAnswerGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStartAnswerGone creates StartAnswerGone with default headers values
func NewStartAnswerGone() *StartAnswerGone {

	return &StartAnswerGone{}
}

// WithPayload adds the payload to the start answer gone response
func (o *StartAnswerGone) WithPayload(payload *models.Error) *StartAnswerGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the start answer gone response
func (o *StartAnswerGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StartAnswerGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StartAnswerInternalServerErrorCode is the HTTP code returned for type StartAnswerInternalServerError
const StartAnswerInternalServerErrorCode int = 500

/*StartAnswerInternalServerError Internal error

swagger:response startAnswerInternalServerError
*/
type StartAnswerInternalServerError struct {
}

// NewStartAnswerInternalServerError creates StartAnswerInternalServerError with default headers values
func NewStartAnswerInternalServerError() *StartAnswerInternalServerError {

	return &StartAnswerInternalServerError{}
}

// WriteResponse to the client
func (o *StartAnswerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
