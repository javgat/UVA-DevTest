/**
 * DevTest
 * DevTest
 *
 * OpenAPI spec version: 1.0.0
 * Contact: javigaton@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


export interface TipoRol { 
    id: number;
    rolBase: TipoRol.RolBaseEnum;
    nombre: string;
    /**
     * Maximum priority is 0, any greater value represents less priority
     */
    prioridad: number;
    /**
     * true if the users can see PublishedTests
     */
    verPTests: boolean;
    /**
     * true if the users can see Non Published Tests
     */
    verETests: boolean;
    /**
     * true if the users can see Non Published Questions
     */
    verEQuestions: boolean;
    /**
     * true if the users can see Published Questions
     */
    verPQuestions: boolean;
    /**
     * true if the users can see Answers
     */
    verAnswers: boolean;
    /**
     * true if the users can change anothers user TipoRol if its source priority is less important and target is at most equal
     */
    changeRoles: boolean;
    /**
     * true if the users can have teams
     */
    tenerTeams: boolean;
    /**
     * true if the users can have non published questions
     */
    tenerEQuestions: boolean;
    /**
     * true if the users can have non published questions
     */
    tenerETests: boolean;
    /**
     * true if the users can have published tests
     */
    tenerPTests: boolean;
    /**
     * true if the users can administrate PublishedTests
     */
    adminPTests: boolean;
    /**
     * true if the users can administrate Non Published Tests
     */
    adminETests: boolean;
    /**
     * true if the users can administrate Non Published Questions
     */
    adminEQuestions: boolean;
    /**
     * true if the users can administrate Answers
     */
    adminAnswers: boolean;
    /**
     * true if the users can administrate Users
     */
    adminUsers: boolean;
    /**
     * true if the users can administrate Teams
     */
    adminTeams: boolean;
    /**
     * true if the users can administrate Server Configuration parameters
     */
    adminConfiguration: boolean;
    /**
     * true if the users can administrate TipoRol permissions
     */
    adminPermissions: boolean;
    /**
     * true if new users will be this TipoRol at first
     */
    tipoInicial: boolean;
}
export namespace TipoRol {
    export type RolBaseEnum = 'administrador' | 'profesor' | 'estudiante' | 'noRegistrado';
    export const RolBaseEnum = {
        Administrador: 'administrador' as RolBaseEnum,
        Profesor: 'profesor' as RolBaseEnum,
        Estudiante: 'estudiante' as RolBaseEnum,
        NoRegistrado: 'noRegistrado' as RolBaseEnum
    };
}
